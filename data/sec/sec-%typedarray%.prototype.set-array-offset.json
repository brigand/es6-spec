{"id":"sec-%typedarray%.prototype.set-array-offset","html":"\n          <h1><span class=\"secnum\" id=\"sec-22.2.3.22.1\"><a href=\"/sec/sec-%typedarray%.prototype.set-array-offset.html\" title=\"link to this section\">22.2.3.22.1</a></span> %TypedArray%.prototype.set (array [ , offset ] )</h1>\n\n          <p class=\"normalbefore\">Sets multiple values in this <i>TypedArray</i>, reading the values from the object <i>array</i>.\n          The optional <i>offset</i> value indicates the first element index in this <i>TypedArray</i> where values are written.\n          If omitted, it is assumed to be 0.</p>\n\n          <ol class=\"proc\">\n            <li><a href=\"/sec/sec-algorithm-conventions.html\">Assert</a>: <i>array</i> is any <a href=\"/sec/sec-ecmascript-language-types.html\">ECMAScript language value</a> other than an Object with a [[TypedArrayName]]\n                <a href=\"/sec/sec-object-internal-methods-and-internal-slots.html\">internal slot</a>. If it is such an Object, the\n                definition in <a href=\"/sec/sec-%typedarray%.prototype.set-typedarray-offset.html\">22.2.3.22.2</a> applies.</li>\n            <li>Let <i>target</i> be the <b>this</b> value.</li>\n            <li>If <a href=\"/sec/sec-ecmascript-data-types-and-values.html\">Type</a>(<i>target</i>) is not Object, throw a <b>TypeError</b>\n                exception.</li>\n            <li>If <i>target</i> does not have a [[TypedArrayName]] <a href=\"/sec/sec-object-internal-methods-and-internal-slots.html\">internal slot</a>, throw a <b>TypeError</b> exception.</li>\n            <li><a href=\"/sec/sec-algorithm-conventions.html\">Assert</a>: <i>target</i> has a [[ViewedArrayBuffer]] <a href=\"/sec/sec-object-internal-methods-and-internal-slots.html\">internal slot</a>.</li>\n            <li>Let <i>targetOffset</i> be <a href=\"/sec/sec-tointeger.html\">ToInteger</a> (<i>offset</i>).</li>\n            <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>targetOffset</i>).</li>\n            <li>If <i>targetOffset</i> &lt; 0, throw a <b>RangeError</b> exception.</li>\n            <li>Let <i>targetBuffer</i> be the value of <i>target</i>&#x2019;s [[ViewedArrayBuffer]] <a href=\"/sec/sec-object-internal-methods-and-internal-slots.html\">internal slot</a>.</li>\n            <li>If <a href=\"/sec/sec-isdetachedbuffer.html\">IsDetachedBuffer</a>(<i>targetBuffer</i>) is <b>true</b>, throw a\n                <b>TypeError</b> exception.</li>\n            <li>Let <i>targetLength</i> be the value of <i>target</i>&#x2019;s [[ArrayLength]] <a href=\"/sec/sec-object-internal-methods-and-internal-slots.html\">internal slot</a>.</li>\n            <li>Let <i>targetName</i> be the String value of <i>target</i>&#x2019;s [[TypedArrayName]] <a href=\"/sec/sec-object-internal-methods-and-internal-slots.html\">internal slot</a>.</li>\n            <li>Let <i>targetElementSize</i> be the Number value of the Element Size value specified in <a href=\"/sec/table-49.html\">Table\n                49</a> for <i>targetName</i>.</li>\n            <li>Let <i>targetType</i> be the String value of the Element Type value in <a href=\"/sec/table-49.html\">Table 49</a> for\n                <i>targetName</i>.</li>\n            <li>Let <i>targetByteOffset</i> be the value of <i>target</i>&#x2019;s [[ByteOffset]] <a href=\"/sec/sec-object-internal-methods-and-internal-slots.html\">internal slot</a>.</li>\n            <li>Let <i>src</i> be <a href=\"/sec/sec-toobject.html\">ToObject</a>(<i>array</i>).</li>\n            <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>src</i>).</li>\n            <li>Let <i>srcLength</i> be <a href=\"/sec/sec-tolength.html\">ToLength</a>(<a href=\"/sec/sec-get-o-p.html\">Get</a>(<i>src</i>,\n                <code>&quot;length&quot;</code>)).</li>\n            <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>srcLength</i>).</li>\n            <li>If <i>srcLength</i> + <i>targetOffset</i> &gt; <i>targetLength</i>, throw a <b>RangeError</b> exception.</li>\n            <li>Let <i>targetByteIndex</i> be <i>targetOffset</i> &#xD7; <i>targetElementSize</i> + <i>targetByteOffset</i>.</li>\n            <li>Let <i>k</i> be 0.</li>\n            <li>Let <i>limit</i> be <i>targetByteIndex</i> + <i>targetElementSize</i> &#xD7; <i>srcLength</i>.</li>\n            <li>Repeat, while <i>targetByteIndex</i> &lt; <i>limit</i>\n              <ol class=\"block\">\n                <li>Let <i>Pk</i> be <a href=\"/sec/sec-tostring.html\">ToString</a>(<i>k</i>).</li>\n                <li>Let <i>kNumber</i> be <a href=\"/sec/sec-tonumber.html\">ToNumber</a>(<a href=\"/sec/sec-get-o-p.html\">Get</a>(<i>src</i>,\n                    <i>Pk</i>)).</li>\n                <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>kNumber</i>).</li>\n                <li>If <a href=\"/sec/sec-isdetachedbuffer.html\">IsDetachedBuffer</a>(<i>targetBuffer</i>) is <b>true</b>, throw a\n                    <b>TypeError</b> exception.</li>\n                <li>Perform <a href=\"/sec/sec-setvalueinbuffer.html\">SetValueInBuffer</a>(<i>targetBuffer</i>, <i>targetByteIndex</i>,\n                    <i>targetType</i>, <i>kNumber</i>).</li>\n                <li>Set <i>k</i> to <i>k</i> + 1.</li>\n                <li>Set <i>targetByteIndex</i> to <i>targetByteIndex</i> + <i>targetElementSize</i>.</li>\n              </ol>\n            </li>\n            <li>Return <b>undefined</b>.</li>\n          </ol>\n        "}