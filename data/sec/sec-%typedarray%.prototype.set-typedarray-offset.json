{"id":"sec-%typedarray%.prototype.set-typedarray-offset","html":"\n          <h1><span class=\"secnum\" id=\"sec-22.2.3.22.2\"><a href=\"/sec/sec-%typedarray%.prototype.set-typedarray-offset.html\" title=\"link to this section\">22.2.3.22.2</a></span> %TypedArray%.prototype.set(typedArray [, offset ] )</h1>\n\n          <p class=\"normalbefore\">Sets multiple values in this <i>TypedArray</i>, reading the values from the\n          <var>typedArray</var> argument object. The optional <i>offset</i> value indicates the first element index in this\n          <i>TypedArray</i> where values are written. If omitted, it is assumed to be 0.</p>\n\n          <ol class=\"proc\">\n            <li><a href=\"/sec/sec-algorithm-conventions.html\">Assert</a>: <i>typedArray</i> has a [[TypedArrayName]] <a href=\"/sec/sec-object-internal-methods-and-internal-slots.html\">internal slot</a>. If it does not, the definition in <a href=\"/sec/sec-%typedarray%.prototype.set-array-offset.html\">22.2.3.22.1</a> applies.</li>\n            <li>Let <i>target</i> be the <b>this</b> value.</li>\n            <li>If <a href=\"/sec/sec-ecmascript-data-types-and-values.html\">Type</a>(<i>target</i>) is not Object, throw a <b>TypeError</b>\n                exception.</li>\n            <li>If <i>target</i> does not have a [[TypedArrayName]] <a href=\"/sec/sec-object-internal-methods-and-internal-slots.html\">internal slot</a>, throw a <b>TypeError</b> exception.</li>\n            <li><a href=\"/sec/sec-algorithm-conventions.html\">Assert</a>: <i>target</i> has a [[ViewedArrayBuffer]] <a href=\"/sec/sec-object-internal-methods-and-internal-slots.html\">internal slot</a>.</li>\n            <li>Let <i>targetOffset</i> be <a href=\"/sec/sec-tointeger.html\">ToInteger</a> (<i>offset</i>).</li>\n            <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>targetOffset</i>).</li>\n            <li>If <i>targetOffset</i> &lt; 0, throw a <b>RangeError</b> exception.</li>\n            <li>Let <i>targetBuffer</i> be the value of <i>target</i>&#x2019;s [[ViewedArrayBuffer]] <a href=\"/sec/sec-object-internal-methods-and-internal-slots.html\">internal slot</a>.</li>\n            <li>If <a href=\"/sec/sec-isdetachedbuffer.html\">IsDetachedBuffer</a>(<i>targetBuffer</i>) is <b>true</b>, throw a\n                <b>TypeError</b> exception.</li>\n            <li>Let <i>targetLength</i> be the value of <i>target</i>&#x2019;s [[ArrayLength]] <a href=\"/sec/sec-object-internal-methods-and-internal-slots.html\">internal slot</a>.</li>\n            <li>Let <i>srcBuffer</i> be the value of <i>typedArray</i>&#x2019;s [[ViewedArrayBuffer]] <a href=\"/sec/sec-object-internal-methods-and-internal-slots.html\">internal slot</a>.</li>\n            <li>If <a href=\"/sec/sec-isdetachedbuffer.html\">IsDetachedBuffer</a>(<i>srcBuffer</i>) is <b>true</b>, throw a <b>TypeError</b>\n                exception.</li>\n            <li>Let <i>targetName</i> be the String value of <i>target</i>&#x2019;s [[TypedArrayName]] <a href=\"/sec/sec-object-internal-methods-and-internal-slots.html\">internal slot</a>.</li>\n            <li>Let <i>targetType</i> be the String value of the Element Type value in <a href=\"/sec/table-49.html\">Table 49</a> for\n                <i>targetName</i>.</li>\n            <li>Let <i>targetElementSize</i> be the Number value of the Element Size value specified in <a href=\"/sec/table-49.html\">Table\n                49</a> for <i>targetName</i>.</li>\n            <li>Let <i>targetByteOffset</i> be the value of <i>target</i>&#x2019;s [[ByteOffset]] <a href=\"/sec/sec-object-internal-methods-and-internal-slots.html\">internal slot</a>.</li>\n            <li>Let <i>srcName</i> be the String value of <i>typedArray</i>&#x2019;s [[TypedArrayName]] <a href=\"/sec/sec-object-internal-methods-and-internal-slots.html\">internal slot</a>.</li>\n            <li>Let <i>srcType</i> be the String value of the Element Type value in <a href=\"/sec/table-49.html\">Table 49</a> for\n                <i>srcName</i> .</li>\n            <li>Let <i>srcElementSize</i> be the Number value of the Element Size value specified in <a href=\"/sec/table-49.html\">Table\n                49</a> for <i>srcName</i>.</li>\n            <li>Let <i>srcLength</i> be the value of <i>typedArray</i>&#x2019;s [[ArrayLength]] <a href=\"/sec/sec-object-internal-methods-and-internal-slots.html\">internal slot</a>.</li>\n            <li>Let <i>srcByteOffset</i> be the value of <i>typedArray</i>&#x2019;s [[ByteOffset]] <a href=\"/sec/sec-object-internal-methods-and-internal-slots.html\">internal slot</a>.</li>\n            <li>If <i>srcLength</i> + <i>targetOffset</i> &gt; <i>targetLength</i>, throw a <b>RangeError</b> exception.</li>\n            <li>If <a href=\"/sec/sec-samevalue.html\">SameValue</a>(<i>srcBuffer</i>, <i>targetBuffer</i>) is <b>true</b>, then\n              <ol class=\"block\">\n                <li>Let <i>srcBuffer</i> be <a href=\"/sec/sec-clonearraybuffer.html\">CloneArrayBuffer</a>(<i>targetBuffer</i>,\n                    <i>srcByteOffset</i>, %ArrayBuffer%).</li>\n                <li>NOTE:  <span style=\"font-family: Times New Roman\">%ArrayBuffer%</span> is used to clone <span style=\"font-family: Times New Roman\"><i>targetBuffer</i></span> because is it known to not have any observable\n                    side-effects.</li>\n                <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>srcBuffer</i>).</li>\n                <li>Let <i>srcByteIndex</i> be 0.</li>\n              </ol>\n            </li>\n            <li>Else, let <i>srcByteIndex</i> be <i>srcByteOffset</i>.</li>\n            <li>Let <i>targetByteIndex</i> be <i>targetOffset</i> &#xD7; <i>targetElementSize</i> + <i>targetByteOffset</i>.</li>\n            <li>Let <i>limit</i> be <i>targetByteIndex</i> + <i>targetElementSize</i> &#xD7; <i>srcLength</i>.</li>\n            <li>If <a href=\"/sec/sec-samevalue.html\">SameValue</a>(<i>srcType</i>, <i>targetType</i>) is <b>false</b>, then\n              <ol class=\"block\">\n                <li>Repeat, while <i>targetByteIndex</i> &lt; <i>limit</i>\n                  <ol class=\"block\">\n                    <li>Let <i>value</i> be <a href=\"/sec/sec-getvaluefrombuffer.html\">GetValueFromBuffer</a>(<i>srcBuffer</i>,\n                        <i>srcByteIndex</i>, <i>srcType</i>).</li>\n                    <li>Perform <a href=\"/sec/sec-setvalueinbuffer.html\">SetValueInBuffer</a> (<i>targetBuffer</i>, <i>targetByteIndex</i>,\n                        <i>targetType</i>, <i>value</i>).</li>\n                    <li>Set <i>srcByteIndex</i> to <i>srcByteIndex</i> + <i>srcElementSize</i>.</li>\n                    <li>Set <i>targetByteIndex</i> to <i>targetByteIndex</i> + <i>targetElementSize</i>.</li>\n                  </ol>\n                </li>\n              </ol>\n            </li>\n            <li>Else,\n              <ol class=\"block\">\n                <li>NOTE:  If <var>srcType</var> and <var>targetType</var> are the same the transfer must be performed in a manner\n                    that preserves the bit-level encoding of the source data.</li>\n                <li>Repeat, while <i>targetByteIndex</i> &lt; <i>limit</i>\n                  <ol class=\"block\">\n                    <li>Let <i>value</i> be <a href=\"/sec/sec-getvaluefrombuffer.html\">GetValueFromBuffer</a>(<i>srcBuffer</i>,\n                        <i>srcByteIndex</i>, <code>&quot;Uint8&quot;</code>).</li>\n                    <li>Perform <a href=\"/sec/sec-setvalueinbuffer.html\">SetValueInBuffer</a> (<i>targetBuffer</i>, <i>targetByteIndex</i>,\n                        <code>&quot;Uint8&quot;</code>, <i>value</i>).</li>\n                    <li>Set <i>srcByteIndex</i> to <i>srcByteIndex</i> + 1.</li>\n                    <li>Set <i>targetByteIndex</i> to <i>targetByteIndex</i> + 1.</li>\n                  </ol>\n                </li>\n              </ol>\n            </li>\n            <li>Return <b>undefined</b>.</li>\n          </ol>\n        "}