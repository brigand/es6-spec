{"id":"sec-%typedarray%.prototype.slice","html":"\n        <h1><span class=\"secnum\" id=\"sec-22.2.3.23\"><a href=\"/sec/sec-%typedarray%.prototype.slice.html\" title=\"link to this section\">22.2.3.23</a></span> %TypedArray%.prototype.slice ( start, end )</h1>\n\n        <p class=\"normalbefore\">The interpretation and use of the arguments of %TypedArray%<code>.prototype.slice</code> are the\n        same as for  <code><a href=\"/sec/sec-array.prototype.slice.html\">Array.prototype.slice</a></code> as defined in <a href=\"/sec/sec-array.prototype.slice.html\">22.1.3.22</a>. The following steps are taken:</p>\n\n        <ol class=\"proc\">\n          <li>Let <i>O</i> be the <b>this</b> value.</li>\n          <li>Let <i>valid</i> be <a href=\"/sec/sec-validatetypedarray.html\">ValidateTypedArray</a>(<i>O</i>).</li>\n          <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>valid</i>).</li>\n          <li>Let <i>len</i> be the value of <i>O&#x2019;s</i> [[ArrayLength]] <a href=\"/sec/sec-object-internal-methods-and-internal-slots.html\">internal slot</a>.</li>\n          <li>Let <i>relativeStart</i> be <a href=\"/sec/sec-tointeger.html\">ToInteger</a>(<i>start</i>).</li>\n          <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>relativeStart</i>).</li>\n          <li>If <i>relativeStart</i> &lt; 0, let <i>k</i> be max((<i>len</i> + <i>relativeStart</i>),0); else let <i>k</i> be\n              min(<i>relativeStart</i>, <i>len</i>).</li>\n          <li>If <i>end</i> is <b>undefined</b>, let <i>relativeEnd</i> be <i>len</i>; else let <i>relativeEnd</i> be <a href=\"/sec/sec-tointeger.html\">ToInteger</a>(<i>end</i>).</li>\n          <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>relativeEnd</i>).</li>\n          <li>If <i>relativeEnd</i> &lt; 0, let <i>final</i> be max((<i>len</i> + <i>relativeEnd</i>),0); else let <i>final</i> be\n              min(<i>relativeEnd</i>, <i>len</i>).</li>\n          <li>Let <i>count</i> be max(<i>final</i> &#x2013; <i>k</i>, 0).</li>\n          <li>Let <i>defaultConstructor</i> be the intrinsic object listed in column one of <a href=\"/sec/table-49.html\">Table 49</a> for\n              the value of <i>O</i>&#x2019;s [[TypedArrayName]] <a href=\"/sec/sec-object-internal-methods-and-internal-slots.html\">internal\n              slot</a>.</li>\n          <li>Let <i>C</i> be <a href=\"/sec/sec-speciesconstructor.html\">SpeciesConstructor</a>(<i>O</i>, <i>defaultConstructor</i>).</li>\n          <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>C</i>).</li>\n          <li>Let <i>A</i> be <a href=\"/sec/sec-allocatetypedarray.html\">AllocateTypedArray</a>(<i>C</i>, <i>count</i>).</li>\n          <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>A</i>).</li>\n          <li>Let <i>srcName</i> be the String value of <i>O&#x2019;s</i> [[TypedArrayName]] <a href=\"/sec/sec-object-internal-methods-and-internal-slots.html\">internal slot</a>.</li>\n          <li>Let <i>srcType</i> be the String value of the Element Type value in <a href=\"/sec/table-49.html\">Table 49</a> for\n              <i>srcName</i>.</li>\n          <li>Let <i>targetName</i> be the String value of <i>A&#x2019;s</i> [[TypedArrayName]] <a href=\"/sec/sec-object-internal-methods-and-internal-slots.html\">internal slot</a>.</li>\n          <li>Let <i>targetType</i> be the String value of the Element Type value in <a href=\"/sec/table-49.html\">Table 49</a> for\n              <i>targetName</i>.</li>\n          <li>If <a href=\"/sec/sec-samevalue.html\">SameValue</a>(<i>srcType</i>, <i>targetType</i>) is <b>false</b>, then\n            <ol class=\"block\">\n              <li>Let <i>n</i> be 0.</li>\n              <li>Repeat, while <i>k</i> &lt; <i>final</i>\n                <ol class=\"block\">\n                  <li>Let <i>Pk</i> be <a href=\"/sec/sec-tostring.html\">ToString</a>(<i>k</i>).</li>\n                  <li>Let <i>kValue</i> be <a href=\"/sec/sec-get-o-p.html\">Get</a>(<i>O</i>, <i>Pk</i>).</li>\n                  <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>kValue</i>).</li>\n                  <li>Let <i>status</i> be <a href=\"/sec/sec-set-o-p-v-throw.html\">Set</a>(<i>A</i>, <a href=\"/sec/sec-tostring.html\">ToString</a>(<i>n</i>), <i>kValue</i>, <b>true</b> ).</li>\n                  <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>status</i>).</li>\n                  <li>Increase <i>k</i> by 1.</li>\n                  <li>Increase <i>n</i> by 1.</li>\n                </ol>\n              </li>\n            </ol>\n          </li>\n          <li>Else if <i>count</i> &gt; 0,\n            <ol class=\"block\">\n              <li>Let <i>srcBuffer</i> be the value of <i>O</i>&#x2019;s [[ViewedArrayBuffer]] <a href=\"/sec/sec-object-internal-methods-and-internal-slots.html\">internal slot</a>.</li>\n              <li>If <a href=\"/sec/sec-isdetachedbuffer.html\">IsDetachedBuffer</a>(<i>srcBuffer</i>) is <b>true</b>, throw a\n                  <b>TypeError</b> exception.</li>\n              <li>Let <i>targetBuffer</i> be the value of <i>A</i>&#x2019;s [[ViewedArrayBuffer]] <a href=\"/sec/sec-object-internal-methods-and-internal-slots.html\">internal slot</a>.</li>\n              <li>Let <i>elementSize</i> be the Number value of the Element Size value specified in <a href=\"/sec/table-49.html\">Table\n                  49</a> for <i>srcType</i>.</li>\n              <li>NOTE:  If <var>srcType</var> and <var>targetType</var> are the same the transfer must be performed in a manner\n                  that preserves the bit-level encoding of the source data.</li>\n              <li>Let <i>srcByteOffet</i> be the value of <i>O</i>&#x2019;s [[ByteOffset]] <a href=\"/sec/sec-object-internal-methods-and-internal-slots.html\">internal slot</a>.</li>\n              <li>Let <i>targetByteIndex</i> be 0.</li>\n              <li>Let <i>srcByteIndex</i> be (<i>k</i> &#xD7; <i>elementSize</i>) + <i>srcByteOffet</i>.</li>\n              <li>Repeat, while <i>targetByteIndex</i> &lt; <i>count</i> &#xD7; <i>elementSize</i>\n                <ol class=\"block\">\n                  <li>Let <i>value</i> be <a href=\"/sec/sec-getvaluefrombuffer.html\">GetValueFromBuffer</a>(<i>srcBuffer</i>,\n                      <i>srcByteIndex</i>, <code>&quot;Uint8&quot;</code>).</li>\n                  <li>Perform <a href=\"/sec/sec-setvalueinbuffer.html\">SetValueInBuffer</a> (<i>targetBuffer</i>, <i>targetByteIndex</i>,\n                      <code>&quot;Uint8&quot;</code>, <i>value</i>).</li>\n                  <li>Increase <i>srcByteIndex</i> by 1.</li>\n                  <li>Increase <i>targetByteIndex</i> by 1.</li>\n                </ol>\n              </li>\n            </ol>\n          </li>\n          <li>Return <i>A</i>.</li>\n        </ol>\n\n        <p>This function is not generic. The <b>this</b> value must be an object with a [[TypedArrayName]] <a href=\"/sec/sec-object-internal-methods-and-internal-slots.html\">internal slot</a>.</p>\n\n        <p>The <code>length</code> property of the <code>slice</code> method is <b>2</b>.</p>\n      "}