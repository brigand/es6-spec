{"id":"sec-__proto__-property-names-in-object-initializers","html":"\n      <h1><span class=\"secnum\" id=\"sec-B.3.1\"><a href=\"/sec/sec-__proto__-property-names-in-object-initializers.html\" title=\"link to this section\">B.3.1</a></span> __proto__ Property Names in Object Initializers</h1>\n\n      <p>The following Early Error rule is added to those in <a href=\"/sec/sec-object-initializer-static-semantics-early-errors.html\">12.2.6.1</a>:</p>\n\n      <p><span class=\"prod\"><span class=\"nt\">ObjectLiteral</span> <span class=\"geq\">:</span> <code class=\"t\">{</code> <span class=\"nt\">PropertyDefinitionList</span> <code class=\"t\">}ObjectLiteral</code> <code class=\"t\">:</code> <code class=\"t\">{</code> <span class=\"nt\">PropertyDefinitionList</span> <code class=\"t\">,</code> <code class=\"t\">}</code></span></p>\n\n      <ul>\n        <li>\n          <p>It is a Syntax Error if <span style=\"font-family: Times New Roman\">PropertyNameList</span> of <span class=\"nt\">PropertyDefinitionList</span> contains any duplicate entries for <code>&quot;__proto__&quot;</code> and at least two of\n          those entries were obtained from productions of the form  <span class=\"prod\"><span class=\"nt\">PropertyDefinition</span>\n          <span class=\"geq\">:</span> <span class=\"nt\">PropertyName</span> <code class=\"t\">:</code> <span class=\"nt\">AssignmentExpression</span></span> .</p>\n        </li>\n      </ul>\n\n      <div class=\"note\">\n        <p><span class=\"nh\">NOTE</span> The <a href=\"/sec/sec-list-and-record-specification-type.html\">List</a> returned by\n        PropertyNameList does not include string literal property names defined as using a <i><span style=\"font-family: Times New\n        Roman\">ComputedPropertyName</span>.</i></p>\n      </div>\n\n      <p class=\"normalbefore\">In <a href=\"/sec/sec-object-initializer-runtime-semantics-propertydefinitionevaluation.html\">12.2.6.9</a> the\n      PropertyDefinitionEvaluation algorithm for the production<br><span class=\"prod\"><span class=\"nt\">PropertyDefinition</span>\n      <span class=\"geq\">:</span> <span class=\"nt\">PropertyName</span> <code class=\"t\">:</code> <span class=\"nt\">AssignmentExpression</span></span><br>is replaced with the following definition:</p>\n\n      <div class=\"gp prod\"><span class=\"nt\">PropertyDefinition</span> <span class=\"geq\">:</span> <span class=\"nt\">PropertyName</span> <code class=\"t\">:</code> <span class=\"nt\">AssignmentExpression</span></div>\n      <ol class=\"proc\">\n        <li>Let <i>propKey</i> be the result of evaluating <i>PropertyName</i>.</li>\n        <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>propKey</i>).</li>\n        <li>Let <i>exprValueRef</i> be the result of evaluating <i>AssignmentExpression</i>.</li>\n        <li>Let <i>propValue</i> be <a href=\"/sec/sec-getvalue.html\">GetValue</a>(<i>exprValueRef</i>).</li>\n        <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>propValue</i>).</li>\n        <li>If <i>propKey</i> is the String value <code>&quot;__proto__&quot;</code> and if IsComputedPropertyKey(<i>propKey</i>) is\n            <b>false</b>, then\n          <ol class=\"block\">\n            <li>If <a href=\"/sec/sec-ecmascript-data-types-and-values.html\">Type</a>(<i>propValue</i>) is either Object or Null, then\n              <ol class=\"block\">\n                <li>Return <i>object</i>.[[SetPrototypeOf]](<i>propValue</i>).</li>\n              </ol>\n            </li>\n            <li>Return <a href=\"/sec/sec-normalcompletion.html\">NormalCompletion</a>(<span style=\"font-family:\n                sans-serif\">empty</span>).</li>\n          </ol>\n        </li>\n        <li>If <a href=\"/sec/sec-isanonymousfunctiondefinition.html\">IsAnonymousFunctionDefinition</a>(<i>AssignmentExpression)</i> is\n            <b>true</b>, then\n          <ol class=\"block\">\n            <li>Let <i>hasNameProperty</i> be <a href=\"/sec/sec-hasownproperty.html\">HasOwnProperty</a>(<i>propValue</i>,\n                <code>&quot;name&quot;</code>).</li>\n            <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>hasNameProperty</i>).</li>\n            <li>If <i>hasNameProperty</i> is <b>false</b>, perform <a href=\"/sec/sec-setfunctionname.html\">SetFunctionName</a>(<i>propValue</i>, <i>propKey</i>).</li>\n          </ol>\n        </li>\n        <li><a href=\"/sec/sec-algorithm-conventions.html\">Assert</a>: <i>enumerable</i> is <b>true</b>.</li>\n        <li>Return <a href=\"/sec/sec-createdatapropertyorthrow.html\">CreateDataPropertyOrThrow</a>(<i>object</i>, <i>propKey</i>,\n            <i>propValue</i>).</li>\n      </ol>\n    "}