{"id":"sec-addition-operator-plus","html":"\n      <div class=\"front\">\n        <h1><span class=\"secnum\" id=\"sec-12.7.3\"><a href=\"/sec/sec-addition-operator-plus.html\" title=\"link to this section\">12.7.3</a></span> The Addition operator ( <code>+</code> )</h1>\n\n        <div class=\"note\">\n          <p><span class=\"nh\">NOTE</span> The addition operator either performs string concatenation or numeric addition.</p>\n        </div>\n      </div>\n\n      <section id=\"sec-addition-operator-plus-runtime-semantics-evaluation\">\n        <h1><span class=\"secnum\" id=\"sec-12.7.3.1\"><a href=\"/sec/sec-addition-operator-plus-runtime-semantics-evaluation.html\" title=\"link to this section\">12.7.3.1</a></span> Runtime Semantics: Evaluation</h1>\n        <div class=\"gp prod\"><span class=\"nt\">AdditiveExpression</span> <span class=\"geq\">:</span> <span class=\"nt\">AdditiveExpression</span> <code class=\"t\">+</code> <span class=\"nt\">MultiplicativeExpression</span></div>\n        <ol class=\"proc\">\n          <li>Let <i>lref</i> be the result of evaluating <i>AdditiveExpression</i>.</li>\n          <li>Let <i>lval</i> be <a href=\"/sec/sec-getvalue.html\">GetValue</a>(<i>lref</i>).</li>\n          <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>lval</i>).</li>\n          <li>Let <i>rref</i> be the result of evaluating <i>MultiplicativeExpression</i>.</li>\n          <li>Let <i>rval</i> be <a href=\"/sec/sec-getvalue.html\">GetValue</a>(<i>rref</i>).</li>\n          <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>rval</i>).</li>\n          <li>Let <i>lprim</i> be <a href=\"/sec/sec-toprimitive.html\">ToPrimitive</a>(<i>lval</i>).</li>\n          <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>lprim</i>).</li>\n          <li>Let <i>rprim</i> be <a href=\"/sec/sec-toprimitive.html\">ToPrimitive</a>(<i>rval</i>).</li>\n          <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>rprim</i>).</li>\n          <li>If <a href=\"/sec/sec-ecmascript-data-types-and-values.html\">Type</a>(<i>lprim</i>) is String or <a href=\"/sec/sec-ecmascript-data-types-and-values.html\">Type</a>(<i>rprim</i>) is String, then\n            <ol class=\"block\">\n              <li>Let <i>lstr</i> be <a href=\"/sec/sec-tostring.html\">ToString</a>(<i>lprim</i>).</li>\n              <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>lstr</i>).</li>\n              <li>Let <i>rstr</i> be <a href=\"/sec/sec-tostring.html\">ToString</a>(<i>rprim</i>).</li>\n              <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>rstr</i>).</li>\n              <li>Return the String that is the result of concatenating <i>lstr</i> and <i>rstr.</i></li>\n            </ol>\n          </li>\n          <li>Let <i>lnum</i> be <a href=\"/sec/sec-tonumber.html\">ToNumber</a>(<i>lprim</i>).</li>\n          <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>lnum</i>).</li>\n          <li>Let <i>rnum</i> be <a href=\"/sec/sec-tonumber.html\">ToNumber</a>(<i>rprim</i>).</li>\n          <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>rnum</i>).</li>\n          <li>Return the result of applying the addition operation to <i>lnum</i> and <i>rnum</i>. See the Note below <a href=\"/sec/sec-applying-the-additive-operators-to-numbers.html\">12.7.5</a>.</li>\n        </ol>\n\n        <div class=\"note\">\n          <p><span class=\"nh\">NOTE 1</span> No hint is provided in the calls to <a href=\"/sec/sec-toprimitive.html\">ToPrimitive</a> in\n          steps 7 and 9. All standard objects except Date objects handle the absence of a hint as if the hint Number were given;\n          Date objects handle the absence of a hint as if the hint String were given. Exotic objects may handle the absence of a\n          hint in some other manner.</p>\n        </div>\n\n        <div class=\"note\">\n          <p><span class=\"nh\">NOTE 2</span> Step 11 differs from step 5 of the Abstract Relational Comparison algorithm (<a href=\"/sec/sec-abstract-relational-comparison.html\">7.2.11</a>), by using the logical-or operation instead of the logical-and\n          operation.</p>\n        </div>\n      </section>\n    "}