{"id":"sec-additive-operators","html":"\n    <div class=\"front\">\n      <h1><span class=\"secnum\" id=\"sec-12.7\"><a href=\"/sec/sec-additive-operators.html\" title=\"link to this section\">12.7</a></span>\n          Additive Operators</h1>\n      <h2>Syntax</h2>\n\n      <div class=\"gp\">\n        <div class=\"lhs\"><span class=\"nt\">AdditiveExpression</span><sub class=\"g-params\">[Yield]</sub> <span class=\"geq\">:</span></div>\n        <div class=\"rhs\"><span class=\"nt\">MultiplicativeExpression</span><sub class=\"g-params\">[?Yield]</sub></div>\n        <div class=\"rhs\"><span class=\"nt\">AdditiveExpression</span><sub class=\"g-params\">[?Yield]</sub> <code class=\"t\">+</code> <span class=\"nt\">MultiplicativeExpression</span><sub class=\"g-params\">[?Yield]</sub></div>\n        <div class=\"rhs\"><span class=\"nt\">AdditiveExpression</span><sub class=\"g-params\">[?Yield]</sub> <code class=\"t\">-</code> <span class=\"nt\">MultiplicativeExpression</span><sub class=\"g-params\">[?Yield]</sub></div>\n      </div>\n    </div>\n\n    <section id=\"sec-additive-operators-static-semantics-isfunctiondefinition\">\n      <h1><span class=\"secnum\" id=\"sec-12.7.1\"><a href=\"/sec/sec-additive-operators-static-semantics-isfunctiondefinition.html\" title=\"link to this section\">12.7.1</a></span> Static Semantics:  IsFunctionDefinition</h1>\n\n      <p>See also: <a href=\"/sec/sec-semantics-static-semantics-isfunctiondefinition.html\">12.2.1.3</a>, <a href=\"/sec/sec-grouping-operator-static-semantics-isfunctiondefinition.html\">12.2.10.2</a>, <a href=\"/sec/sec-static-semantics-static-semantics-isfunctiondefinition.html\">12.3.1.2</a>, <a href=\"/sec/sec-postfix-expressions-static-semantics-isfunctiondefinition.html\">12.4.2</a>, <a href=\"/sec/sec-unary-operators-static-semantics-isfunctiondefinition.html\">12.5.2</a>, <a href=\"/sec/sec-multiplicative-operators-static-semantics-isfunctiondefinition.html\">12.6.1</a>, <a href=\"/sec/sec-bitwise-shift-operators-static-semantics-isfunctiondefinition.html\">12.8.1</a>, <a href=\"/sec/sec-relational-operators-static-semantics-isfunctiondefinition.html\">12.9.1</a>, <a href=\"/sec/sec-equality-operators-static-semantics-isfunctiondefinition.html\">12.10.1</a>, <a href=\"/sec/sec-binary-bitwise-operators-static-semantics-isfunctiondefinition.html\">12.11.1</a>, <a href=\"/sec/sec-binary-logical-operators-static-semantics-isfunctiondefinition.html\">12.12.1</a>, <a href=\"/sec/sec-conditional-operator-static-semantics-isfunctiondefinition.html\">12.13.1</a>, <a href=\"/sec/sec-assignment-operators-static-semantics-isfunctiondefinition.html\">12.14.2</a>, <a href=\"/sec/sec-comma-operator-static-semantics-isfunctiondefinition.html\">12.15.1</a>, <a href=\"/sec/sec-function-definitions-static-semantics-isfunctiondefinition.html\">14.1.11</a>, <a href=\"/sec/sec-generator-function-definitions-static-semantics-isfunctiondefinition.html\">14.4.9</a>, <a href=\"/sec/sec-class-definitions-static-semantics-isfunctiondefinition.html\">14.5.8</a>.</p>\n\n      <div class=\"gp\">\n        <div class=\"lhs\"><span class=\"nt\">AdditiveExpression</span> <span class=\"geq\">:</span></div>\n        <div class=\"rhs\"><span class=\"nt\">AdditiveExpression</span> <code class=\"t\">+</code> <span class=\"nt\">MultiplicativeExpression</span></div>\n        <div class=\"rhs\"><span class=\"nt\">AdditiveExpression</span> <code class=\"t\">-</code> <span class=\"nt\">MultiplicativeExpression</span></div>\n      </div>\n\n      <ol class=\"proc\">\n        <li>Return <b>false</b>.</li>\n      </ol>\n    </section>\n\n    <section id=\"sec-additive-operators-static-semantics-isvalidsimpleassignmenttarget\">\n      <h1><span class=\"secnum\" id=\"sec-12.7.2\"><a href=\"/sec/sec-additive-operators-static-semantics-isvalidsimpleassignmenttarget.html\" title=\"link to this section\">12.7.2</a></span> Static Semantics:  IsValidSimpleAssignmentTarget</h1>\n\n      <p>See also: <a href=\"/sec/sec-identifiers-static-semantics-isvalidsimpleassignmenttarget.html\">12.1.3</a>, <a href=\"/sec/sec-semantics-static-semantics-isvalidsimpleassignmenttarget.html\">12.2.1.5</a>, <a href=\"/sec/sec-grouping-operator-static-semantics-isvalidsimpleassignmenttarget.html\">12.2.10.3</a>, <a href=\"/sec/sec-static-semantics-static-semantics-isvalidsimpleassignmenttarget.html\">12.3.1.5</a>, <a href=\"/sec/sec-postfix-expressions-static-semantics-isvalidsimpleassignmenttarget.html\">12.4.3</a>, <a href=\"/sec/sec-unary-operators-static-semantics-isvalidsimpleassignmenttarget.html\">12.5.3</a>, <a href=\"/sec/sec-multiplicative-operators-static-semantics-isvalidsimpleassignmenttarget.html\">12.6.2</a>, <a href=\"/sec/sec-bitwise-shift-operators-static-semantics-isvalidsimpleassignmenttarget.html\">12.8.2</a>, <a href=\"/sec/sec-relational-operators-static-semantics-isvalidsimpleassignmenttarget.html\">12.9.2</a>, <a href=\"/sec/sec-equality-operators-static-semantics-isvalidsimpleassignmenttarget.html\">12.10.2</a>, <a href=\"/sec/sec-binary-bitwise-operators-static-semantics-isvalidsimpleassignmenttarget.html\">12.11.2</a>, <a href=\"/sec/sec-binary-logical-operators-static-semantics-isvalidsimpleassignmenttarget.html\">12.12.2</a>, <a href=\"/sec/sec-conditional-operator-static-semantics-isvalidsimpleassignmenttarget.html\">12.13.2</a>, <a href=\"/sec/sec-assignment-operators-static-semantics-isvalidsimpleassignmenttarget.html\">12.14.3</a>, <a href=\"/sec/sec-comma-operator-static-semantics-isvalidsimpleassignmenttarget.html\">12.15.2</a>.</p>\n\n      <div class=\"gp\">\n        <div class=\"lhs\"><span class=\"nt\">AdditiveExpression</span> <span class=\"geq\">:</span></div>\n        <div class=\"rhs\"><span class=\"nt\">AdditiveExpression</span> <code class=\"t\">+</code> <span class=\"nt\">MultiplicativeExpression</span></div>\n        <div class=\"rhs\"><span class=\"nt\">AdditiveExpression</span> <code class=\"t\">-</code> <span class=\"nt\">MultiplicativeExpression</span></div>\n      </div>\n\n      <ol class=\"proc\">\n        <li>Return <b>false</b>.</li>\n      </ol>\n    </section>\n\n    <section id=\"sec-addition-operator-plus\">\n      <div class=\"front\">\n        <h1><span class=\"secnum\" id=\"sec-12.7.3\"><a href=\"/sec/sec-addition-operator-plus.html\" title=\"link to this section\">12.7.3</a></span> The Addition operator ( <code>+</code> )</h1>\n\n        <div class=\"note\">\n          <p><span class=\"nh\">NOTE</span> The addition operator either performs string concatenation or numeric addition.</p>\n        </div>\n      </div>\n\n      <section id=\"sec-addition-operator-plus-runtime-semantics-evaluation\">\n        <h1><span class=\"secnum\" id=\"sec-12.7.3.1\"><a href=\"/sec/sec-addition-operator-plus-runtime-semantics-evaluation.html\" title=\"link to this section\">12.7.3.1</a></span> Runtime Semantics: Evaluation</h1>\n        <div class=\"gp prod\"><span class=\"nt\">AdditiveExpression</span> <span class=\"geq\">:</span> <span class=\"nt\">AdditiveExpression</span> <code class=\"t\">+</code> <span class=\"nt\">MultiplicativeExpression</span></div>\n        <ol class=\"proc\">\n          <li>Let <i>lref</i> be the result of evaluating <i>AdditiveExpression</i>.</li>\n          <li>Let <i>lval</i> be <a href=\"/sec/sec-getvalue.html\">GetValue</a>(<i>lref</i>).</li>\n          <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>lval</i>).</li>\n          <li>Let <i>rref</i> be the result of evaluating <i>MultiplicativeExpression</i>.</li>\n          <li>Let <i>rval</i> be <a href=\"/sec/sec-getvalue.html\">GetValue</a>(<i>rref</i>).</li>\n          <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>rval</i>).</li>\n          <li>Let <i>lprim</i> be <a href=\"/sec/sec-toprimitive.html\">ToPrimitive</a>(<i>lval</i>).</li>\n          <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>lprim</i>).</li>\n          <li>Let <i>rprim</i> be <a href=\"/sec/sec-toprimitive.html\">ToPrimitive</a>(<i>rval</i>).</li>\n          <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>rprim</i>).</li>\n          <li>If <a href=\"/sec/sec-ecmascript-data-types-and-values.html\">Type</a>(<i>lprim</i>) is String or <a href=\"/sec/sec-ecmascript-data-types-and-values.html\">Type</a>(<i>rprim</i>) is String, then\n            <ol class=\"block\">\n              <li>Let <i>lstr</i> be <a href=\"/sec/sec-tostring.html\">ToString</a>(<i>lprim</i>).</li>\n              <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>lstr</i>).</li>\n              <li>Let <i>rstr</i> be <a href=\"/sec/sec-tostring.html\">ToString</a>(<i>rprim</i>).</li>\n              <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>rstr</i>).</li>\n              <li>Return the String that is the result of concatenating <i>lstr</i> and <i>rstr.</i></li>\n            </ol>\n          </li>\n          <li>Let <i>lnum</i> be <a href=\"/sec/sec-tonumber.html\">ToNumber</a>(<i>lprim</i>).</li>\n          <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>lnum</i>).</li>\n          <li>Let <i>rnum</i> be <a href=\"/sec/sec-tonumber.html\">ToNumber</a>(<i>rprim</i>).</li>\n          <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>rnum</i>).</li>\n          <li>Return the result of applying the addition operation to <i>lnum</i> and <i>rnum</i>. See the Note below <a href=\"/sec/sec-applying-the-additive-operators-to-numbers.html\">12.7.5</a>.</li>\n        </ol>\n\n        <div class=\"note\">\n          <p><span class=\"nh\">NOTE 1</span> No hint is provided in the calls to <a href=\"/sec/sec-toprimitive.html\">ToPrimitive</a> in\n          steps 7 and 9. All standard objects except Date objects handle the absence of a hint as if the hint Number were given;\n          Date objects handle the absence of a hint as if the hint String were given. Exotic objects may handle the absence of a\n          hint in some other manner.</p>\n        </div>\n\n        <div class=\"note\">\n          <p><span class=\"nh\">NOTE 2</span> Step 11 differs from step 5 of the Abstract Relational Comparison algorithm (<a href=\"/sec/sec-abstract-relational-comparison.html\">7.2.11</a>), by using the logical-or operation instead of the logical-and\n          operation.</p>\n        </div>\n      </section>\n    </section>\n\n    <section id=\"sec-subtraction-operator-minus\">\n      <div class=\"front\">\n        <h1><span class=\"secnum\" id=\"sec-12.7.4\"><a href=\"/sec/sec-subtraction-operator-minus.html\" title=\"link to this section\">12.7.4</a></span> The Subtraction Operator ( <code>-</code> )</h1>\n      </div>\n\n      <section id=\"sec-subtraction-operator-minus-runtime-semantics-evaluation\">\n        <h1><span class=\"secnum\" id=\"sec-12.7.4.1\"><a href=\"/sec/sec-subtraction-operator-minus-runtime-semantics-evaluation.html\" title=\"link to this section\">12.7.4.1</a></span> Runtime Semantics: Evaluation</h1>\n        <div class=\"gp prod\"><span class=\"nt\">AdditiveExpression</span> <span class=\"geq\">:</span> <span class=\"nt\">AdditiveExpression</span> <code class=\"t\">-</code> <span class=\"nt\">MultiplicativeExpression</span></div>\n        <ol class=\"proc\">\n          <li>Let <i>lref</i> be the result of evaluating <i>AdditiveExpression</i>.</li>\n          <li>Let <i>lval</i> be <a href=\"/sec/sec-getvalue.html\">GetValue</a>(<i>lref</i>).</li>\n          <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>lval</i>).</li>\n          <li>Let <i>rref</i> be the result of evaluating <i>MultiplicativeExpression</i>.</li>\n          <li>Let <i>rval</i> be <a href=\"/sec/sec-getvalue.html\">GetValue</a>(<i>rref</i>).</li>\n          <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>rval</i>).</li>\n          <li>Let <i>lnum</i> be <a href=\"/sec/sec-tonumber.html\">ToNumber</a>(<i>lval</i>).</li>\n          <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>lnum</i>).</li>\n          <li>Let <i>rnum</i> be <a href=\"/sec/sec-tonumber.html\">ToNumber</a>(<i>rval</i>).</li>\n          <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>rnum</i>).</li>\n          <li>Return the result of applying the subtraction operation to <i>lnum</i> and <i>rnum</i>. See the note below <a href=\"/sec/sec-applying-the-additive-operators-to-numbers.html\">12.7.5</a>.</li>\n        </ol>\n      </section>\n    </section>\n\n    <section id=\"sec-applying-the-additive-operators-to-numbers\">\n      <h1><span class=\"secnum\" id=\"sec-12.7.5\"><a href=\"/sec/sec-applying-the-additive-operators-to-numbers.html\" title=\"link to this section\">12.7.5</a></span> Applying the Additive Operators to Numbers</h1>\n\n      <p>The <code>+</code> operator performs addition when applied to two operands of numeric type, producing the sum of the\n      operands. The <code>-</code> operator performs subtraction, producing the difference of two numeric operands.</p>\n\n      <p>Addition is a commutative operation, but not always associative.</p>\n\n      <p>The result of an addition is determined using the rules of IEEE 754-2008 binary double-precision arithmetic:</p>\n\n      <ul>\n        <li>\n          <p>If either operand is <b>NaN</b>, the result is <b>NaN</b>.</p>\n        </li>\n\n        <li>\n          <p>The sum of two infinities of opposite sign is <b>NaN</b>.</p>\n        </li>\n\n        <li>\n          <p>The sum of two infinities of the same sign is the infinity of that sign.</p>\n        </li>\n\n        <li>\n          <p>The sum of an infinity and a finite value is equal to the infinite operand.</p>\n        </li>\n\n        <li>\n          <p>The sum of two negative zeroes is <b>&#x2212;0</b>. The sum of two positive zeroes, or of two zeroes of opposite sign,\n          is <b>+0</b>.</p>\n        </li>\n\n        <li>\n          <p>The sum of a zero and a nonzero finite value is equal to the nonzero operand.</p>\n        </li>\n\n        <li>\n          <p>The sum of two nonzero finite values of the same magnitude and opposite sign is <b>+0</b>.</p>\n        </li>\n\n        <li>\n          <p>In the remaining cases, where neither an infinity, nor a zero, nor <b>NaN</b> is involved, and the operands have the\n          same sign or have different magnitudes, the sum is computed and rounded to the nearest representable value using IEEE\n          754-2008 round-to-nearest mode. If the magnitude is too large to represent, the operation overflows and the result is\n          then an infinity of appropriate sign. The ECMAScript language requires support of gradual underflow as defined by IEEE\n          754-2008.</p>\n        </li>\n      </ul>\n\n      <div class=\"note\">\n        <p><span class=\"nh\">NOTE</span> The <code>-</code> operator performs subtraction when applied to two operands of numeric\n        type, producing the difference of its operands; the left operand is the minuend and the right operand is the subtrahend.\n        Given numeric operands <var>a</var> and <var>b</var>, it is always the case that <i><span style=\"font-family: Times New\n        Roman\">a</span><code>&#x2013;</code><span style=\"font-family: Times New Roman\">b</span></i> produces the same result as\n        <i><span style=\"font-family: Times New Roman\">a</span> <code>+(&#x2013;</code><span style=\"font-family: Times New\n        Roman\">b</span><code>)</code></i>.</p>\n      </div>\n    </section>\n  "}