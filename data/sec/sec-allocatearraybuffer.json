{"id":"sec-allocatearraybuffer","html":"\n        <h1><span class=\"secnum\" id=\"sec-24.1.1.1\"><a href=\"/sec/sec-allocatearraybuffer.html\" title=\"link to this section\">24.1.1.1</a></span> AllocateArrayBuffer( constructor, byteLength )</h1>\n\n        <p class=\"normalbefore\">The abstract operation AllocateArrayBuffer with arguments <var>constructor</var> and\n        <var>byteLength</var> is used to create an ArrayBuffer object. It performs the following steps:</p>\n\n        <ol class=\"proc\">\n          <li>Let <i>obj</i> be <a href=\"/sec/sec-ordinarycreatefromconstructor.html\">OrdinaryCreateFromConstructor</a>(<i>constructor</i>,\n              <code>&quot;%ArrayBufferPrototype%&quot;</code>, &#xAB;&#x200D;[[ArrayBufferData]], [[ArrayBufferByteLength]]&#xBB; ).</li>\n          <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>obj</i>).</li>\n          <li><a href=\"/sec/sec-algorithm-conventions.html\">Assert</a>: <i>byteLength</i> is a positive integer.</li>\n          <li>Let <i>block</i> be <a href=\"/sec/sec-createbytedatablock.html\">CreateByteDataBlock</a>(<i>byteLength</i>).</li>\n          <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>block</i>).</li>\n          <li>Set <i>obj&#x2019;s</i> [[ArrayBufferData]] <a href=\"/sec/sec-object-internal-methods-and-internal-slots.html\">internal\n              slot</a> to <i>block</i>.</li>\n          <li>Set <i>obj</i>&#x2019;s [[ArrayBufferByteLength]] <a href=\"/sec/sec-object-internal-methods-and-internal-slots.html\">internal\n              slot</a> to <i>byteLength</i>.</li>\n          <li>Return <i>obj</i>.</li>\n        </ol>\n      "}