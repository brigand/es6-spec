{"id":"sec-argument-lists-runtime-semantics-argumentlistevaluation","html":"\n        <h1><span class=\"secnum\" id=\"sec-12.3.6.1\"><a href=\"/sec/sec-argument-lists-runtime-semantics-argumentlistevaluation.html\" title=\"link to this section\">12.3.6.1</a></span> Runtime Semantics: ArgumentListEvaluation</h1>\n\n        <p>See also: <a href=\"/sec/sec-template-literals-runtime-semantics-argumentlistevaluation.html\">12.2.9.2</a></p>\n\n        <div class=\"gp prod\"><span class=\"nt\">Arguments</span> <span class=\"geq\">:</span> <code class=\"t\">(</code> <code class=\"t\">)</code></div>\n        <ol class=\"proc\">\n          <li>Return an empty <a href=\"/sec/sec-list-and-record-specification-type.html\">List</a>.</li>\n        </ol>\n        <div class=\"gp prod\"><span class=\"nt\">ArgumentList</span> <span class=\"geq\">:</span> <span class=\"nt\">AssignmentExpression</span></div>\n        <ol class=\"proc\">\n          <li>Let <i>ref</i> be the result of evaluating <i>AssignmentExpression</i>.</li>\n          <li>Let <i>arg</i> be <a href=\"/sec/sec-getvalue.html\">GetValue</a>(<i>ref</i>).</li>\n          <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>arg</i>).</li>\n          <li>Return a <a href=\"/sec/sec-list-and-record-specification-type.html\">List</a> whose sole item is <i>arg</i>.</li>\n        </ol>\n        <div class=\"gp prod\"><span class=\"nt\">ArgumentList</span> <span class=\"geq\">:</span> <code class=\"t\">...</code> <span class=\"nt\">AssignmentExpression</span></div>\n        <ol class=\"proc\">\n          <li>Let <i>list</i> be an empty <a href=\"/sec/sec-list-and-record-specification-type.html\">List</a>.</li>\n          <li>Let <i>spreadRef</i> be the result of evaluating <i>AssignmentExpression</i>.</li>\n          <li>Let <i>spreadObj</i> be <a href=\"/sec/sec-getvalue.html\">GetValue</a>(<i>spreadRef</i>).</li>\n          <li>Let <i>iterator</i> be <a href=\"/sec/sec-getiterator.html\">GetIterator</a>(<i>spreadObj</i>).</li>\n          <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>iterator</i>).</li>\n          <li>Repeat\n            <ol class=\"block\">\n              <li>Let <i>next</i> be <a href=\"/sec/sec-iteratorstep.html\">IteratorStep</a>(<i>iterator</i>).</li>\n              <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>next</i>).</li>\n              <li>If <i>next</i> is <b>false</b>, return <i>list</i>.</li>\n              <li>Let <i>nextArg</i> be <a href=\"/sec/sec-iteratorvalue.html\">IteratorValue</a>(<i>next</i>).</li>\n              <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>nextArg</i>).</li>\n              <li>Append <i>nextArg</i> as the last element of <i>list</i>.</li>\n            </ol>\n          </li>\n        </ol>\n        <div class=\"gp prod\"><span class=\"nt\">ArgumentList</span> <span class=\"geq\">:</span> <span class=\"nt\">ArgumentList</span> <code class=\"t\">,</code> <span class=\"nt\">AssignmentExpression</span></div>\n        <ol class=\"proc\">\n          <li>Let <i>precedingArgs</i> be the result of evaluating <i>ArgumentList</i>.</li>\n          <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>precedingArgs</i>).</li>\n          <li>Let <i>ref</i> be the result of evaluating <i>AssignmentExpression</i>.</li>\n          <li>Let <i>arg</i> be <a href=\"/sec/sec-getvalue.html\">GetValue</a>(<i>ref</i>).</li>\n          <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>arg</i>).</li>\n          <li>Append <i>arg</i> to the end of <i>precedingArgs</i>.</li>\n          <li>Return <i>precedingArgs</i>.</li>\n        </ol>\n        <div class=\"gp prod\"><span class=\"nt\">ArgumentList</span> <span class=\"geq\">:</span> <span class=\"nt\">ArgumentList</span> <code class=\"t\">,</code> <code class=\"t\">...</code> <span class=\"nt\">AssignmentExpression</span></div>\n        <ol class=\"proc\">\n          <li>Let <i>precedingArgs</i> be the result of evaluating <i>ArgumentList</i>.</li>\n          <li>Let <i>spreadRef</i> be the result of evaluating <i>AssignmentExpression</i>.</li>\n          <li>Let <i>iterator</i> be <a href=\"/sec/sec-getiterator.html\">GetIterator</a>(<a href=\"/sec/sec-getvalue.html\">GetValue</a>(<i>spreadRef</i>) ).</li>\n          <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>iterator</i>).</li>\n          <li>Repeat\n            <ol class=\"block\">\n              <li>Let <i>next</i> be <a href=\"/sec/sec-iteratorstep.html\">IteratorStep</a>(<i>iterator</i>).</li>\n              <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>next</i>).</li>\n              <li>If <i>next</i> is <b>false</b>, return <i>precedingArgs</i>.</li>\n              <li>Let <i>nextArg</i> be <a href=\"/sec/sec-iteratorvalue.html\">IteratorValue</a>(<i>next</i>).</li>\n              <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>nextArg</i>).</li>\n              <li>Append <i>nextArg</i> as the last element of <i>precedingArgs</i>.</li>\n            </ol>\n          </li>\n        </ol>\n      "}