{"id":"sec-array-initializer-runtime-semantics-evaluation","html":"\n        <h1><span class=\"secnum\" id=\"sec-12.2.5.3\"><a href=\"/sec/sec-array-initializer-runtime-semantics-evaluation.html\" title=\"link to this section\">12.2.5.3</a></span> Runtime Semantics: Evaluation</h1>\n        <div class=\"gp prod\"><span class=\"nt\">ArrayLiteral</span> <span class=\"geq\">:</span> <code class=\"t\">[</code> <span class=\"nt\">Elision</span><sub class=\"g-opt\">opt</sub> <code class=\"t\">]</code></div>\n        <ol class=\"proc\">\n          <li>Let <i>array</i> be <a href=\"/sec/sec-arraycreate.html\">ArrayCreate</a>(0).</li>\n          <li>Let <i>pad</i> be the ElisionWidth of <i>Elision</i>; if <i>Elision</i> is not present, use the numeric value\n              zero.</li>\n          <li>Perform <a href=\"/sec/sec-set-o-p-v-throw.html\">Set</a>(<i>array</i>, <code>&quot;length&quot;</code>, <i>pad</i>, <b>false</b>).</li>\n          <li>NOTE:  The above Set cannot fail because of the nature of the object returned by <a href=\"/sec/sec-arraycreate.html\">ArrayCreate</a>.</li>\n          <li>Return <i>array</i>.</li>\n        </ol>\n        <div class=\"gp prod\"><span class=\"nt\">ArrayLiteral</span> <span class=\"geq\">:</span> <code class=\"t\">[</code> <span class=\"nt\">ElementList</span> <code class=\"t\">]</code></div>\n        <ol class=\"proc\">\n          <li>Let <i>array</i> be <a href=\"/sec/sec-arraycreate.html\">ArrayCreate</a>(0).</li>\n          <li>Let <i>len</i> be the result of performing ArrayAccumulation for <i>ElementList</i> with arguments <i>array</i> and\n              0.</li>\n          <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>len</i>).</li>\n          <li>Perform <a href=\"/sec/sec-set-o-p-v-throw.html\">Set</a>(<i>array</i>, <code>&quot;length&quot;</code>, <i>len</i>, <b>false</b>).</li>\n          <li>NOTE:  The above Set cannot fail because of the nature of the object returned by <a href=\"/sec/sec-arraycreate.html\">ArrayCreate</a>.</li>\n          <li>Return <i>array</i>.</li>\n        </ol>\n        <div class=\"gp prod\"><span class=\"nt\">ArrayLiteral</span> <span class=\"geq\">:</span> <code class=\"t\">[</code> <span class=\"nt\">ElementList</span> <code class=\"t\">,</code> <span class=\"nt\">Elision</span><sub class=\"g-opt\">opt</sub> <code class=\"t\">]</code></div>\n        <ol class=\"proc\">\n          <li>Let <i>array</i> be <a href=\"/sec/sec-arraycreate.html\">ArrayCreate</a>(0).</li>\n          <li>Let <i>len</i> be the result of performing ArrayAccumulation for <i>ElementList</i> with arguments <i>array</i> and\n              0.</li>\n          <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>len</i>).</li>\n          <li>Let <i>padding</i> be the ElisionWidth of <i>Elision</i>; if <i>Elision</i> is not present, use the numeric value\n              zero.</li>\n          <li>Perform <a href=\"/sec/sec-set-o-p-v-throw.html\">Set</a>(<i>array</i>, <code>&quot;length&quot;</code>, <a href=\"/sec/sec-touint32.html\">ToUint32</a>(<i>padding</i>+<i>len</i>), <b>false</b>).</li>\n          <li>NOTE:  The above Set cannot fail because of the nature of the object returned by <a href=\"/sec/sec-arraycreate.html\">ArrayCreate</a>.</li>\n          <li>Return <i>array</i>.</li>\n        </ol>\n      "}