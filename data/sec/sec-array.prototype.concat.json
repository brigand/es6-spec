{"id":"sec-array.prototype.concat","html":"\n        <div class=\"front\">\n          <h1><span class=\"secnum\" id=\"sec-22.1.3.1\"><a href=\"/sec/sec-array.prototype.concat.html\" title=\"link to this section\">22.1.3.1</a></span> Array.prototype.concat ( ...arguments )</h1>\n\n          <p>When the <code>concat</code> method is called with zero or more arguments, it returns an array containing the array\n          elements of the object followed by the array elements of each argument in order.</p>\n\n          <p class=\"normalbefore\">The following steps are taken:</p>\n\n          <ol class=\"proc\">\n            <li>Let <i>O</i> be <a href=\"/sec/sec-toobject.html\">ToObject</a>(<b>this</b> value).</li>\n            <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>O</i>).</li>\n            <li>Let <i>A</i> be <a href=\"/sec/sec-arrayspeciescreate.html\">ArraySpeciesCreate</a>(<i>O</i>, 0).</li>\n            <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>A</i>).</li>\n            <li>Let <i>n</i> be 0.</li>\n            <li>Let <i>items</i> be a <a href=\"/sec/sec-list-and-record-specification-type.html\">List</a> whose first element is <i>O</i>\n                and whose subsequent elements are, in left to right order, the arguments that were passed to this function\n                invocation.</li>\n            <li>Repeat, while <i>items</i> is not empty\n              <ol class=\"block\">\n                <li>Remove the first element from <i>items</i> and let <i>E</i> be the value of the element.</li>\n                <li>Let <i>spreadable</i> be <a href=\"/sec/sec-isconcatspreadable.html\">IsConcatSpreadable</a>(<i>E</i>).</li>\n                <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>spreadable</i>).</li>\n                <li>If <i>spreadable</i> is <b>true</b>, then\n                  <ol class=\"block\">\n                    <li>Let <i>k</i> be 0.</li>\n                    <li>Let <i>len</i> be <a href=\"/sec/sec-tolength.html\">ToLength</a>(<a href=\"/sec/sec-get-o-p.html\">Get</a>(<i>E</i>,\n                        <code>&quot;length&quot;</code>)).</li>\n                    <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>len</i>).</li>\n                    <li>If <i>n</i> + <i>len</i> &gt; 2<sup>53</sup>-1, throw a <b>TypeError</b> exception.</li>\n                    <li>Repeat, while <i>k</i> &lt; <i>len</i>\n                      <ol class=\"block\">\n                        <li>Let <i>P</i> be <a href=\"/sec/sec-tostring.html\">ToString</a>(<i>k</i>).</li>\n                        <li>Let <i>exists</i> be <a href=\"/sec/sec-hasproperty.html\">HasProperty</a>(<i>E</i>, <i>P</i>).</li>\n                        <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>exists</i>).</li>\n                        <li>If <i>exists</i> is <b>true</b>, then\n                          <ol class=\"block\">\n                            <li>Let <i>subElement</i> be <a href=\"/sec/sec-get-o-p.html\">Get</a>(<i>E</i>, <i>P</i>).</li>\n                            <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>subElement</i>).</li>\n                            <li>Let <i>status</i> be <a href=\"/sec/sec-createdatapropertyorthrow.html\">CreateDataPropertyOrThrow</a>\n                                (<i>A</i>, <a href=\"/sec/sec-tostring.html\">ToString</a>(<i>n</i>), <i>subElement</i>).</li>\n                            <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>status</i>).</li>\n                          </ol>\n                        </li>\n                        <li>Increase <i>n</i> by 1.</li>\n                        <li>Increase <i>k</i> by 1.</li>\n                      </ol>\n                    </li>\n                  </ol>\n                </li>\n                <li>Else <i>E</i> is added as a single item rather than spread,\n                  <ol class=\"block\">\n                    <li>If <i>n</i>&#x2265;2<sup>53</sup>-1, throw a <b>TypeError</b> exception.</li>\n                    <li>Let <i>status</i> be <a href=\"/sec/sec-createdatapropertyorthrow.html\">CreateDataPropertyOrThrow</a> (<i>A</i>, <a href=\"/sec/sec-tostring.html\">ToString</a>(<i>n</i>), <i>E</i>).</li>\n                    <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>status</i>).</li>\n                    <li>Increase <i>n</i> by 1.</li>\n                  </ol>\n                </li>\n              </ol>\n            </li>\n            <li>Let <i>setStatus</i> be <a href=\"/sec/sec-set-o-p-v-throw.html\">Set</a>(<i>A</i>, <code>&quot;length&quot;</code>, <i>n</i>,\n                <b>true</b>).</li>\n            <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>setStatus</i>).</li>\n            <li>Return <i>A</i>.</li>\n          </ol>\n\n          <p>The <code>length</code> property of the <code>concat</code> method is <b>1</b>.</p>\n\n          <div class=\"note\">\n            <p><span class=\"nh\">NOTE 1</span> The explicit setting of the <code>length</code> property in step 8 is necessary to\n            ensure that its value is correct in situations where the trailing elements of the result Array are not present.</p>\n          </div>\n\n          <div class=\"note\">\n            <p><span class=\"nh\">NOTE 2</span> The <code>concat</code> function is intentionally generic; it does not require that\n            its <b>this</b> value be an Array object. Therefore it can be transferred to other kinds of objects for use as a\n            method.</p>\n          </div>\n        </div>\n\n        <section id=\"sec-isconcatspreadable\">\n          <h1><span class=\"secnum\" id=\"sec-22.1.3.1.1\"><a href=\"/sec/sec-isconcatspreadable.html\" title=\"link to this section\">22.1.3.1.1</a></span> Runtime Semantics: IsConcatSpreadable ( O )</h1>\n\n          <p class=\"normalbefore\">The abstract operation IsConcatSpreadable with argument <i>O</i> performs the following\n          steps:</p>\n\n          <ol class=\"proc\">\n            <li>If <a href=\"/sec/sec-ecmascript-data-types-and-values.html\">Type</a>(<i>O</i>) is not Object, return <b>false</b>.</li>\n            <li>Let <i>spreadable</i> be <a href=\"/sec/sec-get-o-p.html\">Get</a>(<i>O</i>, @@isConcatSpreadable).</li>\n            <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>spreadable</i>).</li>\n            <li>If <i>spreadable</i> is not <b>undefined</b>, return <a href=\"/sec/sec-toboolean.html\">ToBoolean</a>(<i>spreadable</i>).</li>\n            <li>Return <a href=\"/sec/sec-isarray.html\">IsArray</a>(<i>O</i>).</li>\n          </ol>\n        </section>\n      "}