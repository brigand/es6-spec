{"id":"sec-array.prototype.reverse","html":"\n        <h1><span class=\"secnum\" id=\"sec-22.1.3.20\"><a href=\"/sec/sec-array.prototype.reverse.html\" title=\"link to this section\">22.1.3.20</a></span> Array.prototype.reverse ( )</h1>\n\n        <div class=\"note\">\n          <p><span class=\"nh\">NOTE 1</span> The elements of the array are rearranged so as to reverse their order. The object is\n          returned as the result of the call.</p>\n        </div>\n\n        <p class=\"normalbefore\">When the <code>reverse</code> method is called the following steps are taken:</p>\n\n        <ol class=\"proc\">\n          <li>Let <i>O</i> be <a href=\"/sec/sec-toobject.html\">ToObject</a>(<b>this</b> value).</li>\n          <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>O</i>).</li>\n          <li>Let <i>len</i> be <a href=\"/sec/sec-tolength.html\">ToLength</a>(<a href=\"/sec/sec-get-o-p.html\">Get</a>(<i>O</i>,\n              <code>&quot;length&quot;</code>)).</li>\n          <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>len</i>).</li>\n          <li>Let <i>middle</i> be  <a href=\"/sec/sec-algorithm-conventions.html\">floor</a>(<i>len</i>/2).</li>\n          <li>Let <i>lower</i> be <b>0</b>.</li>\n          <li>Repeat, while <i>lower</i> &#x2260; <i>middle</i>\n            <ol class=\"block\">\n              <li>Let <i>upper</i> be <i>len</i>&#x2212; <i>lower</i> &#x2212;1.</li>\n              <li>Let <i>upperP</i> be <a href=\"/sec/sec-tostring.html\">ToString</a>(<i>upper</i>).</li>\n              <li>Let <i>lowerP</i> be <a href=\"/sec/sec-tostring.html\">ToString</a>(<i>lower</i>).</li>\n              <li>Let <i>lowerExists</i> be <a href=\"/sec/sec-hasproperty.html\">HasProperty</a>(<i>O</i>, <i>lowerP</i>).</li>\n              <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>lowerExists</i>).</li>\n              <li>If <i>lowerExists</i> is <b>true</b>, then\n                <ol class=\"block\">\n                  <li>Let <i>lowerValue</i> be <a href=\"/sec/sec-get-o-p.html\">Get</a>(<i>O</i>,  <i>lowerP</i>).</li>\n                  <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>lowerValue</i>).</li>\n                </ol>\n              </li>\n              <li>Let <i>upperExists</i> be <a href=\"/sec/sec-hasproperty.html\">HasProperty</a>(<i>O</i>, <i>upperP</i>).</li>\n              <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>upperExists</i>).</li>\n              <li>If <i>upperExists</i> is <b>true</b>, then\n                <ol class=\"block\">\n                  <li>Let <i>upperValue</i> be <a href=\"/sec/sec-get-o-p.html\">Get</a>(<i>O</i>, <i>upperP</i>).</li>\n                  <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>upperValue</i>).</li>\n                </ol>\n              </li>\n              <li>If <i>lowerExists</i> is <b>true</b> and <i>upperExists</i> is <b>true</b>, then\n                <ol class=\"block\">\n                  <li>Let <i>setStatus</i> be <a href=\"/sec/sec-set-o-p-v-throw.html\">Set</a>(<i>O</i>, <i>lowerP</i>, <i>upperValue</i>,\n                      <b>true</b>).</li>\n                  <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>setStatus</i>).</li>\n                  <li>Let <i>setStatus</i> be <a href=\"/sec/sec-set-o-p-v-throw.html\">Set</a>(<i>O</i>, <i>upperP</i>, <i>lowerValue</i>,\n                      <b>true</b>).</li>\n                  <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>setStatus</i>).</li>\n                </ol>\n              </li>\n              <li>Else if <i>lowerExists</i> is <b>false</b> and <i>upperExists</i> is <b>true</b>, then\n                <ol class=\"block\">\n                  <li>Let <i>setStatus</i> be <a href=\"/sec/sec-set-o-p-v-throw.html\">Set</a>(<i>O</i>, <i>lowerP</i>, <i>upperValue</i>,\n                      <b>true</b>).</li>\n                  <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>setStatus</i>).</li>\n                  <li>Let <i>deleteStatus</i> be <a href=\"/sec/sec-deletepropertyorthrow.html\">DeletePropertyOrThrow</a> (<i>O</i>,\n                      <i>upperP</i>).</li>\n                  <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>deleteStatus</i>).</li>\n                </ol>\n              </li>\n              <li>Else if <i>lowerExists</i> is <b>true</b> and <i>upperExists</i> is <b>false</b>, then\n                <ol class=\"block\">\n                  <li>Let <i>deleteStatus</i> be <a href=\"/sec/sec-deletepropertyorthrow.html\">DeletePropertyOrThrow</a> (<i>O</i>,\n                      <i>lowerP</i>).</li>\n                  <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>deleteStatus</i>).</li>\n                  <li>Let <i>setStatus</i> be <a href=\"/sec/sec-set-o-p-v-throw.html\">Set</a>(<i>O</i>, <i>upperP</i>, <i>lowerValue</i>,\n                      <b>true</b>).</li>\n                  <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>setStatus</i>).</li>\n                </ol>\n              </li>\n              <li>Else both <i>lowerExists</i> and <i>upperExists</i> are <b>false</b>,\n                <ol class=\"block\">\n                  <li>No action is required.</li>\n                </ol>\n              </li>\n              <li>Increase <i>lower</i> by 1.</li>\n            </ol>\n          </li>\n          <li>Return <i>O</i> .</li>\n        </ol>\n\n        <div class=\"note\">\n          <p><span class=\"nh\">NOTE 2</span> The <code>reverse</code> function is intentionally generic; it does not require that\n          its <b>this</b> value be an Array object. Therefore, it can be transferred to other kinds of objects for use as a\n          method.</p>\n        </div>\n      "}