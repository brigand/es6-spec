{"id":"sec-array.prototype.splice","html":"\n        <h1><span class=\"secnum\" id=\"sec-22.1.3.25\"><a href=\"/sec/sec-array.prototype.splice.html\" title=\"link to this section\">22.1.3.25</a></span> Array.prototype.splice (start, deleteCount , ...items  )</h1>\n\n        <div class=\"note\">\n          <p><span class=\"nh\">NOTE 1</span> When the <code>splice</code> method is called with two or more arguments\n          <var>start</var>, <var>deleteCount</var> and zero or more <var>items</var>, the <var>deleteCount</var> elements of the\n          array starting at integer index <var>start</var> are replaced by the arguments <var>items</var>. An Array object\n          containing the deleted elements (if any) is returned.</p>\n        </div>\n\n        <p class=\"normalbefore\">The following steps are taken:</p>\n\n        <ol class=\"proc\">\n          <li>Let <i>O</i> be <a href=\"/sec/sec-toobject.html\">ToObject</a>(<b>this</b> value).</li>\n          <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>O</i>).</li>\n          <li>Let <i>len</i> be <a href=\"/sec/sec-tolength.html\">ToLength</a>(<a href=\"/sec/sec-get-o-p.html\">Get</a>(<i>O</i>,\n              <code>&quot;length&quot;</code>)).</li>\n          <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>len</i>).</li>\n          <li>Let <i>relativeStart</i> be <a href=\"/sec/sec-tointeger.html\">ToInteger</a>(<i>start</i>).</li>\n          <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>relativeStart</i>).</li>\n          <li>If <i>relativeStart</i> &lt; 0, let <i>actualStart</i> be max((<i>len</i> + <i>relativeStart</i>),0); else let\n              <i>actualStart</i> be min(<i>relativeStart</i>, <i>len</i>).</li>\n          <li>If  the number of actual arguments is 0, then\n            <ol class=\"block\">\n              <li>Let <i>insertCount</i> be 0.</li>\n              <li>Let <i>actualDeleteCount</i> be 0.</li>\n            </ol>\n          </li>\n          <li>Else if the number of actual arguments is 1, then\n            <ol class=\"block\">\n              <li>Let <i>insertCount</i> be 0.</li>\n              <li>Let <i>actualDeleteCount</i> be <i>len</i> &#x2013; <i>actualStart</i>.</li>\n            </ol>\n          </li>\n          <li>Else,\n            <ol class=\"block\">\n              <li>Let <i>insertCount</i> be the number of actual arguments minus 2.</li>\n              <li>Let <i>dc</i> be <a href=\"/sec/sec-tointeger.html\">ToInteger</a>(<i>deleteCount</i>).</li>\n              <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>dc</i>).</li>\n              <li>Let <i>actualDeleteCount</i> be min(max(<i>dc</i>,0), <i>len</i> &#x2013; <i>actualStart</i>).</li>\n            </ol>\n          </li>\n          <li>If <i>len+insertCount</i>&#x2212;<i>actualDeleteCount</i> &gt; 2<sup>53</sup>-1, throw a <b>TypeError</b>\n              exception.</li>\n          <li>Let <i>A</i> be <a href=\"/sec/sec-arrayspeciescreate.html\">ArraySpeciesCreate</a>(<i>O</i>, <i>actualDeleteCount</i>).</li>\n          <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>A</i>).</li>\n          <li>Let <i>k</i> be 0.</li>\n          <li>Repeat, while <i>k</i> &lt; <i>actualDeleteCount</i>\n            <ol class=\"block\">\n              <li>Let <i>from</i> be <a href=\"/sec/sec-tostring.html\">ToString</a>(<i>actualStart</i>+<i>k</i>).</li>\n              <li>Let <i>fromPresent</i> be <a href=\"/sec/sec-hasproperty.html\">HasProperty</a>(<i>O</i>, <i>from</i>).</li>\n              <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>fromPresent</i>).</li>\n              <li>If <i>fromPresent</i> is <b>true</b>, then\n                <ol class=\"block\">\n                  <li>Let <i>fromValue</i> be <a href=\"/sec/sec-get-o-p.html\">Get</a>(<i>O,</i> <i>from</i>).</li>\n                  <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>fromValue</i>).</li>\n                  <li>Let <i>status</i> be <a href=\"/sec/sec-createdatapropertyorthrow.html\">CreateDataPropertyOrThrow</a>(<i>A</i>, <a href=\"/sec/sec-tostring.html\">ToString</a>(<i>k</i>), <i>fromValue</i>).</li>\n                  <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>status</i>).</li>\n                </ol>\n              </li>\n              <li>Increment <i>k</i> by 1.</li>\n            </ol>\n          </li>\n          <li>Let <i>setStatus</i> be <a href=\"/sec/sec-set-o-p-v-throw.html\">Set</a>(<i>A</i>, <code>&quot;length&quot;</code>,\n              <i>actualDeleteCount</i>, <b>true</b>).</li>\n          <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>setStatus</i>).</li>\n          <li>Let <i>items</i> be a <a href=\"/sec/sec-list-and-record-specification-type.html\">List</a> whose elements are, in left to\n              right order, the portion of the actual argument list starting with the third argument. The list is empty if fewer\n              than three arguments were passed.</li>\n          <li>Let <i>itemCount</i> be the number of elements in <i>items</i>.</li>\n          <li>If <i>itemCount</i> &lt; <i>actualDeleteCount</i>, then\n            <ol class=\"block\">\n              <li>Let <i>k</i> be <i>actualStart</i>.</li>\n              <li>Repeat, while <i>k</i> &lt; (<i>len</i> &#x2013; <i>actualDeleteCount</i>)\n                <ol class=\"block\">\n                  <li>Let <i>from</i> be <a href=\"/sec/sec-tostring.html\">ToString</a>(<i>k</i>+<i>actualDeleteCount</i>).</li>\n                  <li>Let <i>to</i> be <a href=\"/sec/sec-tostring.html\">ToString</a>(<i>k</i>+<i>itemCount</i>).</li>\n                  <li>Let <i>fromPresent</i> be <a href=\"/sec/sec-hasproperty.html\">HasProperty</a>(<i>O</i>, <i>from</i>).</li>\n                  <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>fromPresent</i>).</li>\n                  <li>If <i>fromPresent</i> is <b>true</b>, then\n                    <ol class=\"block\">\n                      <li>Let <i>fromValue</i> be <a href=\"/sec/sec-get-o-p.html\">Get</a>(<i>O</i>, <i>from</i>).</li>\n                      <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>fromValue</i>).</li>\n                      <li>Let <i>setStatus</i> be <a href=\"/sec/sec-set-o-p-v-throw.html\">Set</a>(<i>O</i>, <i>to</i>, <i>fromValue</i>,\n                          <b>true</b>).</li>\n                      <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>setStatus</i>).</li>\n                    </ol>\n                  </li>\n                  <li>Else <i>fromPresent</i> is <b>false</b>,\n                    <ol class=\"block\">\n                      <li>Let <i>deleteStatus</i> be <a href=\"/sec/sec-deletepropertyorthrow.html\">DeletePropertyOrThrow</a>(<i>O</i>,\n                          <i>to</i>).</li>\n                      <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>deleteStatus</i>).</li>\n                    </ol>\n                  </li>\n                  <li>Increase <i>k</i> by 1.</li>\n                </ol>\n              </li>\n              <li>Let <i>k</i> be <i>len</i>.</li>\n              <li>Repeat, while <i>k</i> &gt; (<i>len</i> &#x2013; <i>actualDeleteCount</i> + <i>itemCount</i>)\n                <ol class=\"block\">\n                  <li>Let <i>deleteStatus</i> be <a href=\"/sec/sec-deletepropertyorthrow.html\">DeletePropertyOrThrow</a>(<i>O</i>, <a href=\"/sec/sec-tostring.html\">ToString</a>(<i>k</i>&#x2013;1)).</li>\n                  <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>deleteStatus</i>).</li>\n                  <li>Decrease <i>k</i> by 1.</li>\n                </ol>\n              </li>\n            </ol>\n          </li>\n          <li>Else if <i>itemCount</i> &gt; <i>actualDeleteCount</i>, then\n            <ol class=\"block\">\n              <li>Let <i>k</i> be (<i>len</i> &#x2013; <i>actualDeleteCount</i>).</li>\n              <li>Repeat, while <i>k</i> &gt; <i>actualStart</i>\n                <ol class=\"block\">\n                  <li>Let <i>from</i> be <a href=\"/sec/sec-tostring.html\">ToString</a>(<i>k</i> + <i>actualDeleteCount</i> &#x2013; 1).</li>\n                  <li>Let <i>to</i> be <a href=\"/sec/sec-tostring.html\">ToString</a>(<i>k</i> + <i>itemCount</i> &#x2013; 1)</li>\n                  <li>Let <i>fromPresent</i> be <a href=\"/sec/sec-hasproperty.html\">HasProperty</a>(<i>O</i>, <i>from</i>).</li>\n                  <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>fromPresent</i>).</li>\n                  <li>If <i>fromPresent</i> is <b>true</b>, then\n                    <ol class=\"block\">\n                      <li>Let <i>fromValue</i> be <a href=\"/sec/sec-get-o-p.html\">Get</a>(<i>O</i>, <i>from</i>).</li>\n                      <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>fromValue</i>).</li>\n                      <li>Let <i>setStatus</i> be <a href=\"/sec/sec-set-o-p-v-throw.html\">Set</a>(<i>O</i>, <i>to</i>, <i>fromValue</i>,\n                          <b>true</b>).</li>\n                      <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>setStatus</i>).</li>\n                    </ol>\n                  </li>\n                  <li>Else <i>fromPresent</i> is <b>false</b>,\n                    <ol class=\"block\">\n                      <li>Let <i>deleteStatus</i> be <a href=\"/sec/sec-deletepropertyorthrow.html\">DeletePropertyOrThrow</a>(<i>O</i>,\n                          <i>to</i>).</li>\n                      <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>deleteStatus</i>).</li>\n                    </ol>\n                  </li>\n                  <li>Decrease <i>k</i> by 1.</li>\n                </ol>\n              </li>\n            </ol>\n          </li>\n          <li>Let <i>k</i> be <i>actualStart</i>.</li>\n          <li>Repeat, while <i>items</i> is not empty\n            <ol class=\"block\">\n              <li>Remove the first element from <i>items</i> and let <i>E</i> be the value of that element.</li>\n              <li>Let <i>setStatus</i> be <a href=\"/sec/sec-set-o-p-v-throw.html\">Set</a>(<i>O</i>, <a href=\"/sec/sec-tostring.html\">ToString</a>(<i>k</i>), <i>E</i>, <b>true</b>).</li>\n              <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>setStatus</i>).</li>\n              <li>Increase <i>k</i> by 1.</li>\n            </ol>\n          </li>\n          <li>Let <i>setStatus</i> be <a href=\"/sec/sec-set-o-p-v-throw.html\">Set</a>(<i>O</i>, <code>&quot;length&quot;</code>, <i>len</i> &#x2013;\n              <i>actualDeleteCount</i> + <i>itemCount</i>, <b>true</b>).</li>\n          <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>setStatus</i>).</li>\n          <li>Return <i>A</i>.</li>\n        </ol>\n\n        <p>The <code>length</code> property of the <code>splice</code> method is <b>2</b>.</p>\n\n        <div class=\"note\">\n          <p><span class=\"nh\">NOTE 2</span> The explicit setting of the <code>length</code> property of the result Array in step\n          24 is necessary to ensure that its value is correct in situations where its trailing elements are not present.</p>\n        </div>\n\n        <div class=\"note\">\n          <p><span class=\"nh\">NOTE 3</span> The <code>splice</code> function is intentionally generic; it does not require that\n          its <b>this</b> value be an Array object. Therefore it can be transferred to other kinds of objects for use as a\n          method.</p>\n        </div>\n      "}