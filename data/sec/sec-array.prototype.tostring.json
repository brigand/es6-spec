{"id":"sec-array.prototype.tostring","html":"\n        <h1><span class=\"secnum\" id=\"sec-22.1.3.27\"><a href=\"/sec/sec-array.prototype.tostring.html\" title=\"link to this section\">22.1.3.27</a></span> Array.prototype.toString ( )</h1>\n\n        <p class=\"normalbefore\">When the <code>toString</code> method is called, the following steps are taken:</p>\n\n        <ol class=\"proc\">\n          <li>Let <i>array</i> be <a href=\"/sec/sec-toobject.html\">ToObject</a>(<b>this</b> value).</li>\n          <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>array</i>).</li>\n          <li>Let <i>func</i> be <a href=\"/sec/sec-get-o-p.html\">Get</a>(<i>array</i>, <code>&quot;join&quot;</code>).</li>\n          <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>func</i>).</li>\n          <li>If <a href=\"/sec/sec-iscallable.html\">IsCallable</a>(<i>func</i>) is <b>false</b>, let <i>func</i> be the intrinsic function\n              %ObjProto_toString% (<a href=\"/sec/sec-object.prototype.tostring.html\">19.1.3.6</a>).</li>\n          <li>Return  <a href=\"/sec/sec-call.html\">Call</a>(<i>func</i>, <i>array</i>).</li>\n        </ol>\n\n        <div class=\"note\">\n          <p><span class=\"nh\">NOTE</span> The <code>toString</code> function is intentionally generic; it does not require that\n          its <b>this</b> value be an Array object. Therefore it can be transferred to other kinds of objects for use as a\n          method.</p>\n        </div>\n      "}