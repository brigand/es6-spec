{"id":"sec-binary-logical-operators","html":"\n    <div class=\"front\">\n      <h1><span class=\"secnum\" id=\"sec-12.12\"><a href=\"/sec/sec-binary-logical-operators.html\" title=\"link to this section\">12.12</a></span> Binary Logical Operators</h1>\n      <h2>Syntax</h2>\n\n      <div class=\"gp\">\n        <div class=\"lhs\"><span class=\"nt\">LogicalANDExpression</span><sub class=\"g-params\">[In, Yield]</sub> <span class=\"geq\">:</span></div>\n        <div class=\"rhs\"><span class=\"nt\">BitwiseORExpression</span><sub class=\"g-params\">[?In, ?Yield]</sub></div>\n        <div class=\"rhs\"><span class=\"nt\">LogicalANDExpression</span><sub class=\"g-params\">[?In, ?Yield]</sub> <code class=\"t\">&amp;&amp;</code> <span class=\"nt\">BitwiseORExpression</span><sub class=\"g-params\">[?In, ?Yield]</sub></div>\n      </div>\n\n      <div class=\"gp\">\n        <div class=\"lhs\"><span class=\"nt\">LogicalORExpression</span><sub class=\"g-params\">[In, Yield]</sub> <span class=\"geq\">:</span></div>\n        <div class=\"rhs\"><span class=\"nt\">LogicalANDExpression</span><sub class=\"g-params\">[?In, ?Yield]</sub></div>\n        <div class=\"rhs\"><span class=\"nt\">LogicalORExpression</span><sub class=\"g-params\">[?In, ?Yield]</sub> <code class=\"t\">||</code> <span class=\"nt\">LogicalANDExpression</span><sub class=\"g-params\">[?In, ?Yield]</sub></div>\n      </div>\n\n      <div class=\"note\">\n        <p><span class=\"nh\">NOTE</span> The value produced by a <code>&amp;&amp;</code> or <code>||</code> operator is not\n        necessarily of type Boolean. The value produced will always be the value of one of the two operand expressions.</p>\n      </div>\n    </div>\n\n    <section id=\"sec-binary-logical-operators-static-semantics-isfunctiondefinition\">\n      <h1><span class=\"secnum\" id=\"sec-12.12.1\"><a href=\"/sec/sec-binary-logical-operators-static-semantics-isfunctiondefinition.html\" title=\"link to this section\">12.12.1</a></span> Static Semantics:  IsFunctionDefinition</h1>\n\n      <p>See also: <a href=\"/sec/sec-semantics-static-semantics-isfunctiondefinition.html\">12.2.1.3</a>, <a href=\"/sec/sec-grouping-operator-static-semantics-isfunctiondefinition.html\">12.2.10.2</a>, <a href=\"/sec/sec-static-semantics-static-semantics-isfunctiondefinition.html\">12.3.1.2</a>, <a href=\"/sec/sec-postfix-expressions-static-semantics-isfunctiondefinition.html\">12.4.2</a>, <a href=\"/sec/sec-unary-operators-static-semantics-isfunctiondefinition.html\">12.5.2</a>, <a href=\"/sec/sec-multiplicative-operators-static-semantics-isfunctiondefinition.html\">12.6.1</a>, <a href=\"/sec/sec-additive-operators-static-semantics-isfunctiondefinition.html\">12.7.1</a>, <a href=\"/sec/sec-bitwise-shift-operators-static-semantics-isfunctiondefinition.html\">12.8.1</a>, <a href=\"/sec/sec-relational-operators-static-semantics-isfunctiondefinition.html\">12.9.1</a>, <a href=\"/sec/sec-equality-operators-static-semantics-isfunctiondefinition.html\">12.10.1</a>, <a href=\"/sec/sec-binary-bitwise-operators-static-semantics-isfunctiondefinition.html\">12.11.1</a>, <a href=\"/sec/sec-conditional-operator-static-semantics-isfunctiondefinition.html\">12.13.1</a>, <a href=\"/sec/sec-assignment-operators-static-semantics-isfunctiondefinition.html\">12.14.2</a>, <a href=\"/sec/sec-comma-operator-static-semantics-isfunctiondefinition.html\">12.15.1</a>, <a href=\"/sec/sec-function-definitions-static-semantics-isfunctiondefinition.html\">14.1.11</a>, <a href=\"/sec/sec-generator-function-definitions-static-semantics-isfunctiondefinition.html\">14.4.9</a>, <a href=\"/sec/sec-class-definitions-static-semantics-isfunctiondefinition.html\">14.5.8</a>.</p>\n\n      <p><span class=\"prod\"><span class=\"nt\">LogicalANDExpression</span> <span class=\"geq\">:</span> <span class=\"nt\">LogicalANDExpression</span> <code class=\"t\">&amp;&amp;</code> <span class=\"nt\">BitwiseORExpression</span></span>\n      <span style=\"font-family: sans-serif\"><br></span><span class=\"prod\"><span class=\"nt\">LogicalORExpression</span> <span class=\"geq\">:</span> <span class=\"nt\">LogicalORExpression</span> <code class=\"t\">||</code> <span class=\"nt\">LogicalANDExpression</span></span></p>\n\n      <ol class=\"proc\">\n        <li>Return <b>false</b>.</li>\n      </ol>\n    </section>\n\n    <section id=\"sec-binary-logical-operators-static-semantics-isvalidsimpleassignmenttarget\">\n      <h1><span class=\"secnum\" id=\"sec-12.12.2\"><a href=\"/sec/sec-binary-logical-operators-static-semantics-isvalidsimpleassignmenttarget.html\" title=\"link to this section\">12.12.2</a></span> Static Semantics:  IsValidSimpleAssignmentTarget</h1>\n\n      <p>See also: <a href=\"/sec/sec-identifiers-static-semantics-isvalidsimpleassignmenttarget.html\">12.1.3</a>, <a href=\"/sec/sec-semantics-static-semantics-isvalidsimpleassignmenttarget.html\">12.2.1.5</a>, <a href=\"/sec/sec-grouping-operator-static-semantics-isvalidsimpleassignmenttarget.html\">12.2.10.3</a>, <a href=\"/sec/sec-static-semantics-static-semantics-isvalidsimpleassignmenttarget.html\">12.3.1.5</a>, <a href=\"/sec/sec-postfix-expressions-static-semantics-isvalidsimpleassignmenttarget.html\">12.4.3</a>, <a href=\"/sec/sec-unary-operators-static-semantics-isvalidsimpleassignmenttarget.html\">12.5.3</a>, <a href=\"/sec/sec-multiplicative-operators-static-semantics-isvalidsimpleassignmenttarget.html\">12.6.2</a>, <a href=\"/sec/sec-additive-operators-static-semantics-isvalidsimpleassignmenttarget.html\">12.7.2</a>, <a href=\"/sec/sec-bitwise-shift-operators-static-semantics-isvalidsimpleassignmenttarget.html\">12.8.2</a>, <a href=\"/sec/sec-relational-operators-static-semantics-isvalidsimpleassignmenttarget.html\">12.9.2</a>, <a href=\"/sec/sec-equality-operators-static-semantics-isvalidsimpleassignmenttarget.html\">12.10.2</a>, <a href=\"/sec/sec-binary-bitwise-operators-static-semantics-isvalidsimpleassignmenttarget.html\">12.11.2</a>, <a href=\"/sec/sec-conditional-operator-static-semantics-isvalidsimpleassignmenttarget.html\">12.13.2</a>, <a href=\"/sec/sec-assignment-operators-static-semantics-isvalidsimpleassignmenttarget.html\">12.14.3</a>, <a href=\"/sec/sec-comma-operator-static-semantics-isvalidsimpleassignmenttarget.html\">12.15.2</a>.</p>\n\n      <p><span class=\"prod\"><span class=\"nt\">LogicalANDExpression</span> <span class=\"geq\">:</span> <span class=\"nt\">LogicalANDExpression</span> <code class=\"t\">&amp;&amp;</code> <span class=\"nt\">BitwiseORExpression</span></span>\n      <span style=\"font-family: sans-serif\"><br></span><span class=\"prod\"><span class=\"nt\">LogicalORExpression</span> <span class=\"geq\">:</span> <span class=\"nt\">LogicalORExpression</span> <code class=\"t\">||</code> <span class=\"nt\">LogicalANDExpression</span></span></p>\n\n      <ol class=\"proc\">\n        <li>Return <b>false</b>.</li>\n      </ol>\n    </section>\n\n    <section id=\"sec-binary-logical-operators-runtime-semantics-evaluation\">\n      <h1><span class=\"secnum\" id=\"sec-12.12.3\"><a href=\"/sec/sec-binary-logical-operators-runtime-semantics-evaluation.html\" title=\"link to this section\">12.12.3</a></span> Runtime Semantics: Evaluation</h1>\n      <div class=\"gp prod\"><span class=\"nt\">LogicalANDExpression</span> <span class=\"geq\">:</span> <span class=\"nt\">LogicalANDExpression</span> <code class=\"t\">&amp;&amp;</code> <span class=\"nt\">BitwiseORExpression</span></div>\n      <ol class=\"proc\">\n        <li>Let <i>lref</i> be the result of evaluating <i>LogicalANDExpression</i>.</li>\n        <li>Let <i>lval</i> be <a href=\"/sec/sec-getvalue.html\">GetValue</a>(<i>lref</i>).</li>\n        <li>Let <i>lbool</i> be <a href=\"/sec/sec-toboolean.html\">ToBoolean</a>(<i>lval</i>).</li>\n        <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>lbool</i>).</li>\n        <li>If <i>lbool</i> is <b>false</b>, return <i>lval</i>.</li>\n        <li>Let <i>rref</i> be the result of evaluating <i>BitwiseORExpression</i>.</li>\n        <li>Return <a href=\"/sec/sec-getvalue.html\">GetValue</a>(<i>rref</i>).</li>\n      </ol>\n      <div class=\"gp prod\"><span class=\"nt\">LogicalORExpression</span> <span class=\"geq\">:</span> <span class=\"nt\">LogicalORExpression</span> <code class=\"t\">||</code> <span class=\"nt\">LogicalANDExpression</span></div>\n      <ol class=\"proc\">\n        <li>Let <i>lref</i> be the result of evaluating <i>LogicalORExpression</i>.</li>\n        <li>Let <i>lval</i> be <a href=\"/sec/sec-getvalue.html\">GetValue</a>(<i>lref</i>).</li>\n        <li>Let <i>lbool</i> be <a href=\"/sec/sec-toboolean.html\">ToBoolean</a>(<i>lval</i>).</li>\n        <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>lbool</i>).</li>\n        <li>If <i>lbool</i> is <b>true</b>, return <i>lval</i>.</li>\n        <li>Let <i>rref</i> be the result of evaluating <i>LogicalANDExpression</i>.</li>\n        <li>Return <a href=\"/sec/sec-getvalue.html\">GetValue</a>(<i>rref</i>).</li>\n      </ol>\n    </section>\n  "}