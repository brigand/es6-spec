{"id":"sec-bitwise-shift-operators","html":"\n    <div class=\"front\">\n      <h1><span class=\"secnum\" id=\"sec-12.8\"><a href=\"/sec/sec-bitwise-shift-operators.html\" title=\"link to this section\">12.8</a></span>\n          Bitwise Shift Operators</h1>\n      <h2>Syntax</h2>\n\n      <div class=\"gp\">\n        <div class=\"lhs\"><span class=\"nt\">ShiftExpression</span><sub class=\"g-params\">[Yield]</sub> <span class=\"geq\">:</span></div>\n        <div class=\"rhs\"><span class=\"nt\">AdditiveExpression</span><sub class=\"g-params\">[?Yield]</sub></div>\n        <div class=\"rhs\"><span class=\"nt\">ShiftExpression</span><sub class=\"g-params\">[?Yield]</sub> <code class=\"t\">&lt;&lt;</code> <span class=\"nt\">AdditiveExpression</span><sub class=\"g-params\">[?Yield]</sub></div>\n        <div class=\"rhs\"><span class=\"nt\">ShiftExpression</span><sub class=\"g-params\">[?Yield]</sub> <code class=\"t\">&gt;&gt;</code> <span class=\"nt\">AdditiveExpression</span><sub class=\"g-params\">[?Yield]</sub></div>\n        <div class=\"rhs\"><span class=\"nt\">ShiftExpression</span><sub class=\"g-params\">[?Yield]</sub> <code class=\"t\">&gt;&gt;&gt;</code> <span class=\"nt\">AdditiveExpression</span><sub class=\"g-params\">[?Yield]</sub></div>\n      </div>\n    </div>\n\n    <section id=\"sec-bitwise-shift-operators-static-semantics-isfunctiondefinition\">\n      <h1><span class=\"secnum\" id=\"sec-12.8.1\"><a href=\"/sec/sec-bitwise-shift-operators-static-semantics-isfunctiondefinition.html\" title=\"link to this section\">12.8.1</a></span> Static Semantics:  IsFunctionDefinition</h1>\n\n      <p>See also: <a href=\"/sec/sec-semantics-static-semantics-isfunctiondefinition.html\">12.2.1.3</a>, <a href=\"/sec/sec-grouping-operator-static-semantics-isfunctiondefinition.html\">12.2.10.2</a>, <a href=\"/sec/sec-static-semantics-static-semantics-isfunctiondefinition.html\">12.3.1.2</a>, <a href=\"/sec/sec-postfix-expressions-static-semantics-isfunctiondefinition.html\">12.4.2</a>, <a href=\"/sec/sec-unary-operators-static-semantics-isfunctiondefinition.html\">12.5.2</a>, <a href=\"/sec/sec-multiplicative-operators-static-semantics-isfunctiondefinition.html\">12.6.1</a>, <a href=\"/sec/sec-additive-operators-static-semantics-isfunctiondefinition.html\">12.7.1</a>, <a href=\"/sec/sec-relational-operators-static-semantics-isfunctiondefinition.html\">12.9.1</a>, <a href=\"/sec/sec-equality-operators-static-semantics-isfunctiondefinition.html\">12.10.1</a>, <a href=\"/sec/sec-binary-bitwise-operators-static-semantics-isfunctiondefinition.html\">12.11.1</a>, <a href=\"/sec/sec-binary-logical-operators-static-semantics-isfunctiondefinition.html\">12.12.1</a>, <a href=\"/sec/sec-conditional-operator-static-semantics-isfunctiondefinition.html\">12.13.1</a>, <a href=\"/sec/sec-assignment-operators-static-semantics-isfunctiondefinition.html\">12.14.2</a>, <a href=\"/sec/sec-comma-operator-static-semantics-isfunctiondefinition.html\">12.15.1</a>, <a href=\"/sec/sec-function-definitions-static-semantics-isfunctiondefinition.html\">14.1.11</a>, <a href=\"/sec/sec-generator-function-definitions-static-semantics-isfunctiondefinition.html\">14.4.9</a>, <a href=\"/sec/sec-class-definitions-static-semantics-isfunctiondefinition.html\">14.5.8</a>.</p>\n\n      <div class=\"gp\">\n        <div class=\"lhs\"><span class=\"nt\">ShiftExpression</span> <span class=\"geq\">:</span></div>\n        <div class=\"rhs\"><span class=\"nt\">ShiftExpression</span> <code class=\"t\">&lt;&lt;</code> <span class=\"nt\">AdditiveExpression</span></div>\n        <div class=\"rhs\"><span class=\"nt\">ShiftExpression</span> <code class=\"t\">&gt;&gt;</code> <span class=\"nt\">AdditiveExpression</span></div>\n        <div class=\"rhs\"><span class=\"nt\">ShiftExpression</span> <code class=\"t\">&gt;&gt;&gt;</code> <span class=\"nt\">AdditiveExpression</span></div>\n      </div>\n\n      <ol class=\"proc\">\n        <li>Return <b>false</b>.</li>\n      </ol>\n    </section>\n\n    <section id=\"sec-bitwise-shift-operators-static-semantics-isvalidsimpleassignmenttarget\">\n      <h1><span class=\"secnum\" id=\"sec-12.8.2\"><a href=\"/sec/sec-bitwise-shift-operators-static-semantics-isvalidsimpleassignmenttarget.html\" title=\"link to this section\">12.8.2</a></span> Static Semantics:  IsValidSimpleAssignmentTarget</h1>\n\n      <p>See also: <a href=\"/sec/sec-identifiers-static-semantics-isvalidsimpleassignmenttarget.html\">12.1.3</a>, <a href=\"/sec/sec-semantics-static-semantics-isvalidsimpleassignmenttarget.html\">12.2.1.5</a>, <a href=\"/sec/sec-grouping-operator-static-semantics-isvalidsimpleassignmenttarget.html\">12.2.10.3</a>, <a href=\"/sec/sec-static-semantics-static-semantics-isvalidsimpleassignmenttarget.html\">12.3.1.5</a>, <a href=\"/sec/sec-postfix-expressions-static-semantics-isvalidsimpleassignmenttarget.html\">12.4.3</a>, <a href=\"/sec/sec-unary-operators-static-semantics-isvalidsimpleassignmenttarget.html\">12.5.3</a>, <a href=\"/sec/sec-multiplicative-operators-static-semantics-isvalidsimpleassignmenttarget.html\">12.6.2</a>, <a href=\"/sec/sec-additive-operators-static-semantics-isvalidsimpleassignmenttarget.html\">12.7.2</a>, <a href=\"/sec/sec-relational-operators-static-semantics-isvalidsimpleassignmenttarget.html\">12.9.2</a>, <a href=\"/sec/sec-equality-operators-static-semantics-isvalidsimpleassignmenttarget.html\">12.10.2</a>, <a href=\"/sec/sec-binary-bitwise-operators-static-semantics-isvalidsimpleassignmenttarget.html\">12.11.2</a>, <a href=\"/sec/sec-binary-logical-operators-static-semantics-isvalidsimpleassignmenttarget.html\">12.12.2</a>, <a href=\"/sec/sec-conditional-operator-static-semantics-isvalidsimpleassignmenttarget.html\">12.13.2</a>, <a href=\"/sec/sec-assignment-operators-static-semantics-isvalidsimpleassignmenttarget.html\">12.14.3</a>, <a href=\"/sec/sec-comma-operator-static-semantics-isvalidsimpleassignmenttarget.html\">12.15.2</a>.</p>\n\n      <div class=\"gp\">\n        <div class=\"lhs\"><span class=\"nt\">ShiftExpression</span> <span class=\"geq\">:</span></div>\n        <div class=\"rhs\"><span class=\"nt\">ShiftExpression</span> <code class=\"t\">&lt;&lt;</code> <span class=\"nt\">AdditiveExpression</span></div>\n        <div class=\"rhs\"><span class=\"nt\">ShiftExpression</span> <code class=\"t\">&gt;&gt;</code> <span class=\"nt\">AdditiveExpression</span></div>\n        <div class=\"rhs\"><span class=\"nt\">ShiftExpression</span> <code class=\"t\">&gt;&gt;&gt;</code> <span class=\"nt\">AdditiveExpression</span></div>\n      </div>\n\n      <ol class=\"proc\">\n        <li>Return <b>false</b>.</li>\n      </ol>\n    </section>\n\n    <section id=\"sec-left-shift-operator\">\n      <div class=\"front\">\n        <h1><span class=\"secnum\" id=\"sec-12.8.3\"><a href=\"/sec/sec-left-shift-operator.html\" title=\"link to this section\">12.8.3</a></span>\n            The Left Shift Operator ( <code>&lt;&lt;</code> )</h1>\n\n        <div class=\"note\">\n          <p><span class=\"nh\">NOTE</span> Performs a bitwise left shift operation on the left operand by the amount specified by\n          the right operand.</p>\n        </div>\n      </div>\n\n      <section id=\"sec-left-shift-operator-runtime-semantics-evaluation\">\n        <h1><span class=\"secnum\" id=\"sec-12.8.3.1\"><a href=\"/sec/sec-left-shift-operator-runtime-semantics-evaluation.html\" title=\"link to this section\">12.8.3.1</a></span> Runtime Semantics: Evaluation</h1>\n        <div class=\"gp prod\"><span class=\"nt\">ShiftExpression</span> <span class=\"geq\">:</span> <span class=\"nt\">ShiftExpression</span> <code class=\"t\">&lt;&lt;</code> <span class=\"nt\">AdditiveExpression</span></div>\n        <ol class=\"proc\">\n          <li>Let <i>lref</i> be the result of evaluating <i>ShiftExpression</i>.</li>\n          <li>Let <i>lval</i> be <a href=\"/sec/sec-getvalue.html\">GetValue</a>(<i>lref</i>).</li>\n          <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>lval</i>).</li>\n          <li>Let <i>rref</i> be the result of evaluating <i>AdditiveExpression</i>.</li>\n          <li>Let <i>rval</i> be <a href=\"/sec/sec-getvalue.html\">GetValue</a>(<i>rref</i>).</li>\n          <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>rval</i>).</li>\n          <li>Let <i>lnum</i> be <a href=\"/sec/sec-toint32.html\">ToInt32</a>(<i>lval</i>).</li>\n          <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>lnum</i>).</li>\n          <li>Let <i>rnum</i> be <a href=\"/sec/sec-touint32.html\">ToUint32</a>(<i>rval</i>).</li>\n          <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>rnum</i>).</li>\n          <li>Let <i>shiftCount</i> be the result of masking out all but the least significant 5 bits of <i>rnum</i>, that is,\n              compute <i>rnum</i> &amp; 0x1F.</li>\n          <li>Return the result of left shifting <i>lnum</i> by <i>shiftCount</i> bits. The result is a signed 32-bit\n              integer.</li>\n        </ol>\n      </section>\n    </section>\n\n    <section id=\"sec-signed-right-shift-operator\">\n      <div class=\"front\">\n        <h1><span class=\"secnum\" id=\"sec-12.8.4\"><a href=\"/sec/sec-signed-right-shift-operator.html\" title=\"link to this section\">12.8.4</a></span> The Signed Right Shift Operator ( <code>&gt;&gt;</code> )</h1>\n\n        <div class=\"note\">\n          <p><span class=\"nh\">NOTE</span> Performs a sign-filling bitwise right shift operation on the left operand by the amount\n          specified by the right operand.</p>\n        </div>\n      </div>\n\n      <section id=\"sec-signed-right-shift-operator-runtime-semantics-evaluation\">\n        <h1><span class=\"secnum\" id=\"sec-12.8.4.1\"><a href=\"/sec/sec-signed-right-shift-operator-runtime-semantics-evaluation.html\" title=\"link to this section\">12.8.4.1</a></span> Runtime Semantics: Evaluation</h1>\n        <div class=\"gp prod\"><span class=\"nt\">ShiftExpression</span> <span class=\"geq\">:</span> <span class=\"nt\">ShiftExpression</span> <code class=\"t\">&gt;&gt;</code> <span class=\"nt\">AdditiveExpression</span></div>\n        <ol class=\"proc\">\n          <li>Let <i>lref</i> be the result of evaluating <i>ShiftExpression</i>.</li>\n          <li>Let <i>lval</i> be <a href=\"/sec/sec-getvalue.html\">GetValue</a>(<i>lref</i>).</li>\n          <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>lval</i>).</li>\n          <li>Let <i>rref</i> be the result of evaluating <i>AdditiveExpression</i>.</li>\n          <li>Let <i>rval</i> be <a href=\"/sec/sec-getvalue.html\">GetValue</a>(<i>rref</i>).</li>\n          <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>rval</i>).</li>\n          <li>Let <i>lnum</i> be <a href=\"/sec/sec-toint32.html\">ToInt32</a>(<i>lval</i>).</li>\n          <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>lnum</i>).</li>\n          <li>Let <i>rnum</i> be <a href=\"/sec/sec-touint32.html\">ToUint32</a>(<i>rval</i>).</li>\n          <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>rnum</i>).</li>\n          <li>Let <i>shiftCount</i> be the result of masking out all but the least significant 5 bits of <i>rnum</i>, that is,\n              compute <i>rnum</i> &amp; 0x1F.</li>\n          <li>Return the result of performing a sign-extending right shift of <i>lnum</i> by <i>shiftCount</i> bits. The most\n              significant bit is propagated. The result is a signed 32-bit integer.</li>\n        </ol>\n      </section>\n    </section>\n\n    <section id=\"sec-unsigned-right-shift-operator\">\n      <div class=\"front\">\n        <h1><span class=\"secnum\" id=\"sec-12.8.5\"><a href=\"/sec/sec-unsigned-right-shift-operator.html\" title=\"link to this section\">12.8.5</a></span> The Unsigned Right Shift Operator ( <code>&gt;&gt;&gt;</code> )</h1>\n\n        <div class=\"note\">\n          <p><span class=\"nh\">NOTE</span> Performs a zero-filling bitwise right shift operation on the left operand by the amount\n          specified by the right operand.</p>\n        </div>\n      </div>\n\n      <section id=\"sec-unsigned-right-shift-operator-runtime-semantics-evaluation\">\n        <h1><span class=\"secnum\" id=\"sec-12.8.5.1\"><a href=\"/sec/sec-unsigned-right-shift-operator-runtime-semantics-evaluation.html\" title=\"link to this section\">12.8.5.1</a></span> Runtime Semantics: Evaluation</h1>\n        <div class=\"gp prod\"><span class=\"nt\">ShiftExpression</span> <span class=\"geq\">:</span> <span class=\"nt\">ShiftExpression</span> <code class=\"t\">&gt;&gt;&gt;</code> <span class=\"nt\">AdditiveExpression</span></div>\n        <ol class=\"proc\">\n          <li>Let <i>lref</i> be the result of evaluating <i>ShiftExpression</i>.</li>\n          <li>Let <i>lval</i> be <a href=\"/sec/sec-getvalue.html\">GetValue</a>(<i>lref</i>).</li>\n          <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>lval</i>).</li>\n          <li>Let <i>rref</i> be the result of evaluating <i>AdditiveExpression</i>.</li>\n          <li>Let <i>rval</i> be <a href=\"/sec/sec-getvalue.html\">GetValue</a>(<i>rref</i>).</li>\n          <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>rval</i>).</li>\n          <li>Let <i>lnum</i> be <a href=\"/sec/sec-touint32.html\">ToUint32</a>(<i>lval</i>).</li>\n          <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>lnum</i>).</li>\n          <li>Let <i>rnum</i> be <a href=\"/sec/sec-touint32.html\">ToUint32</a>(<i>rval</i>).</li>\n          <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>rnum</i>).</li>\n          <li>Let <i>shiftCount</i> be the result of masking out all but the least significant 5 bits of <i>rnum</i>, that is,\n              compute <i>rnum</i> &amp; 0x1F.</li>\n          <li>Return the result of performing a zero-filling right shift of <i>lnum</i> by <i>shiftCount</i> bits. Vacated bits\n              are filled with zero. The result is an unsigned 32-bit integer.</li>\n        </ol>\n      </section>\n    </section>\n  "}