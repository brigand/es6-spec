{"id":"sec-call","html":"\n      <h1><span class=\"secnum\" id=\"sec-7.3.12\"><a href=\"/sec/sec-call.html\" title=\"link to this section\">7.3.12</a></span> Call(F, V,\n          [argumentsList])</h1>\n\n      <p class=\"normalbefore\">The abstract operation Call is used to call the [[Call]] internal method of a function object. The\n      operation is called with arguments  <var>F</var>, <var>V</var> , and optionally <var>argumentsList</var> where <var>F</var>\n      is the function object, <var>V</var> is an <a href=\"/sec/sec-ecmascript-language-types.html\">ECMAScript language value</a> that is\n      the <b>this</b> value of the [[Call]], and <var>argumentsList</var> is the value passed to the corresponding argument of the\n      internal method. If <var>argumentsList</var> is not present, an empty <a href=\"/sec/sec-list-and-record-specification-type.html\">List</a> is used as its value. This abstract operation performs the following\n      steps:</p>\n\n      <ol class=\"proc\">\n        <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>F</i>).</li>\n        <li>If <i>argumentsList</i> was not passed, let <i>argumentsList</i> be a new empty <a href=\"/sec/sec-list-and-record-specification-type.html\">List</a>.</li>\n        <li>If <a href=\"/sec/sec-iscallable.html\">IsCallable</a>(<i>F</i>) is <b>false</b>, throw a <b>TypeError</b> exception.</li>\n        <li>Return <i>F</i>.[[Call]](<i>V</i>, <i>argumentsList</i>).</li>\n      </ol>\n    "}