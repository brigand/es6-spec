{"id":"sec-class-definitions-runtime-semantics-evaluation","html":"\n      <h1><span class=\"secnum\" id=\"sec-14.5.16\"><a href=\"/sec/sec-class-definitions-runtime-semantics-evaluation.html\" title=\"link to this section\">14.5.16</a></span> Runtime Semantics: Evaluation</h1>\n      <div class=\"gp prod\"><span class=\"nt\">ClassDeclaration</span> <span class=\"geq\">:</span> <code class=\"t\">class</code> <span class=\"nt\">BindingIdentifier</span> <span class=\"nt\">ClassTail</span></div>\n      <ol class=\"proc\">\n        <li>Let <i>status</i> be the result of BindingClassDeclarationEvaluation of this <i>ClassDeclaration.</i></li>\n        <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>status</i>).</li>\n        <li>Return <a href=\"/sec/sec-normalcompletion.html\">NormalCompletion</a>(<span style=\"font-family: sans-serif\">empty</span>).</li>\n      </ol>\n\n      <p class=\"Note\"><var>NOTE 1</var>\t<span class=\"prod\"><span class=\"nt\">ClassDeclaration</span> <span class=\"geq\">:</span>\n      <code class=\"t\">class</code> <span class=\"nt\">ClassTail</span></span> <var>only occurs as part of an</var> <span class=\"nt\">ExportDeclaration</span> and is never directly evaluated.</p>\n\n      <div class=\"gp prod\"><span class=\"nt\">ClassExpression</span> <span class=\"geq\">:</span> <code class=\"t\">class</code> <span class=\"nt\">BindingIdentifier</span><sub class=\"g-opt\">opt</sub> <span class=\"nt\">ClassTail</span></div>\n      <ol class=\"proc\">\n        <li>If <i>BindingIdentifier</i><sub>opt</sub> is not  present, let <i>className</i> be <b>undefined</b>.</li>\n        <li>Else, let <i>className</i> be StringValue of <i>BindingIdentifier</i>.</li>\n        <li>Let <i>value</i> be the result of ClassDefinitionEvaluation of <i>ClassTail</i> with argument <i>className</i>.</li>\n        <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>value</i>).</li>\n        <li>If <i>className</i> is not <b>undefined</b>, then\n          <ol class=\"block\">\n            <li>Let <i>hasNameProperty</i> be <a href=\"/sec/sec-hasownproperty.html\">HasOwnProperty</a>(<i>value</i>,\n                <code>&quot;name&quot;</code>).</li>\n            <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>hasNameProperty</i>).</li>\n            <li>If <i>hasNameProperty</i> is <b>false</b>, then\n              <ol class=\"block\">\n                <li>Perform <a href=\"/sec/sec-setfunctionname.html\">SetFunctionName</a>(<i>value</i>, <i>className</i>).</li>\n              </ol>\n            </li>\n          </ol>\n        </li>\n        <li>Return <a href=\"/sec/sec-normalcompletion.html\">NormalCompletion</a>(<i>value</i>).</li>\n      </ol>\n\n      <div class=\"note\">\n        <p><span class=\"nh\">NOTE 2</span> If the class definition included a <code>name</code> static method then that method is\n        not over-written with a <code>name</code> data property for the class name.</p>\n      </div>\n    "}