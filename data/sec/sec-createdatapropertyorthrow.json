{"id":"sec-createdatapropertyorthrow","html":"\n      <h1><span class=\"secnum\" id=\"sec-7.3.6\"><a href=\"/sec/sec-createdatapropertyorthrow.html\" title=\"link to this section\">7.3.6</a></span> CreateDataPropertyOrThrow (O, P, V)</h1>\n\n      <p class=\"normalbefore\">The abstract operation <span style=\"font-family: Times New Roman\">CreateDataPropertyOrThrow</span>\n      is used to create a new own property of an object. It throws a <span class=\"value\">TypeError</span> exception if the\n      requested property update cannot be performed. The operation is called with arguments  <var>O</var>, <var>P</var>, and\n      <var>V</var> where <var>O</var> is the object, <var>P</var> is the <a href=\"/sec/sec-object-type.html\">property key</a>, and\n      <var>V</var> is the value for the property. This abstract operation performs the following steps:</p>\n\n      <ol class=\"proc\">\n        <li><a href=\"/sec/sec-algorithm-conventions.html\">Assert</a>: <a href=\"/sec/sec-ecmascript-data-types-and-values.html\">Type</a>(<i>O</i>) is\n            Object.</li>\n        <li><a href=\"/sec/sec-algorithm-conventions.html\">Assert</a>:  <a href=\"/sec/sec-ispropertykey.html\">IsPropertyKey</a>(<i>P</i>) is\n            <b>true</b>.</li>\n        <li>Let  <i>success</i> be <a href=\"/sec/sec-createdataproperty.html\">CreateDataProperty</a>(<i>O</i>,  <i>P</i>, <i>V</i>).</li>\n        <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>success</i>).</li>\n        <li>If <i>success</i> is <b>false</b>, throw a <b>TypeError</b> exception.</li>\n        <li>Return <i>success</i>.</li>\n      </ol>\n\n      <div class=\"note\">\n        <p><span class=\"nh\">NOTE</span> This abstract operation creates a property whose attributes are set to the same defaults\n        used for properties created by the ECMAScript language assignment operator. Normally, the property will not already exist.\n        If it does exist and is not configurable or if <var>O</var> is not extensible, [[DefineOwnProperty]] will return <span class=\"value\">false</span> causing this operation to throw a <span class=\"value\">TypeError</span> exception.</p>\n      </div>\n    "}