{"id":"sec-createresolvingfunctions","html":"\n        <div class=\"front\">\n          <h1><span class=\"secnum\" id=\"sec-25.4.1.3\"><a href=\"/sec/sec-createresolvingfunctions.html\" title=\"link to this section\">25.4.1.3</a></span> CreateResolvingFunctions ( promise )</h1>\n\n          <p class=\"normalbefore\">When CreateResolvingFunctions is performed with argument <var>promise</var>, the following steps\n          are taken:</p>\n\n          <ol class=\"proc\">\n            <li>Let <i>alreadyResolved</i> be a new Record { [[value]]: <b>false</b> }.</li>\n            <li>Let <i>resolve</i> be a new built-in function object as defined in Promise Resolve Functions (<a href=\"/sec/sec-promise-resolve-functions.html\">25.4.1.3.2</a>).</li>\n            <li>Set the [[Promise]] <a href=\"/sec/sec-object-internal-methods-and-internal-slots.html\">internal slot</a> of <i>resolve</i>\n                to <i>promise</i>.</li>\n            <li>Set the [[AlreadyResolved]] <a href=\"/sec/sec-object-internal-methods-and-internal-slots.html\">internal slot</a> of\n                <i>resolve</i> to <i>alreadyResolved</i>.</li>\n            <li>Let <i>reject</i> be a new built-in function object as defined in Promise Reject Functions (<a href=\"/sec/sec-promise-reject-functions.html\">25.4.1.3.1</a>).</li>\n            <li>Set the [[Promise]] <a href=\"/sec/sec-object-internal-methods-and-internal-slots.html\">internal slot</a> of <i>reject</i>\n                to <i>promise</i>.</li>\n            <li>Set the [[AlreadyResolved]] <a href=\"/sec/sec-object-internal-methods-and-internal-slots.html\">internal slot</a> of\n                <i>reject</i> to <i>alreadyResolved</i>.</li>\n            <li>Return a new Record { [[Resolve]]: <i>resolve</i>, [[Reject]]: <i>reject</i> }.</li>\n          </ol>\n        </div>\n\n        <section id=\"sec-promise-reject-functions\">\n          <h1><span class=\"secnum\" id=\"sec-25.4.1.3.1\"><a href=\"/sec/sec-promise-reject-functions.html\" title=\"link to this section\">25.4.1.3.1</a></span> Promise Reject Functions</h1>\n\n          <p>A promise reject function is an anonymous built-in function that has [[Promise]] and [[AlreadyResolved]] internal\n          slots.</p>\n\n          <p class=\"normalbefore\">When a promise reject function <var>F</var> is called with argument <var>reason</var>, the\n          following steps are taken:</p>\n\n          <ol class=\"proc\">\n            <li><a href=\"/sec/sec-algorithm-conventions.html\">Assert</a>: <i>F</i> has a [[Promise]] <a href=\"/sec/sec-object-internal-methods-and-internal-slots.html\">internal slot</a> whose value is an Object.</li>\n            <li>Let <i>promise</i> be the value of <i>F</i>&apos;s [[Promise]] <a href=\"/sec/sec-object-internal-methods-and-internal-slots.html\">internal slot</a>.</li>\n            <li>Let <i>alreadyResolved</i> be the value of <i>F</i>&apos;s [[AlreadyResolved]] <a href=\"/sec/sec-object-internal-methods-and-internal-slots.html\">internal slot</a>.</li>\n            <li>If <i>alreadyResolved</i>.[[value]] is <b>true</b>, return <b>undefined</b>.</li>\n            <li>Set <i>alreadyResolved</i>.[[value]] to <b>true</b>.</li>\n            <li>Return <a href=\"/sec/sec-rejectpromise.html\">RejectPromise</a>(<i>promise</i>, <i>reason</i>).</li>\n          </ol>\n\n          <p>The <code>length</code> property of a promise reject function is <b>1</b>.</p>\n        </section>\n\n        <section id=\"sec-promise-resolve-functions\">\n          <h1><span class=\"secnum\" id=\"sec-25.4.1.3.2\"><a href=\"/sec/sec-promise-resolve-functions.html\" title=\"link to this section\">25.4.1.3.2</a></span> Promise Resolve Functions</h1>\n\n          <p>A promise resolve function is an anonymous built-in function that has [[Promise]] and [[AlreadyResolved]] internal\n          slots.</p>\n\n          <p class=\"normalbefore\">When a promise resolve function <var>F</var> is called with argument <var>resolution</var>, the\n          following steps are taken:</p>\n\n          <ol class=\"proc\">\n            <li><a href=\"/sec/sec-algorithm-conventions.html\">Assert</a>: <i>F</i> has a [[Promise]] <a href=\"/sec/sec-object-internal-methods-and-internal-slots.html\">internal slot</a> whose value is an Object.</li>\n            <li>Let <i>promise</i> be the value of <i>F</i>&apos;s [[Promise]] <a href=\"/sec/sec-object-internal-methods-and-internal-slots.html\">internal slot</a>.</li>\n            <li>Let <i>alreadyResolved</i> be the value of <i>F</i>&apos;s [[AlreadyResolved]] <a href=\"/sec/sec-object-internal-methods-and-internal-slots.html\">internal slot</a>.</li>\n            <li>If <i>alreadyResolved</i>.[[value]] is <b>true</b>, return <b>undefined</b>.</li>\n            <li>Set <i>alreadyResolved</i>.[[value]] to <b>true</b>.</li>\n            <li>If <a href=\"/sec/sec-samevalue.html\">SameValue</a>(<i>resolution</i>, <i>promise</i>) is <b>true</b>, then\n              <ol class=\"block\">\n                <li>Let <i>selfResolutionError</i> be a newly created <b>TypeError</b> object.</li>\n                <li>Return <a href=\"/sec/sec-rejectpromise.html\">RejectPromise</a>(<i>promise</i>, <i>selfResolutionError</i>).</li>\n              </ol>\n            </li>\n            <li>If <a href=\"/sec/sec-ecmascript-data-types-and-values.html\">Type</a>(<i>resolution</i>) is not Object, then\n              <ol class=\"block\">\n                <li>Return <a href=\"/sec/sec-fulfillpromise.html\">FulfillPromise</a>(<i>promise</i>, <i>resolution</i>).</li>\n              </ol>\n            </li>\n            <li>Let <i>then</i> be <a href=\"/sec/sec-get-o-p.html\">Get</a>(<i>resolution</i>, <code>&quot;then&quot;</code>).</li>\n            <li>If <i>then</i> is an <a href=\"/sec/sec-completion-record-specification-type.html\">abrupt completion</a>, then\n              <ol class=\"block\">\n                <li>Return <a href=\"/sec/sec-rejectpromise.html\">RejectPromise</a>(<i>promise</i>, <i>then</i>.[[value]]).</li>\n              </ol>\n            </li>\n            <li>Let <i>thenAction</i> be <i>then</i>.[[value]].</li>\n            <li>If <a href=\"/sec/sec-iscallable.html\">IsCallable</a>(<i>thenAction</i>) is <b>false</b>, then\n              <ol class=\"block\">\n                <li>Return <a href=\"/sec/sec-fulfillpromise.html\">FulfillPromise</a>(<i>promise</i>, <i>resolution</i>).</li>\n              </ol>\n            </li>\n            <li>Perform <a href=\"/sec/sec-enqueuejob.html\">EnqueueJob</a> (<code>&quot;PromiseJobs&quot;</code>, <a href=\"/sec/sec-promiseresolvethenablejob.html\">PromiseResolveThenableJob</a>, &#xAB;&#x200D;<i>promise</i>,\n                <i>resolution</i>, <i>thenAction</i>&#xBB;)</li>\n            <li>Return <b>undefined</b>.</li>\n          </ol>\n\n          <p>The <code>length</code> property of a promise resolve function is <b>1</b>.</p>\n        </section>\n      "}