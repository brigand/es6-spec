{"id":"sec-data-blocks","html":"\n      <div class=\"front\">\n        <h1><span class=\"secnum\" id=\"sec-6.2.6\"><a href=\"/sec/sec-data-blocks.html\" title=\"link to this section\">6.2.6</a></span> Data\n            Blocks</h1>\n\n        <p>The Data Block specification type is used to describe a distinct and mutable sequence of byte-sized (8 bit)  numeric\n        values. A Data Block value is created with a fixed number of bytes that each have the initial value 0.</p>\n\n        <p>For notational convenience within this specification, an array-like syntax can be used to access the individual bytes\n        of a Data Block value. This notation presents a Data Block value as a 0-origined integer indexed sequence of bytes. For\n        example, if <var>db</var> is a 5 byte Data Block value then <var>db</var>[2] can be used to access its 3<sup>rd</sup>\n        byte.</p>\n\n        <p>The following abstract operations are used in this specification to operate upon Data Block values:</p>\n      </div>\n\n      <section id=\"sec-createbytedatablock\">\n        <h1><span class=\"secnum\" id=\"sec-6.2.6.1\"><a href=\"/sec/sec-createbytedatablock.html\" title=\"link to this section\">6.2.6.1</a></span> CreateByteDataBlock(size)</h1>\n\n        <p class=\"normalbefore\">When the abstract operation CreateByteDataBlock is called with integer argument <var>size</var>,\n        the following steps are taken:</p>\n\n        <ol class=\"proc\">\n          <li><a href=\"/sec/sec-algorithm-conventions.html\">Assert</a>: <i>size</i>&#x2265;0.</li>\n          <li>Let <i>db</i> be a new <a href=\"/sec/sec-data-blocks.html\">Data Block</a> value consisting of <i>size</i> bytes. If it is\n              impossible to create such a <a href=\"/sec/sec-data-blocks.html\">Data Block</a>, throw a <b>RangeError</b> exception.</li>\n          <li>Set all of the bytes of <i>db</i> to 0.</li>\n          <li>Return <i>db</i>.</li>\n        </ol>\n      </section>\n\n      <section id=\"sec-copydatablockbytes\">\n        <h1><span class=\"secnum\" id=\"sec-6.2.6.2\"><a href=\"/sec/sec-copydatablockbytes.html\" title=\"link to this section\">6.2.6.2</a></span> CopyDataBlockBytes(toBlock, toIndex, fromBlock, fromIndex, count)</h1>\n\n        <p class=\"normalbefore\">When the abstract operation CopyDataBlockBytes is called the following steps are taken:</p>\n\n        <ol class=\"proc\">\n          <li><a href=\"/sec/sec-algorithm-conventions.html\">Assert</a>: <i>fromBlock</i> and <i>toBlock</i> are distinct <a href=\"/sec/sec-data-blocks.html\">Data Block</a> values.</li>\n          <li><a href=\"/sec/sec-algorithm-conventions.html\">Assert</a>: <i>fromIndex</i>, <i>toIndex</i>, and <i>count</i> are positive\n              integer values.</li>\n          <li>Let <i>fromSize</i> be the number of bytes in <i>fromBlock</i>.</li>\n          <li><a href=\"/sec/sec-algorithm-conventions.html\">Assert</a>: <i>fromIndex</i>+<i>count</i> &#x2264; <i>fromSize</i>.</li>\n          <li>Let <i>toSize</i> be the number of bytes in <i>toBlock</i>.</li>\n          <li><a href=\"/sec/sec-algorithm-conventions.html\">Assert</a>: <i>toIndex</i>+<i>count</i> &#x2264; <i>toSize</i>.</li>\n          <li>Repeat, while <i>count</i>&gt;0\n            <ol class=\"block\">\n              <li>Set <i>toBlock</i>[<i>toIndex</i>] to the value of <i>fromBlock</i>[<i>fromIndex</i>].</li>\n              <li>Increment <i>toIndex</i> and <i>fromIndex</i> each by 1.</li>\n              <li>Decrement <i>count</i> by 1.</li>\n            </ol>\n          </li>\n          <li>Return <a href=\"/sec/sec-normalcompletion.html\">NormalCompletion</a>(<span style=\"font-family: sans-serif\">empty</span>)</li>\n        </ol>\n      </section>\n    "}