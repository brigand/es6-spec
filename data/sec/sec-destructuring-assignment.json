{"id":"sec-destructuring-assignment","html":"\n      <div class=\"front\">\n        <h1><span class=\"secnum\" id=\"sec-12.14.5\"><a href=\"/sec/sec-destructuring-assignment.html\" title=\"link to this section\">12.14.5</a></span> Destructuring Assignment</h1>\n        <h2>Supplemental Syntax</h2>\n\n        <p>In certain circumstances when processing the production <span class=\"prod\"><span class=\"nt\">AssignmentExpression</span>\n        <span class=\"geq\">:</span> <span class=\"nt\">LeftHandSideExpression</span> <code class=\"t\">=</code> <span class=\"nt\">AssignmentExpression</span></span> the following grammar is used to refine the interpretation of  <span class=\"nt\">LeftHandSideExpression</span>.</p>\n\n        <div class=\"gp\">\n          <div class=\"lhs\"><span class=\"nt\">AssignmentPattern</span><sub class=\"g-params\">[Yield]</sub> <span class=\"geq\">:</span></div>\n          <div class=\"rhs\"><span class=\"nt\">ObjectAssignmentPattern</span><sub class=\"g-params\">[?Yield]</sub></div>\n          <div class=\"rhs\"><span class=\"nt\">ArrayAssignmentPattern</span><sub class=\"g-params\">[?Yield]</sub></div>\n        </div>\n\n        <div class=\"gp\">\n          <div class=\"lhs\"><span class=\"nt\">ObjectAssignmentPattern</span><sub class=\"g-params\">[Yield]</sub> <span class=\"geq\">:</span></div>\n          <div class=\"rhs\"><code class=\"t\">{</code> <code class=\"t\">}</code></div>\n          <div class=\"rhs\"><code class=\"t\">{</code> <span class=\"nt\">AssignmentPropertyList</span><sub class=\"g-params\">[?Yield]</sub> <code class=\"t\">}</code></div>\n          <div class=\"rhs\"><code class=\"t\">{</code> <span class=\"nt\">AssignmentPropertyList</span><sub class=\"g-params\">[?Yield]</sub> <code class=\"t\">,</code> <code class=\"t\">}</code></div>\n        </div>\n\n        <div class=\"gp\">\n          <div class=\"lhs\"><span class=\"nt\">ArrayAssignmentPattern</span><sub class=\"g-params\">[Yield]</sub> <span class=\"geq\">:</span></div>\n          <div class=\"rhs\"><code class=\"t\">[</code> <span class=\"nt\">Elision</span><sub class=\"g-opt\">opt</sub> <span class=\"nt\">AssignmentRestElement</span><sub class=\"g-params\">[?Yield]</sub><sub class=\"g-opt\">opt</sub> <code class=\"t\">]</code></div>\n          <div class=\"rhs\"><code class=\"t\">[</code> <span class=\"nt\">AssignmentElementList</span><sub class=\"g-params\">[?Yield]</sub> <code class=\"t\">]</code></div>\n          <div class=\"rhs\"><code class=\"t\">[</code> <span class=\"nt\">AssignmentElementList</span><sub class=\"g-params\">[?Yield]</sub> <code class=\"t\">,</code> <span class=\"nt\">Elision</span><sub class=\"g-opt\">opt</sub> <span class=\"nt\">AssignmentRestElement</span><sub class=\"g-params\">[?Yield]</sub><sub class=\"g-opt\">opt</sub> <code class=\"t\">]</code></div>\n        </div>\n\n        <div class=\"gp\">\n          <div class=\"lhs\"><span class=\"nt\">AssignmentPropertyList</span><sub class=\"g-params\">[Yield]</sub> <span class=\"geq\">:</span></div>\n          <div class=\"rhs\"><span class=\"nt\">AssignmentProperty</span><sub class=\"g-params\">[?Yield]</sub></div>\n          <div class=\"rhs\"><span class=\"nt\">AssignmentPropertyList</span><sub class=\"g-params\">[?Yield]</sub> <code class=\"t\">,</code> <span class=\"nt\">AssignmentProperty</span><sub class=\"g-params\">[?Yield]</sub></div>\n        </div>\n\n        <div class=\"gp\">\n          <div class=\"lhs\"><span class=\"nt\">AssignmentElementList</span><sub class=\"g-params\">[Yield]</sub> <span class=\"geq\">:</span></div>\n          <div class=\"rhs\"><span class=\"nt\">AssignmentElisionElement</span><sub class=\"g-params\">[?Yield]</sub></div>\n          <div class=\"rhs\"><span class=\"nt\">AssignmentElementList</span><sub class=\"g-params\">[?Yield]</sub> <code class=\"t\">,</code> <span class=\"nt\">AssignmentElisionElement</span><sub class=\"g-params\">[?Yield]</sub></div>\n        </div>\n\n        <div class=\"gp\">\n          <div class=\"lhs\"><span class=\"nt\">AssignmentElisionElement</span><sub class=\"g-params\">[Yield]</sub> <span class=\"geq\">:</span></div>\n          <div class=\"rhs\"><span class=\"nt\">Elision</span><sub class=\"g-opt\">opt</sub> <span class=\"nt\">AssignmentElement</span><sub class=\"g-params\">[?Yield]</sub></div>\n        </div>\n\n        <div class=\"gp\">\n          <div class=\"lhs\"><span class=\"nt\">AssignmentProperty</span><sub class=\"g-params\">[Yield]</sub> <span class=\"geq\">:</span></div>\n          <div class=\"rhs\"><span class=\"nt\">IdentifierReference</span><sub class=\"g-params\">[?Yield]</sub> <span class=\"nt\">Initializer</span><sub class=\"g-params\">[In,?Yield]</sub><sub class=\"g-opt\">opt</sub></div>\n          <div class=\"rhs\"><span class=\"nt\">PropertyName</span> <code class=\"t\">:</code> <span class=\"nt\">AssignmentElement</span><sub class=\"g-params\">[?Yield]</sub></div>\n        </div>\n\n        <div class=\"gp\">\n          <div class=\"lhs\"><span class=\"nt\">AssignmentElement</span><sub class=\"g-params\">[Yield]</sub> <span class=\"geq\">:</span></div>\n          <div class=\"rhs\"><span class=\"nt\">DestructuringAssignmentTarget</span><sub class=\"g-params\">[?Yield]</sub> <span class=\"nt\">Initializer</span><sub class=\"g-params\">[In,?Yield]</sub><sub class=\"g-opt\">opt</sub></div>\n        </div>\n\n        <div class=\"gp\">\n          <div class=\"lhs\"><span class=\"nt\">AssignmentRestElement</span><sub class=\"g-params\">[Yield]</sub> <span class=\"geq\">:</span></div>\n          <div class=\"rhs\"><code class=\"t\">...</code> <span class=\"nt\">DestructuringAssignmentTarget</span><sub class=\"g-params\">[?Yield]</sub></div>\n        </div>\n\n        <div class=\"gp\">\n          <div class=\"lhs\"><span class=\"nt\">DestructuringAssignmentTarget</span><sub class=\"g-params\">[Yield]</sub> <span class=\"geq\">:</span></div>\n          <div class=\"rhs\"><span class=\"nt\">LeftHandSideExpression</span><sub class=\"g-params\">[?Yield]</sub></div>\n        </div>\n      </div>\n\n      <section id=\"sec-destructuring-assignment-static-semantics-early-errors\">\n        <h1><span class=\"secnum\" id=\"sec-12.14.5.1\"><a href=\"/sec/sec-destructuring-assignment-static-semantics-early-errors.html\" title=\"link to this section\">12.14.5.1</a></span> Static Semantics:  Early Errors</h1>\n        <div class=\"gp prod\"><span class=\"nt\">AssignmentProperty</span> <span class=\"geq\">:</span> <span class=\"nt\">IdentifierReference</span> <span class=\"nt\">Initializer</span><sub class=\"g-opt\">opt</sub></div>\n        <ul>\n          <li>\n            <p>It is a Syntax Error if IsValidSimpleAssignmentTarget of <span class=\"nt\">IdentifierReference</span> is <span class=\"value\">false</span>.</p>\n          </li>\n        </ul>\n        <div class=\"gp prod\"><span class=\"nt\">DestructuringAssignmentTarget</span> <span class=\"geq\">:</span> <span class=\"nt\">LeftHandSideExpression</span></div>\n        <ul>\n          <li>\n            <p>It is a Syntax Error if <span class=\"nt\">LeftHandSideExpression</span> is either an <span class=\"nt\">ObjectLiteral</span> or an <span class=\"nt\">ArrayLiteral</span> and if the lexical token sequence matched\n            by <span class=\"nt\">LeftHandSideExpression</span> cannot be parsed with no tokens left over using <span class=\"nt\">AssignmentPattern</span> as the goal symbol.</p>\n          </li>\n\n          <li>\n            <p>It is a Syntax Error if <span class=\"nt\">LeftHandSideExpression</span> is neither an <span class=\"nt\">ObjectLiteral</span> nor an <span class=\"nt\">ArrayLiteral</span> and <span style=\"font-family: Times New\n            Roman\">IsValidSimpleAssignmentTarget</span>(<span class=\"nt\">LeftHandSideExpression</span>) is <span class=\"value\">false</span>.</p>\n          </li>\n        </ul>\n      </section>\n\n      <section id=\"sec-runtime-semantics-destructuringassignmentevaluation\">\n        <h1><span class=\"secnum\" id=\"sec-12.14.5.2\"><a href=\"/sec/sec-runtime-semantics-destructuringassignmentevaluation.html\" title=\"link to this section\">12.14.5.2</a></span> Runtime Semantics: DestructuringAssignmentEvaluation</h1>\n\n        <p>with parameter <var>value</var></p>\n\n        <div class=\"gp prod\"><span class=\"nt\">ObjectAssignmentPattern</span> <span class=\"geq\">:</span> <code class=\"t\">{</code> <code class=\"t\">}</code></div>\n        <ol class=\"proc\">\n          <li>Let <i>valid</i> be <a href=\"/sec/sec-requireobjectcoercible.html\">RequireObjectCoercible</a>(<i>value</i>).</li>\n          <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>valid</i>).</li>\n          <li>Return <a href=\"/sec/sec-normalcompletion.html\">NormalCompletion</a>(<span style=\"font-family:\n              sans-serif\">empty</span>).</li>\n        </ol>\n\n        <div class=\"gp\">\n          <div class=\"lhs\"><span class=\"nt\">ObjectAssignmentPattern</span> <span class=\"geq\">:</span></div>\n          <div class=\"rhs\"><code class=\"t\">{</code> <span class=\"nt\">AssignmentPropertyList</span> <code class=\"t\">}</code></div>\n          <div class=\"rhs\"><code class=\"t\">{</code> <span class=\"nt\">AssignmentPropertyList</span> <code class=\"t\">,</code> <code class=\"t\">}</code></div>\n        </div>\n\n        <ol class=\"proc\">\n          <li>Let <i>valid</i> be <a href=\"/sec/sec-requireobjectcoercible.html\">RequireObjectCoercible</a>(<i>value</i>).</li>\n          <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>valid</i>).</li>\n          <li>Return the result of performing DestructuringAssignmentEvaluation for <i>AssignmentPropertyList</i> using\n              <i>value</i> as the argument.</li>\n        </ol>\n        <div class=\"gp prod\"><span class=\"nt\">ArrayAssignmentPattern</span> <span class=\"geq\">:</span> <code class=\"t\">[</code> <code class=\"t\">]</code></div>\n        <ol class=\"proc\">\n          <li>Let <i>iterator</i> be <a href=\"/sec/sec-getiterator.html\">GetIterator</a>(<i>value</i>).</li>\n          <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>iterator</i>).</li>\n          <li>Return <a href=\"/sec/sec-iteratorclose.html\">IteratorClose</a>(<i>iterator</i>, <a href=\"/sec/sec-normalcompletion.html\">NormalCompletion</a>(<span style=\"font-family: sans-serif\">empty</span>)).</li>\n        </ol>\n        <div class=\"gp prod\"><span class=\"nt\">ArrayAssignmentPattern</span> <span class=\"geq\">:</span> <code class=\"t\">[</code> <span class=\"nt\">Elision</span> <code class=\"t\">]</code></div>\n        <ol class=\"proc\">\n          <li>Let <i>iterator</i> be <a href=\"/sec/sec-getiterator.html\">GetIterator</a>(<i>value</i>).</li>\n          <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>iterator</i>).</li>\n          <li>Let <i>iteratorRecord</i> be Record {[[iterator]]: <i>iterator</i>, [[done]]: <b>false</b>}.</li>\n          <li>Let <i>result</i> be the result of performing IteratorDestructuringAssignmentEvaluation of <i>Elision</i> with\n              <i>iteratorRecord</i> as the argument.</li>\n          <li>If <i>iteratorRecord</i>.[[done]] is <b>false</b>, return <a href=\"/sec/sec-iteratorclose.html\">IteratorClose</a>(<i>iterator</i>, <i>result</i>).</li>\n          <li>Return <i>result</i>.</li>\n        </ol>\n        <div class=\"gp prod\"><span class=\"nt\">ArrayAssignmentPattern</span> <span class=\"geq\">:</span> <code class=\"t\">[</code> <span class=\"nt\">Elision</span><sub class=\"g-opt\">opt</sub> <span class=\"nt\">AssignmentRestElement</span> <code class=\"t\">]</code></div>\n        <ol class=\"proc\">\n          <li>Let <i>iterator</i> be <a href=\"/sec/sec-getiterator.html\">GetIterator</a>(<i>value</i>).</li>\n          <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>iterator</i>).</li>\n          <li>Let <i>iteratorRecord</i> be Record {[[iterator]]: <i>iterator</i>, [[done]]: <b>false</b>}.</li>\n          <li>If <i>Elision</i> is present, then\n            <ol class=\"block\">\n              <li>Let <i>status</i> be the result of performing IteratorDestructuringAssignmentEvaluation of <i>Elision</i> with\n                  <i>iteratorRecord</i> as the argument.</li>\n              <li>If <i>status</i> is an <a href=\"/sec/sec-completion-record-specification-type.html\">abrupt completion</a>, then\n                <ol class=\"block\">\n                  <li>If <i>iteratorRecord</i>.[[done]] is <b>false</b>, return <a href=\"/sec/sec-iteratorclose.html\">IteratorClose</a>(<i>iterator</i>, <i>status</i>).</li>\n                  <li>Return <a href=\"/sec/sec-completion-record-specification-type.html\">Completion</a>(<i>status</i>).</li>\n                </ol>\n              </li>\n            </ol>\n          </li>\n          <li>Let <i>result</i> be the result of performing IteratorDestructuringAssignmentEvaluation of\n              <i>AssignmentRestElement</i> with <i>iteratorRecord</i> as the argument.</li>\n          <li>If <i>iteratorRecord</i>.[[done]] is <b>false</b>, return <a href=\"/sec/sec-iteratorclose.html\">IteratorClose</a>(<i>iterator</i>, <i>result</i>).</li>\n          <li>Return <i>result</i>.</li>\n        </ol>\n        <div class=\"gp prod\"><span class=\"nt\">ArrayAssignmentPattern</span> <span class=\"geq\">:</span> <code class=\"t\">[</code> <span class=\"nt\">AssignmentElementList</span> <code class=\"t\">]</code></div>\n        <ol class=\"proc\">\n          <li>Let <i>iterator</i> be <a href=\"/sec/sec-getiterator.html\">GetIterator</a>(<i>value</i>).</li>\n          <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>iterator</i>).</li>\n          <li>Let <i>iteratorRecord</i> be Record {[[iterator]]: <i>iterator</i>, [[done]]: <b>false</b>}.</li>\n          <li>Let <i>result</i> be the result of performing IteratorDestructuringAssignmentEvaluation of\n              <i>AssignmentElementList</i> using <i>iteratorRecord</i> as the argument.</li>\n          <li>If <i>iteratorRecord</i>.[[done]] is <b>false</b>, return <a href=\"/sec/sec-iteratorclose.html\">IteratorClose</a>(<i>iterator</i>, <i>result</i>).</li>\n          <li>Return <i>result</i>.</li>\n        </ol>\n        <div class=\"gp prod\"><span class=\"nt\">ArrayAssignmentPattern</span> <span class=\"geq\">:</span> <code class=\"t\">[</code> <span class=\"nt\">AssignmentElementList</span> <code class=\"t\">,</code> <span class=\"nt\">Elision</span><sub class=\"g-opt\">opt</sub> <span class=\"nt\">AssignmentRestElement</span><sub class=\"g-opt\">opt</sub> <code class=\"t\">]</code></div>\n        <ol class=\"proc\">\n          <li>Let <i>iterator</i> be <a href=\"/sec/sec-getiterator.html\">GetIterator</a>(<i>value</i>).</li>\n          <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>iterator</i>).</li>\n          <li>Let <i>iteratorRecord</i> be Record {[[iterator]]: <i>iterator</i>, [[done]]: <b>false</b>}.</li>\n          <li>Let <i>status</i> be the result of performing IteratorDestructuringAssignmentEvaluation of\n              <i>AssignmentElementList</i> using <i>iteratorRecord</i> as the argument.</li>\n          <li>If <i>status</i> is an <a href=\"/sec/sec-completion-record-specification-type.html\">abrupt completion</a>, then\n            <ol class=\"block\">\n              <li>If <i>iteratorRecord</i>.[[done]] is <b>false</b>, return <a href=\"/sec/sec-iteratorclose.html\">IteratorClose</a>(<i>iterator</i>, <i>status</i>).</li>\n              <li>Return <a href=\"/sec/sec-completion-record-specification-type.html\">Completion</a>(<i>status</i>).</li>\n            </ol>\n          </li>\n          <li>If <i>Elision</i> is present, then\n            <ol class=\"block\">\n              <li>Let <i>status</i> be the result of performing IteratorDestructuringAssignmentEvaluation of <i>Elision</i> with\n                  <i>iteratorRecord</i> as the argument.</li>\n              <li>If <i>status</i> is an <a href=\"/sec/sec-completion-record-specification-type.html\">abrupt completion</a>, then\n                <ol class=\"block\">\n                  <li>If <i>iteratorRecord</i>.[[done]] is <b>false</b>, return <a href=\"/sec/sec-iteratorclose.html\">IteratorClose</a>(<i>iterator</i>, <i>status</i>).</li>\n                  <li>Return <a href=\"/sec/sec-completion-record-specification-type.html\">Completion</a>(<i>status</i>).</li>\n                </ol>\n              </li>\n            </ol>\n          </li>\n          <li>If <i>AssignmentRestElement</i> is present, then\n            <ol class=\"block\">\n              <li>Let <i>status</i> be the result of performing IteratorDestructuringAssignmentEvaluation of\n                  <i>AssignmentRestElement</i> with <i>iteratorRecord</i> as the argument.</li>\n            </ol>\n          </li>\n          <li>If <i>iteratorRecord</i>.[[done]] is <b>false</b>, return <a href=\"/sec/sec-iteratorclose.html\">IteratorClose</a>(<i>iterator</i>, <i>status</i>).</li>\n          <li>Return <a href=\"/sec/sec-completion-record-specification-type.html\">Completion</a>(<i>status</i>).</li>\n        </ol>\n        <div class=\"gp prod\"><span class=\"nt\">AssignmentPropertyList</span> <span class=\"geq\">:</span> <span class=\"nt\">AssignmentPropertyList</span> <code class=\"t\">,</code> <span class=\"nt\">AssignmentProperty</span></div>\n        <ol class=\"proc\">\n          <li>Let <i>status</i> be the result of performing DestructuringAssignmentEvaluation for <i>AssignmentPropertyList</i>\n              using <i>value</i> as the argument.</li>\n          <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>status</i>).</li>\n          <li>Return the result of performing DestructuringAssignmentEvaluation for <i>AssignmentProperty</i> using <i>value</i>\n              as the argument.</li>\n        </ol>\n        <div class=\"gp prod\"><span class=\"nt\">AssignmentProperty</span> <span class=\"geq\">:</span> <span class=\"nt\">IdentifierReference</span> <span class=\"nt\">Initializer</span><sub class=\"g-opt\">opt</sub></div>\n        <ol class=\"proc\">\n          <li>Let <i>P</i> be StringValue of <i>IdentifierReference</i>.</li>\n          <li>Let <i>lref</i> be <a href=\"/sec/sec-resolvebinding.html\">ResolveBinding</a>(<i>P)</i>.</li>\n          <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>P</i>).</li>\n          <li>Let <i>v</i> be <a href=\"/sec/sec-getv.html\">GetV</a>(<i>value</i>, <i>P</i>).</li>\n          <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>v</i>).</li>\n          <li>If <i>Initializer</i><sub>opt</sub> is present and <i>v</i> is <b>undefined</b>, then\n            <ol class=\"block\">\n              <li>Let <i>defaultValue</i> be the result of evaluating <i>Initializer</i>.</li>\n              <li>Let <i>v</i> be <a href=\"/sec/sec-getvalue.html\">GetValue</a>(<i>defaultValue</i>).</li>\n              <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>v</i>).</li>\n              <li>If <a href=\"/sec/sec-isanonymousfunctiondefinition.html\">IsAnonymousFunctionDefinition</a>(<i>Initializer</i>) is\n                  <b>true</b>, then\n                <ol class=\"block\">\n                  <li>Let <i>hasNameProperty</i> be <a href=\"/sec/sec-hasownproperty.html\">HasOwnProperty</a>(<i>v</i>,\n                      <code>&quot;name&quot;</code>).</li>\n                  <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>hasNameProperty</i>).</li>\n                  <li>If <i>hasNameProperty</i> is <b>false</b>, perform <a href=\"/sec/sec-setfunctionname.html\">SetFunctionName</a>(<i>v</i>, <i>P</i>).</li>\n                </ol>\n              </li>\n            </ol>\n          </li>\n          <li>Return <a href=\"/sec/sec-putvalue.html\">PutValue</a>(<i>lref</i>,<i>v</i>).</li>\n        </ol>\n        <div class=\"gp prod\"><span class=\"nt\">AssignmentProperty</span> <span class=\"geq\">:</span> <span class=\"nt\">PropertyName</span> <code class=\"t\">:</code> <span class=\"nt\">AssignmentElement</span></div>\n        <ol class=\"proc\">\n          <li>Let <i>name</i> be  the result of evaluating <i>PropertyName</i>.</li>\n          <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>name</i>).</li>\n          <li>Return the result of performing KeyedDestructuringAssignmentEvaluation of <i>AssignmentElement</i> with <i>value</i>\n              and <i>name</i> as the arguments.</li>\n        </ol>\n      </section>\n\n      <section id=\"sec-runtime-semantics-iteratordestructuringassignmentevaluation\">\n        <h1><span class=\"secnum\" id=\"sec-12.14.5.3\"><a href=\"/sec/sec-runtime-semantics-iteratordestructuringassignmentevaluation.html\" title=\"link to this section\">12.14.5.3</a></span> Runtime Semantics: IteratorDestructuringAssignmentEvaluation</h1>\n\n        <p>with parameters <var>iteratorRecord</var></p>\n\n        <div class=\"gp prod\"><span class=\"nt\">AssignmentElementList</span> <span class=\"geq\">:</span> <span class=\"nt\">AssignmentElisionElement</span></div>\n        <ol class=\"proc\">\n          <li>Return the result of performing IteratorDestructuringAssignmentEvaluation of <i>AssignmentElisionElement</i> using\n              <i>iteratorRecord</i> as the <i>argument</i>.</li>\n        </ol>\n        <div class=\"gp prod\"><span class=\"nt\">AssignmentElementList</span> <span class=\"geq\">:</span> <span class=\"nt\">AssignmentElementList</span> <code class=\"t\">,</code> <span class=\"nt\">AssignmentElisionElement</span></div>\n        <ol class=\"proc\">\n          <li>Let <i>status</i> be the result of performing IteratorDestructuringAssignmentEvaluation of\n              <i>AssignmentElementList</i> using <i>iteratorRecord</i> as the <i>argument.</i></li>\n          <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>status</i>).</li>\n          <li>Return the result of performing IteratorDestructuringAssignmentEvaluation of <i>AssignmentElisionElement</i> using\n              <i>iteratorRecord</i> as the <i>argument</i>.</li>\n        </ol>\n        <div class=\"gp prod\"><span class=\"nt\">AssignmentElisionElement</span> <span class=\"geq\">:</span> <span class=\"nt\">AssignmentElement</span></div>\n        <ol class=\"proc\">\n          <li><i>R</i>eturn the result of performing IteratorDestructuringAssignmentEvaluation of <i>AssignmentElement</i> with\n              <i>iteratorRecord</i> as the argument.</li>\n        </ol>\n        <div class=\"gp prod\"><span class=\"nt\">AssignmentElisionElement</span> <span class=\"geq\">:</span> <span class=\"nt\">Elision</span> <span class=\"nt\">AssignmentElement</span></div>\n        <ol class=\"proc\">\n          <li>Let <i>status</i> be the result of performing IteratorDestructuringAssignmentEvaluation of <i>Elision</i> with\n              <i>iteratorRecord</i> as the argument.</li>\n          <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>status</i>).</li>\n          <li>Return the result of performing IteratorDestructuringAssignmentEvaluation of <i>AssignmentElement</i> with\n              <i>iteratorRecord</i> as the argument.</li>\n        </ol>\n        <div class=\"gp prod\"><span class=\"nt\">Elision</span> <span class=\"geq\">:</span> <code class=\"t\">,</code></div>\n        <ol class=\"proc\">\n          <li>If <i>iteratorRecord</i>.[[done]] is <b>false</b>, then\n            <ol class=\"block\">\n              <li>Let <i>next</i> be <a href=\"/sec/sec-iteratorstep.html\">IteratorStep</a>(<i>iteratorRecord</i>.[[iterator]]).</li>\n              <li>If <i>next</i> is an <a href=\"/sec/sec-completion-record-specification-type.html\">abrupt completion</a>, set\n                  <i>iteratorRecord</i>.[[done]] to <b>true</b>.</li>\n              <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>next</i>).</li>\n              <li>If <i>next</i> is <b>false</b>, set <i>iteratorRecord</i>.[[done]] to <b>true</b>.</li>\n            </ol>\n          </li>\n          <li>Return <a href=\"/sec/sec-normalcompletion.html\">NormalCompletion</a>(<span style=\"font-family:\n              sans-serif\">empty</span>).</li>\n        </ol>\n        <div class=\"gp prod\"><span class=\"nt\">Elision</span> <span class=\"geq\">:</span> <span class=\"nt\">Elision</span> <code class=\"t\">,</code></div>\n        <ol class=\"proc\">\n          <li>Let <i>status</i> be the result of performing IteratorDestructuringAssignmentEvaluation of <i>Elision</i> with\n              <i>iteratorRecord</i> as the argument.</li>\n          <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>status</i>).</li>\n          <li>If <i>iteratorRecord</i>.[[done]] is <b>false</b>, then\n            <ol class=\"block\">\n              <li>Let <i>next</i> be <a href=\"/sec/sec-iteratorstep.html\">IteratorStep</a>(<i>iteratorRecord</i>.[[iterator]]).</li>\n              <li>If <i>next</i> is an <a href=\"/sec/sec-completion-record-specification-type.html\">abrupt completion</a>, set\n                  <i>iteratorRecord</i>.[[done]] to <b>true</b>.</li>\n              <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>next</i>).</li>\n              <li>If <i>next</i> is <b>false</b>, set <i>iteratorRecord</i>.[[done]] to <b>true</b>.</li>\n            </ol>\n          </li>\n          <li>Return <a href=\"/sec/sec-normalcompletion.html\">NormalCompletion</a>(<span style=\"font-family:\n              sans-serif\">empty</span>).</li>\n        </ol>\n\n        <p><span class=\"nt\">AssignmentElement</span><sub>[Yield]</sub> <b>:</b> <span class=\"nt\">DestructuringAssignmentTarget</span>  <span class=\"nt\">Initializer</span><sub>opt</sub></p>\n\n        <ol class=\"proc\">\n          <li>If <i>DestructuringAssignmentTarget</i> is neither an <i>ObjectLiteral</i> nor an <i>ArrayLiteral</i>, then\n            <ol class=\"block\">\n              <li>Let <i>lref</i> be the result of evaluating <i>DestructuringAssignmentTarget</i>.</li>\n              <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>lref</i>).</li>\n            </ol>\n          </li>\n          <li>If <i>iteratorRecord</i>.[[done]] is <b>false</b>, then\n            <ol class=\"block\">\n              <li>Let <i>next</i> be <a href=\"/sec/sec-iteratorstep.html\">IteratorStep</a>(<i>iteratorRecord</i>.[[iterator]]).</li>\n              <li>If <i>next</i> is an <a href=\"/sec/sec-completion-record-specification-type.html\">abrupt completion</a>, set\n                  <i>iteratorRecord</i>.[[done]] to <b>true</b>.</li>\n              <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>next</i>).</li>\n              <li>If <i>next</i> is <b>false</b>, set <i>iteratorRecord</i>.[[done]] to <b>true</b>.</li>\n              <li>Else\n                <ol class=\"block\">\n                  <li>Let <i>value</i> be <a href=\"/sec/sec-iteratorvalue.html\">IteratorValue</a>(<i>next</i>).</li>\n                  <li>If <i>value</i> is an <a href=\"/sec/sec-completion-record-specification-type.html\">abrupt completion</a>, set\n                      <i>iteratorRecord</i>.[[done]] to <b>true</b>.</li>\n                  <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>value</i>).</li>\n                </ol>\n              </li>\n            </ol>\n          </li>\n          <li>If <i>iteratorRecord</i>.[[done]] is <b>true</b>, let <i>value</i> be <b>undefined</b>.</li>\n          <li>If  <i>Initializer</i> is present and <i>value</i> is <b>undefined</b>, then\n            <ol class=\"block\">\n              <li>Let <i>defaultValue</i> be the result of evaluating <i>Initializer</i>.</li>\n              <li>Let <i>v</i> be <a href=\"/sec/sec-getvalue.html\">GetValue</a>(<i>defaultValue</i>)</li>\n              <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>v</i>).</li>\n            </ol>\n          </li>\n          <li>Else, let <i>v</i> be <i>value</i>.</li>\n          <li>If <i>DestructuringAssignmentTarget</i> is an <i>ObjectLiteral or an ArrayLiteral</i>, then\n            <ol class=\"block\">\n              <li>Let <i>nestedAssignmentPattern</i> be the parse of the source text corresponding to\n                  <i>DestructuringAssignmentTarget</i> using either <i>AssignmentPattern</i> or\n                  <i>AssignmentPattern</i><sub>[Yield]</sub> as the goal symbol depending upon whether this\n                  <i>AssignmentElement</i> has the <span style=\"font-family: sans-serif\"><sub>Yield</sub></span> parameter.</li>\n              <li>Return the result of performing DestructuringAssignmentEvaluation of <i>nestedAssignmentPattern</i> with\n                  <i>v</i> as the argument.</li>\n            </ol>\n          </li>\n          <li>If <i>Initializer</i> is present and <i>value</i> is <b>undefined</b> and <a href=\"/sec/sec-isanonymousfunctiondefinition.html\">IsAnonymousFunctionDefinition</a>(<i>Initializer)</i> and IsIdentifierRef\n              of <i>DestructuringAssignmentTarget</i> are both <b>true</b>, then\n            <ol class=\"block\">\n              <li>Let <i>hasNameProperty</i> be <a href=\"/sec/sec-hasownproperty.html\">HasOwnProperty</a>(<i>v</i>,\n                  <code>&quot;name&quot;</code>).</li>\n              <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>hasNameProperty</i>).</li>\n              <li>If <i>hasNameProperty</i> is <b>false</b>, perform <a href=\"/sec/sec-setfunctionname.html\">SetFunctionName</a>(<i>v</i>,\n                  <a href=\"/sec/sec-reference-specification-type.html\">GetReferencedName</a>(<i>lref</i>)).</li>\n            </ol>\n          </li>\n          <li>Return <a href=\"/sec/sec-putvalue.html\">PutValue</a>(<i>lref</i>, <i>v</i>).</li>\n        </ol>\n\n        <div class=\"note\">\n          <p><span class=\"nh\">NOTE</span> Left to right evaluation order is maintained by evaluating a <span class=\"nt\">DestructuringAssignmentTarget</span> that is not a destructuring pattern prior to accessing the iterator or\n          evaluating the <span class=\"nt\">Initializer</span>.</p>\n        </div>\n\n        <p><i>AssignmentRestElement</i><span style=\"font-family: sans-serif\"><sub>[Yield]</sub> <b>:</b></span> <code>...</code>\n        <i>DestructuringAssignmentTarget</i></p>\n\n        <ol class=\"proc\">\n          <li>If <i>DestructuringAssignmentTarget</i> is neither an <i>ObjectLiteral</i> nor an <i>ArrayLiteral</i>, then\n            <ol class=\"block\">\n              <li>Let <i>lref</i> be the result of evaluating <i>DestructuringAssignmentTarget</i>.</li>\n              <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>lref</i>).</li>\n            </ol>\n          </li>\n          <li>Let <i>A</i> be <a href=\"/sec/sec-arraycreate.html\">ArrayCreate</a>(0).</li>\n          <li>Let <i>n</i>=0;</li>\n          <li>Repeat while <i>iteratorRecord</i>.[[done]] is <b>false,</b>\n            <ol class=\"block\">\n              <li>Let <i>next</i> be <a href=\"/sec/sec-iteratorstep.html\">IteratorStep</a>(<i>iteratorRecord</i>.[[iterator]]).</li>\n              <li>If <i>next</i> is an <a href=\"/sec/sec-completion-record-specification-type.html\">abrupt completion</a>, set\n                  <i>iteratorRecord</i>.[[done]] to <b>true</b>.</li>\n              <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>next</i>).</li>\n              <li>If <i>next</i> is <b>false</b>, set <i>iteratorRecord</i>.[[done]] to <b>true</b>.</li>\n              <li>else,\n                <ol class=\"block\">\n                  <li>Let <i>nextValue</i> be <a href=\"/sec/sec-iteratorvalue.html\">IteratorValue</a>(<i>next</i>).</li>\n                  <li>If <i>nextValue</i> is an <a href=\"/sec/sec-completion-record-specification-type.html\">abrupt completion</a>, set\n                      <i>iteratorRecord</i>.[[done]] to <b>true</b>.</li>\n                  <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>nextValue</i>).</li>\n                  <li>Let <i>status</i> be <a href=\"/sec/sec-createdataproperty.html\">CreateDataProperty</a>(<i>A</i>, <a href=\"/sec/sec-tostring.html\">ToString</a>(<i>n</i>), <i>nextValue</i>).</li>\n                  <li><a href=\"/sec/sec-algorithm-conventions.html\">Assert</a>:  <i>status</i> is <b>true</b>.</li>\n                  <li>Increment <i>n</i> by 1.</li>\n                </ol>\n              </li>\n            </ol>\n          </li>\n          <li>If <i>DestructuringAssignmentTarget</i> is neither an <i>ObjectLiteral</i> nor an <i>ArrayLiteral</i>, then\n            <ol class=\"block\">\n              <li>Return <a href=\"/sec/sec-putvalue.html\">PutValue</a>(<i>lref</i>, <i>A</i>).</li>\n            </ol>\n          </li>\n          <li>Let <i>nestedAssignmentPattern</i> be the parse of the source text corresponding to\n              <i>DestructuringAssignmentTarget</i> using either <i>AssignmentPattern</i> or\n              <i>AssignmentPattern</i><sub>[Yield]</sub> as the goal symbol depending upon whether this <i>AssignmentElement</i>\n              has the <span style=\"font-family: sans-serif\"><sub>Yield</sub></span> parameter.</li>\n          <li>Return the result of performing DestructuringAssignmentEvaluation of <i>nestedAssignmentPattern</i> with <i>A</i> as\n              the argument.</li>\n        </ol>\n      </section>\n\n      <section id=\"sec-runtime-semantics-keyeddestructuringassignmentevaluation\">\n        <h1><span class=\"secnum\" id=\"sec-12.14.5.4\"><a href=\"/sec/sec-runtime-semantics-keyeddestructuringassignmentevaluation.html\" title=\"link to this section\">12.14.5.4</a></span> Runtime Semantics: KeyedDestructuringAssignmentEvaluation</h1>\n\n        <p>with parameters <var>value</var> and <var>propertyName</var></p>\n\n        <p><span style=\"font-family: Times New Roman\"><i>AssignmentElement<sub>[Yield]</sub></i></span> <b>:</b> <span class=\"nt\">DestructuringAssignmentTarget</span>   <span class=\"nt\">Initializer</span><sub>opt</sub></p>\n\n        <ol class=\"proc\">\n          <li>If <i>DestructuringAssignmentTarget</i> is neither an <i>ObjectLiteral</i> nor an <i>ArrayLiteral</i>, then\n            <ol class=\"block\">\n              <li>Let <i>lref</i> be the result of evaluating <i>DestructuringAssignmentTarget</i>.</li>\n              <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>lref</i>).</li>\n            </ol>\n          </li>\n          <li>Let <i>v</i> be <a href=\"/sec/sec-getv.html\">GetV</a>(<i>value</i>, <i>propertyName</i>).</li>\n          <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>v</i>).</li>\n          <li>If <i>Initializer</i> is present and <i>v</i> is <b>undefined</b>, then\n            <ol class=\"block\">\n              <li>Let <i>defaultValue</i> be the result of evaluating <i>Initializer</i>.</li>\n              <li>Let <i>rhsValue</i> be <a href=\"/sec/sec-getvalue.html\">GetValue</a>(<i>defaultValue</i>)</li>\n              <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>rhsValue</i>).</li>\n            </ol>\n          </li>\n          <li>Else, let <i>rhsValue</i> be <i>v</i>.</li>\n          <li>If <i>DestructuringAssignmentTarget</i> is an <i>ObjectLiteral or an ArrayLiteral</i>, then\n            <ol class=\"block\">\n              <li>Let <i>assignmentPattern</i> be the parse of the source text corresponding to\n                  <i>DestructuringAssignmentTarget</i> using either <i>AssignmentPattern</i> or\n                  <i>AssignmentPattern</i><sub>[Yield]</sub> as the goal symbol depending upon whether this\n                  <i>AssignmentElement</i> has the <span style=\"font-family: sans-serif\"><sub>Yield</sub></span> parameter.</li>\n              <li>Return the result of performing DestructuringAssignmentEvaluation of <i>assignmentPattern</i> with\n                  <i>rhsValue</i> as the argument.</li>\n            </ol>\n          </li>\n          <li>If <i>Initializer</i> is present and <i>v</i> is <b>undefined</b> and <a href=\"/sec/sec-isanonymousfunctiondefinition.html\">IsAnonymousFunctionDefinition</a>(<i>Initializer)</i> and IsIdentifierRef\n              of <i>DestructuringAssignmentTarget</i> are both <b>true</b>, then\n            <ol class=\"block\">\n              <li>Let <i>hasNameProperty</i> be <a href=\"/sec/sec-hasownproperty.html\">HasOwnProperty</a>(<i>rhsValue</i>,\n                  <code>&quot;name&quot;</code>).</li>\n              <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>hasNameProperty</i>).</li>\n              <li>If <i>hasNameProperty</i> is <b>false</b>, perform <a href=\"/sec/sec-setfunctionname.html\">SetFunctionName</a>(<i>rhsValue</i>, <a href=\"/sec/sec-reference-specification-type.html\">GetReferencedName</a>(<i>lref</i>)).</li>\n            </ol>\n          </li>\n          <li>Return <a href=\"/sec/sec-putvalue.html\">PutValue</a>(<i>lref</i>, <i>rhsValue</i>).</li>\n        </ol>\n      </section>\n    "}