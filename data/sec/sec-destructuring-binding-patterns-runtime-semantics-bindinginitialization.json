{"id":"sec-destructuring-binding-patterns-runtime-semantics-bindinginitialization","html":"\n        <h1><span class=\"secnum\" id=\"sec-13.3.3.5\"><a href=\"/sec/sec-destructuring-binding-patterns-runtime-semantics-bindinginitialization.html\" title=\"link to this section\">13.3.3.5</a></span> Runtime Semantics: BindingInitialization</h1>\n\n        <p>With parameters <var>value</var> and <var>environment</var>.</p>\n\n        <p>See also: <a href=\"/sec/sec-identifiers-runtime-semantics-bindinginitialization.html\">12.1.5</a>, <a href=\"/sec/sec-for-in-and-for-of-statements-runtime-semantics-bindinginitialization.html\">13.7.5.9</a>.</p>\n\n        <div class=\"note\">\n          <p><span class=\"nh\">NOTE</span> When <b>undefined</b> is passed for <var>environment</var> it indicates that a <a href=\"/sec/sec-putvalue.html\">PutValue</a> operation should be used to assign the initialization value. This is the case for\n          formal parameter lists of non-strict functions. In that case the formal parameter bindings are preinitialized in order\n          to deal with the possibility of multiple parameters with the same name.</p>\n        </div>\n\n        <div class=\"gp prod\"><span class=\"nt\">BindingPattern</span> <span class=\"geq\">:</span> <span class=\"nt\">ObjectBindingPattern</span></div>\n        <ol class=\"proc\">\n          <li>Let  <i>valid</i> be <a href=\"/sec/sec-requireobjectcoercible.html\">RequireObjectCoercible</a>(<i>value</i>).</li>\n          <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>valid</i>).</li>\n          <li>Return the result of performing BindingInitialization for <i>ObjectBindingPattern</i> using <i>value</i> and\n              <i>environment</i> as arguments.</li>\n        </ol>\n        <div class=\"gp prod\"><span class=\"nt\">BindingPattern</span> <span class=\"geq\">:</span> <span class=\"nt\">ArrayBindingPattern</span></div>\n        <ol class=\"proc\">\n          <li>Let <i>iterator</i> be <a href=\"/sec/sec-getiterator.html\">GetIterator</a>(<i>value</i>).</li>\n          <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>iterator</i>).</li>\n          <li>Let <i>iteratorRecord</i> be Record {[[iterator]]: <i>iterator</i>, [[done]]: <b>false</b>}.</li>\n          <li>Let <i>result</i> be IteratorBindingInitialization for <i>ArrayBindingPattern</i> using <i>iteratorRecord</i>, and\n              <i>environment</i> as arguments.</li>\n          <li>If <i>iteratorRecord</i>.[[done]] is <b>false</b>, return <a href=\"/sec/sec-iteratorclose.html\">IteratorClose</a>(<i>iterator</i>, <i>result</i>).</li>\n          <li>Return <i>result</i>.</li>\n        </ol>\n        <div class=\"gp prod\"><span class=\"nt\">ObjectBindingPattern</span> <span class=\"geq\">:</span> <code class=\"t\">{</code> <code class=\"t\">}</code></div>\n        <ol class=\"proc\">\n          <li>Return <a href=\"/sec/sec-normalcompletion.html\">NormalCompletion</a>(<span style=\"font-family:\n              sans-serif\">empty</span>).</li>\n        </ol>\n        <div class=\"gp prod\"><span class=\"nt\">BindingPropertyList</span> <span class=\"geq\">:</span> <span class=\"nt\">BindingPropertyList</span> <code class=\"t\">,</code> <span class=\"nt\">BindingProperty</span></div>\n        <ol class=\"proc\">\n          <li>Let <i>status</i> be the result of performing BindingInitialization for <i>BindingPropertyList</i> using\n              <i>value</i> and <i>environment</i> as arguments.</li>\n          <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>status</i>).</li>\n          <li>Return the result of performing BindingInitialization for <i>BindingProperty</i> using <i>value</i> and\n              <i>environment</i> as arguments.</li>\n        </ol>\n        <div class=\"gp prod\"><span class=\"nt\">BindingProperty</span> <span class=\"geq\">:</span> <span class=\"nt\">SingleNameBinding</span></div>\n        <ol class=\"proc\">\n          <li>Let <i>name</i> be the string that is the only element of BoundNames of <i>SingleNameBinding</i>.</li>\n          <li>Return the result of performing KeyedBindingInitialization for <i>SingleNameBinding</i> using  <i>value</i>,\n              <i>environment</i>, and <i>name</i> as the arguments.</li>\n        </ol>\n        <div class=\"gp prod\"><span class=\"nt\">BindingProperty</span> <span class=\"geq\">:</span> <span class=\"nt\">PropertyName</span> <code class=\"t\">:</code> <span class=\"nt\">BindingElement</span></div>\n        <ol class=\"proc\">\n          <li>Let <i>P</i> be the result of evaluating <i>PropertyName</i></li>\n          <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>P</i>).</li>\n          <li>Return the result of performing KeyedBindingInitialization for <i>BindingElement</i> using <i>value</i>,\n              <i>environment</i>, and <i>P</i> as arguments.</li>\n        </ol>\n      "}