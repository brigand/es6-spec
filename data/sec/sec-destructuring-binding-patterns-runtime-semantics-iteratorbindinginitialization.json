{"id":"sec-destructuring-binding-patterns-runtime-semantics-iteratorbindinginitialization","html":"\n        <h1><span class=\"secnum\" id=\"sec-13.3.3.6\"><a href=\"/sec/sec-destructuring-binding-patterns-runtime-semantics-iteratorbindinginitialization.html\" title=\"link to this section\">13.3.3.6</a></span> Runtime Semantics: IteratorBindingInitialization</h1>\n\n        <p>With parameters <var>iteratorRecord,</var> and  <var>environment</var>.</p>\n\n        <p>See also: <a href=\"/sec/sec-function-definitions-runtime-semantics-iteratorbindinginitialization.html\">14.1.18</a>, <a href=\"/sec/sec-arrow-function-definitions-runtime-semantics-iteratorbindinginitialization.html\">14.2.14</a>.</p>\n\n        <div class=\"note\">\n          <p><span class=\"nh\">NOTE</span> When <b>undefined</b> is passed for <var>environment</var> it indicates that a <a href=\"/sec/sec-putvalue.html\">PutValue</a> operation should be used to assign the initialization value. This is the case for\n          formal parameter lists of non-strict functions. In that case the formal parameter bindings are preinitialized in order\n          to deal with the possibility of multiple parameters with the same name.</p>\n        </div>\n\n        <div class=\"gp prod\"><span class=\"nt\">ArrayBindingPattern</span> <span class=\"geq\">:</span> <code class=\"t\">[</code> <code class=\"t\">]</code></div>\n        <ol class=\"proc\">\n          <li>Return <a href=\"/sec/sec-normalcompletion.html\">NormalCompletion</a>(<span style=\"font-family:\n              sans-serif\">empty</span>).</li>\n        </ol>\n        <div class=\"gp prod\"><span class=\"nt\">ArrayBindingPattern</span> <span class=\"geq\">:</span> <code class=\"t\">[</code> <span class=\"nt\">Elision</span> <code class=\"t\">]</code></div>\n        <ol class=\"proc\">\n          <li>Return the result of performing IteratorDestructuringAssignmentEvaluation of <i>Elision</i> with\n              <i>iteratorRecord</i> as the argument.</li>\n        </ol>\n        <div class=\"gp prod\"><span class=\"nt\">ArrayBindingPattern</span> <span class=\"geq\">:</span> <code class=\"t\">[</code> <span class=\"nt\">Elision</span><sub class=\"g-opt\">opt</sub> <span class=\"nt\">BindingRestElement</span> <code class=\"t\">]</code></div>\n        <ol class=\"proc\">\n          <li>If <i>Elision</i> is present, then\n            <ol class=\"block\">\n              <li>Let <i>status</i> be the result of performing IteratorDestructuringAssignmentEvaluation of <i>Elision</i> with\n                  <i>iteratorRecord</i> as the argument.</li>\n              <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>status</i>).</li>\n            </ol>\n          </li>\n          <li>Return the result of performing IteratorBindingInitialization for <i>BindingRestElement</i>  with\n              <i>iteratorRecord</i> and <i>environment</i> as arguments.</li>\n        </ol>\n        <div class=\"gp prod\"><span class=\"nt\">ArrayBindingPattern</span> <span class=\"geq\">:</span> <code class=\"t\">[</code> <span class=\"nt\">BindingElementList</span> <code class=\"t\">]</code></div>\n        <ol class=\"proc\">\n          <li>Return the result of performing IteratorBindingInitialization for <i>BindingElementList</i> with\n              <i>iteratorRecord</i> and <i>environment</i> as arguments.</li>\n        </ol>\n        <div class=\"gp prod\"><span class=\"nt\">ArrayBindingPattern</span> <span class=\"geq\">:</span> <code class=\"t\">[</code> <span class=\"nt\">BindingElementList</span> <code class=\"t\">,</code> <code class=\"t\">]</code></div>\n        <ol class=\"proc\">\n          <li>Return the result of performing IteratorBindingInitialization for <i>BindingElementList</i> with\n              <i>iteratorRecord</i> and <i>environment</i> as arguments.</li>\n        </ol>\n        <div class=\"gp prod\"><span class=\"nt\">ArrayBindingPattern</span> <span class=\"geq\">:</span> <code class=\"t\">[</code> <span class=\"nt\">BindingElementList</span> <code class=\"t\">,</code> <span class=\"nt\">Elision</span> <code class=\"t\">]</code></div>\n        <ol class=\"proc\">\n          <li>Let <i>status</i> be the result of performing IteratorBindingInitialization for <i>BindingElementList</i> with\n              <i>iteratorRecord</i> and <i>environment</i> as arguments.</li>\n          <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>status</i>).</li>\n          <li>Return the result of performing IteratorDestructuringAssignmentEvaluation of <i>Elision</i> with\n              <i>iteratorRecord</i> as the argument.</li>\n        </ol>\n        <div class=\"gp prod\"><span class=\"nt\">ArrayBindingPattern</span> <span class=\"geq\">:</span> <code class=\"t\">[</code> <span class=\"nt\">BindingElementList</span> <code class=\"t\">,</code> <span class=\"nt\">Elision</span><sub class=\"g-opt\">opt</sub> <span class=\"nt\">BindingRestElement</span> <code class=\"t\">]</code></div>\n        <ol class=\"proc\">\n          <li>Let <i>status</i> be the result of performing IteratorBindingInitialization for <i>BindingElementList</i> with\n              <i>iteratorRecord</i> and <i>environment</i> as arguments.</li>\n          <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>status</i>).</li>\n          <li>If <i>Elision</i> is present, then\n            <ol class=\"block\">\n              <li>Let <i>status</i> be the result of performing IteratorDestructuringAssignmentEvaluation of <i>Elision</i> with\n                  <i>iteratorRecord</i> as the argument.</li>\n              <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>status</i>).</li>\n            </ol>\n          </li>\n          <li>Return the result of performing IteratorBindingInitialization for <i>BindingRestElement</i>  with\n              <i>iteratorRecord</i> and <i>environment</i> as arguments.</li>\n        </ol>\n        <div class=\"gp prod\"><span class=\"nt\">BindingElementList</span> <span class=\"geq\">:</span> <span class=\"nt\">BindingElisionElement</span></div>\n        <ol class=\"proc\">\n          <li>Return the result of performing IteratorBindingInitialization for <i>BindingElisionElement</i>  with\n              <i>iteratorRecord</i> and <i>environment</i> as arguments.</li>\n        </ol>\n        <div class=\"gp prod\"><span class=\"nt\">BindingElementList</span> <span class=\"geq\">:</span> <span class=\"nt\">BindingElementList</span> <code class=\"t\">,</code> <span class=\"nt\">BindingElisionElement</span></div>\n        <ol class=\"proc\">\n          <li>Let <i>status</i> be the result of performing IteratorBindingInitialization for <i>BindingElementList</i>\n              <i>with</i> <i>iteratorRecord</i> and <i>environment</i> as arguments.</li>\n          <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>status</i>).</li>\n          <li>Return the result of performing IteratorBindingInitialization for <i>BindingElisionElement</i> using\n              <i>iteratorRecord</i> and <i>environment</i> as arguments.</li>\n        </ol>\n        <div class=\"gp prod\"><span class=\"nt\">BindingElisionElement</span> <span class=\"geq\">:</span> <span class=\"nt\">BindingElement</span></div>\n        <ol class=\"proc\">\n          <li>Return the result of performing IteratorBindingInitialization of <i>BindingElement</i> with <i>iteratorRecord</i>\n              and <i>environment</i> as the arguments.</li>\n        </ol>\n        <div class=\"gp prod\"><span class=\"nt\">BindingElisionElement</span> <span class=\"geq\">:</span> <span class=\"nt\">Elision</span> <span class=\"nt\">BindingElement</span></div>\n        <ol class=\"proc\">\n          <li>Let <i>status</i> be the result of performing IteratorDestructuringAssignmentEvaluation of <i>Elision</i> with\n              <i>iteratorRecord</i> as the argument.</li>\n          <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>status</i>).</li>\n          <li>Return the result of performing IteratorBindingInitialization of <i>BindingElement</i> with <i>iteratorRecord</i>\n              and <i>environment</i> as the arguments.</li>\n        </ol>\n        <div class=\"gp prod\"><span class=\"nt\">BindingElement</span> <span class=\"geq\">:</span> <span class=\"nt\">SingleNameBinding</span></div>\n        <ol class=\"proc\">\n          <li>Return the result of performing IteratorBindingInitialization for <i>SingleNameBinding</i> with <i>iteratorRecord\n              and</i> <i>environment</i> as the arguments.</li>\n        </ol>\n        <div class=\"gp prod\"><span class=\"nt\">SingleNameBinding</span> <span class=\"geq\">:</span> <span class=\"nt\">BindingIdentifier</span> <span class=\"nt\">Initializer</span><sub class=\"g-opt\">opt</sub></div>\n        <ol class=\"proc\">\n          <li>Let <i>bindingId</i> be StringValue of <i>BindingIdentifier.</i></li>\n          <li>Let <i>lhs</i> be <a href=\"/sec/sec-resolvebinding.html\">ResolveBinding</a>(<i>bindingId</i>, <i>environment</i>).</li>\n          <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>lhs</i>).</li>\n          <li>If <i>iteratorRecord</i>.[[done]] is <b>false</b>, then\n            <ol class=\"block\">\n              <li>Let <i>next</i> be <a href=\"/sec/sec-iteratorstep.html\">IteratorStep</a>(<i>iteratorRecord</i>.[[iterator]]).</li>\n              <li>If <i>next</i> is an <a href=\"/sec/sec-completion-record-specification-type.html\">abrupt completion</a>, set\n                  <i>iteratorRecord</i>.[[done]] to <b>true</b>.</li>\n              <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>next</i>).</li>\n              <li>If <i>next</i> is <b>false</b>, set <i>iteratorRecord</i>.[[done]] to <b>true</b>.</li>\n              <li>Else,\n                <ol class=\"block\">\n                  <li>Let <i>v</i> be <a href=\"/sec/sec-iteratorvalue.html\">IteratorValue</a>(<i>next</i>).</li>\n                  <li>If <i>v</i> is an <a href=\"/sec/sec-completion-record-specification-type.html\">abrupt completion</a>, set\n                      <i>iteratorRecord</i>.[[done]] to <b>true</b>.</li>\n                  <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>v</i>).</li>\n                </ol>\n              </li>\n            </ol>\n          </li>\n          <li>If <i>iteratorRecord</i>.[[done]] is <b>true</b>, let <i>v</i> be <b>undefined</b>.</li>\n          <li>If <i>Initializer</i> is present and <i>v</i> is <b>undefined</b>, then\n            <ol class=\"block\">\n              <li>Let <i>defaultValue</i> be the result of evaluating <i>Initializer</i>.</li>\n              <li>Let <i>v</i> be <a href=\"/sec/sec-getvalue.html\">GetValue</a>(<i>defaultValue</i>).</li>\n              <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>v</i>).</li>\n              <li>If <a href=\"/sec/sec-isanonymousfunctiondefinition.html\">IsAnonymousFunctionDefinition</a>(<i>Initializer)</i> is\n                  <b>true</b>, then\n                <ol class=\"block\">\n                  <li>Let <i>hasNameProperty</i> be <a href=\"/sec/sec-hasownproperty.html\">HasOwnProperty</a>(<i>v</i>,\n                      <code>&quot;name&quot;</code>).</li>\n                  <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>hasNameProperty</i>).</li>\n                  <li>If <i>hasNameProperty</i> is <b>false</b>, perform <a href=\"/sec/sec-setfunctionname.html\">SetFunctionName</a>(<i>v</i>, <i>bindingId</i>).</li>\n                </ol>\n              </li>\n            </ol>\n          </li>\n          <li>If <i>environment</i> is <b>undefined</b>, return <a href=\"/sec/sec-putvalue.html\">PutValue</a>(<i>lhs</i>, <i>v</i>).</li>\n          <li>Return <a href=\"/sec/sec-initializereferencedbinding.html\">InitializeReferencedBinding</a>(<i>lhs</i>, <i>v</i>).</li>\n        </ol>\n        <div class=\"gp prod\"><span class=\"nt\">BindingElement</span> <span class=\"geq\">:</span> <span class=\"nt\">BindingPattern</span> <span class=\"nt\">Initializer</span><sub class=\"g-opt\">opt</sub></div>\n        <ol class=\"proc\">\n          <li>If <i>iteratorRecord</i>.[[done]] is <b>false</b>, then\n            <ol class=\"block\">\n              <li>Let <i>next</i> be <a href=\"/sec/sec-iteratorstep.html\">IteratorStep</a>(<i>iteratorRecord</i>.[[iterator]]).</li>\n              <li>If <i>next</i> is an <a href=\"/sec/sec-completion-record-specification-type.html\">abrupt completion</a>, set\n                  <i>iteratorRecord</i>.[[done]] to <b>true</b>.</li>\n              <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>next</i>).</li>\n              <li>If <i>next</i> is <b>false</b>, set <i>iteratorRecord</i>.[[done]] to <b>true</b>.</li>\n              <li>Else\n                <ol class=\"block\">\n                  <li>Let <i>v</i> be <a href=\"/sec/sec-iteratorvalue.html\">IteratorValue</a>(<i>next</i>).</li>\n                  <li>If <i>v</i> is an <a href=\"/sec/sec-completion-record-specification-type.html\">abrupt completion</a>, set\n                      <i>iteratorRecord</i>.[[done]] to <b>true</b>.</li>\n                  <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>v</i>).</li>\n                </ol>\n              </li>\n            </ol>\n          </li>\n          <li>If <i>iteratorRecord</i>.[[done]] is <b>true</b>, let <i>v</i> be <b>undefined</b>.</li>\n          <li>If <i>Initializer</i> is present and <i>v</i> is <b>undefined</b>, then\n            <ol class=\"block\">\n              <li>Let <i>defaultValue</i> be the result of evaluating <i>Initializer</i>.</li>\n              <li>Let <i>v</i> be <a href=\"/sec/sec-getvalue.html\">GetValue</a>(<i>defaultValue</i>).</li>\n              <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>v</i>).</li>\n            </ol>\n          </li>\n          <li>Return the result of performing BindingInitialization of <i>BindingPattern</i> with <i>v</i> and <i>environment</i>\n              as the arguments.</li>\n        </ol>\n        <div class=\"gp prod\"><span class=\"nt\">BindingRestElement</span> <span class=\"geq\">:</span> <code class=\"t\">...</code> <span class=\"nt\">BindingIdentifier</span></div>\n        <ol class=\"proc\">\n          <li>Let <i>lhs</i> be <a href=\"/sec/sec-resolvebinding.html\">ResolveBinding</a>(StringValue of <i>BindingIdentifier,\n              environment</i>).</li>\n          <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>lhs</i>).</li>\n          <li>Let <i>A</i> be <a href=\"/sec/sec-arraycreate.html\">ArrayCreate</a>(0).</li>\n          <li>Let <i>n</i>=0.</li>\n          <li>Repeat<b>,</b>\n            <ol class=\"block\">\n              <li>If <i>iteratorRecord</i>.[[done]] is <b>false</b>,\n                <ol class=\"block\">\n                  <li>Let <i>next</i> be <a href=\"/sec/sec-iteratorstep.html\">IteratorStep</a>(<i>iteratorRecord</i>.[[iterator]]).</li>\n                  <li>If <i>next</i> is an <a href=\"/sec/sec-completion-record-specification-type.html\">abrupt completion</a>, set\n                      <i>iteratorRecord</i>.[[done]] to <b>true</b>.</li>\n                  <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>next</i>).</li>\n                  <li>If <i>next</i> is <b>false</b>, set <i>iteratorRecord</i>.[[done]] to <b>true</b>.</li>\n                </ol>\n              </li>\n              <li>If <i>iteratorRecord</i>.[[done]] is <b>true</b>, then\n                <ol class=\"block\">\n                  <li>If <i>environment</i> is <b>undefined</b>, return <a href=\"/sec/sec-putvalue.html\">PutValue</a>(<i>lhs</i>,\n                      <i>A</i>).</li>\n                  <li>Return <a href=\"/sec/sec-initializereferencedbinding.html\">InitializeReferencedBinding</a>(<i>lhs</i>,\n                      <i>A</i>).</li>\n                </ol>\n              </li>\n              <li>Let <i>nextValue</i> be <a href=\"/sec/sec-iteratorvalue.html\">IteratorValue</a>(<i>next</i>).</li>\n              <li>If <i>nextValue</i> is an <a href=\"/sec/sec-completion-record-specification-type.html\">abrupt completion</a>, set\n                  <i>iteratorRecord</i>.[[done]] to <b>true</b>.</li>\n              <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>nextValue</i>).</li>\n              <li>Let <i>status</i> be <a href=\"/sec/sec-createdataproperty.html\">CreateDataProperty</a>(<i>A</i>, <a href=\"/sec/sec-tostring.html\">ToString</a> (<i>n</i>), <i>nextValue</i>).</li>\n              <li><a href=\"/sec/sec-algorithm-conventions.html\">Assert</a>: <i>status</i> is <b>true</b>.</li>\n              <li>Increment <i>n</i> by 1.</li>\n            </ol>\n          </li>\n        </ol>\n      "}