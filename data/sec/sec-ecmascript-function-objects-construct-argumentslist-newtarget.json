{"id":"sec-ecmascript-function-objects-construct-argumentslist-newtarget","html":"\n      <h1><span class=\"secnum\" id=\"sec-9.2.2\"><a href=\"/sec/sec-ecmascript-function-objects-construct-argumentslist-newtarget.html\" title=\"link to this section\">9.2.2</a></span> [[Construct]] ( argumentsList, newTarget)</h1>\n\n      <p class=\"normalbefore\">The [[Construct]] internal method for an <a href=\"/sec/sec-ecmascript-function-objects.html\">ECMAScript\n      Function object</a> <var>F</var> is called with parameters <var>argumentsList</var> and <span style=\"font-family: Times New\n      Roman\"><i>newTarget</i>. <i>argumentsList</i></span> is a possibly empty <a href=\"/sec/sec-list-and-record-specification-type.html\">List</a> of <a href=\"/sec/sec-ecmascript-language-types.html\">ECMAScript language\n      values</a>. The following steps are taken:</p>\n\n      <ol class=\"proc\">\n        <li><a href=\"/sec/sec-algorithm-conventions.html\">Assert</a>: <i>F</i> is an <a href=\"/sec/sec-ecmascript-function-objects.html\">ECMAScript\n            function object</a>.</li>\n        <li><a href=\"/sec/sec-algorithm-conventions.html\">Assert</a>: <a href=\"/sec/sec-ecmascript-data-types-and-values.html\">Type</a>(<i>newTarget</i>) is Object.</li>\n        <li>Let <i>callerContext</i> be <a href=\"/sec/sec-execution-contexts.html\">the running execution context</a>.</li>\n        <li>Let <i>kind</i> be <i>F</i>&#x2019;s [[ConstructorKind]] <a href=\"/sec/sec-object-internal-methods-and-internal-slots.html\">internal slot</a>.</li>\n        <li>If <i>kind</i> is <code>&quot;base&quot;</code>, then\n          <ol class=\"block\">\n            <li>Let <i>thisArgument</i> be <a href=\"/sec/sec-ordinarycreatefromconstructor.html\">OrdinaryCreateFromConstructor</a>(<i>newTarget</i>,\n                <code>&quot;%ObjectPrototype%&quot;</code>).</li>\n            <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>thisArgument</i>).</li>\n          </ol>\n        </li>\n        <li>Let <i>calleeContext</i> be <a href=\"/sec/sec-prepareforordinarycall.html\">PrepareForOrdinaryCall</a>(<i>F</i>,\n            <i>newTarget</i>).</li>\n        <li><a href=\"/sec/sec-algorithm-conventions.html\">Assert</a>: <i>calleeContext</i> is now <a href=\"/sec/sec-execution-contexts.html\">the\n            running execution context</a>.</li>\n        <li>If <i>kind</i> is <code>&quot;base&quot;</code>, perform <a href=\"/sec/sec-ordinarycallbindthis.html\">OrdinaryCallBindThis</a>(<i>F</i>,\n            <i>calleeContext</i>, <i>thisArgument</i>).</li>\n        <li>Let <i>constructorEnv</i> be the <a href=\"/sec/sec-execution-contexts.html\">LexicalEnvironment</a> of\n            <i>calleeContext</i>.</li>\n        <li>Let <i>envRec</i> be <i>constructorEnv</i>&#x2019;s <a href=\"/sec/sec-lexical-environments.html\">EnvironmentRecord</a>.</li>\n        <li>Let <i>result</i> be <a href=\"/sec/sec-ordinarycallevaluatebody.html\">OrdinaryCallEvaluateBody</a>(<i>F</i>,\n            <i>argumentsList</i>).</li>\n        <li>Remove <i>calleeContext</i> from <a href=\"/sec/sec-execution-contexts.html\">the execution context stack</a> and restore\n            <i>callerContext</i> as <a href=\"/sec/sec-execution-contexts.html\">the running execution context</a>.</li>\n        <li>If <i>result</i>.[[type]] is <span style=\"font-family: sans-serif\">return</span>, then\n          <ol class=\"block\">\n            <li>If <a href=\"/sec/sec-ecmascript-data-types-and-values.html\">Type</a>(<i>result</i>.[[value]]) is Object, return <a href=\"/sec/sec-normalcompletion.html\">NormalCompletion</a>(<i>result</i>.[[value]]).</li>\n            <li>If <i>kind</i> is <code>&quot;base&quot;</code>, return <a href=\"/sec/sec-normalcompletion.html\">NormalCompletion</a>(<i>thisArgument</i>).</li>\n            <li>If <i>result</i>.[[value]] is not <b>undefined</b>, throw a <b>TypeError</b> exception.</li>\n          </ol>\n        </li>\n        <li>Else, <a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>result</i>).</li>\n        <li>Return <i>envRec</i>.GetThisBinding().</li>\n      </ol>\n    "}