{"id":"sec-ecmascript-language-types","html":"\n    <div class=\"front\">\n      <h1><span class=\"secnum\" id=\"sec-6.1\"><a href=\"/sec/sec-ecmascript-language-types.html\" title=\"link to this section\">6.1</a></span>\n          ECMAScript Language Types</h1>\n\n      <p>An ECMAScript language type corresponds to values that are directly manipulated by an ECMAScript programmer using the\n      ECMAScript language. The ECMAScript language types are Undefined, Null, Boolean, String, Symbol, Number, and Object. An\n      ECMAScript language value is a value that is characterized by an ECMAScript language type.</p>\n    </div>\n\n    <section id=\"sec-ecmascript-language-types-undefined-type\">\n      <h1><span class=\"secnum\" id=\"sec-6.1.1\"><a href=\"/sec/sec-ecmascript-language-types-undefined-type.html\" title=\"link to this section\">6.1.1</a></span> The Undefined Type</h1>\n\n      <p>The Undefined type has exactly one value, called <b>undefined</b>. Any variable that has not been assigned a value has\n      the value <b>undefined</b>.</p>\n    </section>\n\n    <section id=\"sec-ecmascript-language-types-null-type\">\n      <h1><span class=\"secnum\" id=\"sec-6.1.2\"><a href=\"/sec/sec-ecmascript-language-types-null-type.html\" title=\"link to this section\">6.1.2</a></span> The Null Type</h1>\n\n      <p>The Null type has exactly one value, called <b>null</b>.</p>\n    </section>\n\n    <section id=\"sec-ecmascript-language-types-boolean-type\">\n      <h1><span class=\"secnum\" id=\"sec-6.1.3\"><a href=\"/sec/sec-ecmascript-language-types-boolean-type.html\" title=\"link to this section\">6.1.3</a></span> The Boolean Type</h1>\n\n      <p>The Boolean type represents a logical entity having two values, called <b>true</b> and <b>false</b>.</p>\n    </section>\n\n    <section id=\"sec-ecmascript-language-types-string-type\">\n      <h1><span class=\"secnum\" id=\"sec-6.1.4\"><a href=\"/sec/sec-ecmascript-language-types-string-type.html\" title=\"link to this section\">6.1.4</a></span> The String Type</h1>\n\n      <p>The String type is the set of all ordered sequences of zero or more 16-bit unsigned integer values\n      (&#x201C;elements&#x201D;) up to a maximum length of 2<sup>53</sup>-1 elements. The String type is generally used to represent\n      textual data in a running ECMAScript program, in which case each element in the String is treated as a UTF-16 code unit\n      value. Each element is regarded as occupying a position within the sequence. These positions are indexed with nonnegative\n      integers. The first element (if any) is at index 0, the next element (if any) at index 1, and so on. The length of a String\n      is the number of elements (i.e., 16-bit values) within it. The empty String has length zero and therefore contains no\n      elements.</p>\n\n      <p>Where ECMAScript operations interpret String values, each element is interpreted as a single UTF-16 code unit. However,\n      ECMAScript does not place any restrictions or requirements on the sequence of code units in a String value, so they may be\n      ill-formed when interpreted as UTF-16 code unit sequences. Operations that do not interpret String contents treat them as\n      sequences of undifferentiated 16-bit unsigned integers. The function <code><a href=\"/sec/sec-string.prototype.normalize.html\">String.prototype.normalize</a></code> (<a href=\"/sec/sec-string.prototype.normalize.html\">see\n      21.1.3.12</a>) can be used to explicitly normalize a String value. <code><a href=\"/sec/sec-string.prototype.localecompare.html\">String.prototype.localeCompare</a></code> (<a href=\"/sec/sec-string.prototype.localecompare.html\">see 21.1.3.10</a>) internally normalizes String values, but no other operations\n      implicitly normalize the strings upon which they operate. Only operations that are explicitly specified to be language or\n      locale sensitive produce language-sensitive results.</p>\n\n      <div class=\"note\">\n        <p><span class=\"nh\">NOTE</span> The rationale behind this design was to keep the implementation of Strings as simple and\n        high-performing as possible. If ECMAScript source text is in Normalized Form C, string literals are guaranteed to also be\n        normalized, as long as they do not contain any Unicode escape sequences.</p>\n      </div>\n\n      <p>Some operations interpret String contents as UTF-16 encoded Unicode code points. In that case the interpretation is:</p>\n\n      <ul>\n        <li>\n          <p>A code unit in the range <span style=\"font-family: Times New Roman\">0</span> to <span style=\"font-family: Times New\n          Roman\">0xD7FF</span> or in the range <span style=\"font-family: Times New Roman\">0xE000</span> to <span style=\"font-family: Times New Roman\">0xFFFF</span> is interpreted as a code point with the same value.</p>\n        </li>\n\n        <li>\n          <p>A sequence of two code units, where the first code unit <var>c1</var> is in the range <span style=\"font-family: Times\n          New Roman\">0xD800</span> to <span style=\"font-family: Times New Roman\">0xDBFF</span> and the second code unit\n          <var>c2</var> is in the range <span style=\"font-family: Times New Roman\">0xDC00</span> to <span style=\"font-family:\n          Times New Roman\">0xDFFF</span>, is a surrogate pair and is interpreted as a code point with the value (<var>c1</var> -\n          <span style=\"font-family: Times New Roman\">0xD800</span>) &#xD7; <span style=\"font-family: Times New\n          Roman\">0x400</span> + (<var>c2</var> &#x2013; <span style=\"font-family: Times New Roman\">0xDC00</span>) + <span style=\"font-family: Times New Roman\">0x10000</span>. (See <a href=\"/sec/sec-utf16decode.html\">10.1.2</a>)</p>\n        </li>\n\n        <li>\n          <p>A code unit that is in the range <span style=\"font-family: Times New Roman\">0xD800</span> to <span style=\"font-family: Times New Roman\">0xDFFF</span>, but is not part of a surrogate pair, is interpreted as a code point\n          with the same value.</p>\n        </li>\n      </ul>\n    </section>\n\n    <section id=\"sec-ecmascript-language-types-symbol-type\">\n      <div class=\"front\">\n        <h1><span class=\"secnum\" id=\"sec-6.1.5\"><a href=\"/sec/sec-ecmascript-language-types-symbol-type.html\" title=\"link to this section\">6.1.5</a></span> The Symbol Type</h1>\n\n        <p>The Symbol type is the set of all non-String values that may be used as the key of an Object property (<a href=\"/sec/sec-object-type.html\">6.1.7</a>).</p>\n\n        <p>Each possible Symbol value is unique and immutable.</p>\n\n        <p>Each Symbol value immutably holds an associated value called [[Description]] that is either <span class=\"value\">undefined</span> or a String value.</p>\n      </div>\n\n      <section id=\"sec-well-known-symbols\">\n        <h1><span class=\"secnum\" id=\"sec-6.1.5.1\"><a href=\"/sec/sec-well-known-symbols.html\" title=\"link to this section\">6.1.5.1</a></span> Well-Known Symbols</h1>\n\n        <p>Well-known symbols are built-in Symbol values that are explicitly referenced by algorithms of this specification. They\n        are typically used as the keys of properties whose values serve as extension points of a specification algorithm. Unless\n        otherwise specified, well-known symbols values are shared by all Code Realms (<a href=\"/sec/sec-code-realms.html\">8.2</a>).</p>\n\n        <p>Within this specification a well-known symbol is referred to by using a notation of the form @@name, where\n        &#x201C;name&#x201D; is one of the values listed in <a href=\"/sec/table-1.html\">Table 1</a>.</p>\n\n        <figure>\n          <figcaption><span id=\"table-1\">Table 1</span> &#x2014; Well-known Symbols</figcaption>\n          <table class=\"real-table\">\n            <tr>\n              <th>Specification Name</th>\n              <th>[[Description]]</th>\n              <th>Value and Purpose</th>\n            </tr>\n            <tr>\n              <td>@@hasInstance</td>\n              <td><code>&quot;Symbol.hasInstance&quot;</code></td>\n              <td>A method that determines if a constructor object recognizes an object as one of the constructor&#x2019;s instances. Called by the semantics of the <code>instanceof</code> operator.</td>\n            </tr>\n            <tr>\n              <td>@@isConcatSpreadable</td>\n              <td><code>&quot;Symbol.isConcatSpreadable&quot;</code></td>\n              <td>A Boolean valued property that if true indicates that an object should be flattened to its array elements by <code><a href=\"/sec/sec-array.prototype.concat.html\">Array.prototype.concat</a></code>.</td>\n            </tr>\n            <tr>\n              <td>@@iterator</td>\n              <td><code>&quot;Symbol.iterator&quot;</code></td>\n              <td>A method that returns the default Iterator for an object. Called by the semantics of the for-of statement.</td>\n            </tr>\n            <tr>\n              <td>@@match</td>\n              <td><code>&quot;Symbol.match&quot;</code></td>\n              <td>A regular expression method that matches the regular expression against a string. Called by the <code><a href=\"/sec/sec-string.prototype.match.html\">String.prototype.match</a></code> method.</td>\n            </tr>\n            <tr>\n              <td>@@replace</td>\n              <td><code>&quot;Symbol.replace&quot;</code></td>\n              <td>A regular expression method that replaces matched substrings of a string. Called by the <code><a href=\"/sec/sec-string.prototype.replace.html\">String.prototype.replace</a></code> method.</td>\n            </tr>\n            <tr>\n              <td>@@search</td>\n              <td><code>&quot;Symbol.search&quot;</code></td>\n              <td>A regular expression method that returns the index within a string that matches the regular expression. Called by the <code><a href=\"/sec/sec-string.prototype.search.html\">String.prototype.search</a></code> method.</td>\n            </tr>\n            <tr>\n              <td>@@species</td>\n              <td><code>&quot;Symbol.species&quot;</code></td>\n              <td>A function valued property that is the constructor function that is used to create derived objects.</td>\n            </tr>\n            <tr>\n              <td>@@split</td>\n              <td><code>&quot;Symbol.split&quot;</code></td>\n              <td>A regular expression method that splits a string at the indices that match the regular expression. Called by the <code><a href=\"/sec/sec-string.prototype.split.html\">String.prototype.split</a></code> method.</td>\n            </tr>\n            <tr>\n              <td>@@toPrimitive</td>\n              <td><code>&quot;Symbol.toPrimitive&quot;</code></td>\n              <td>A method that converts an object to a corresponding primitive value. Called by the <a href=\"/sec/sec-toprimitive.html\">ToPrimitive</a> abstract operation.</td>\n            </tr>\n            <tr>\n              <td>@@toStringTag</td>\n              <td><code>&quot;Symbol.toStringTag&quot;</code></td>\n              <td>A String valued property that is used in the creation of the default string description of an object. Accessed by the built-in method <code><a href=\"/sec/sec-object.prototype.tostring.html\">Object.prototype.toString</a></code>.</td>\n            </tr>\n            <tr>\n              <td>@@unscopables</td>\n              <td><code>&quot;Symbol.unscopables&quot;</code></td>\n              <td>An object valued property whose own property names are property names that are excluded from the <code>with</code> environment bindings of the associated object.</td>\n            </tr>\n          </table>\n        </figure>\n      </section>\n    </section>\n\n    <section id=\"sec-ecmascript-language-types-number-type\">\n      <h1><span class=\"secnum\" id=\"sec-6.1.6\"><a href=\"/sec/sec-ecmascript-language-types-number-type.html\" title=\"link to this section\">6.1.6</a></span> The Number Type</h1>\n\n      <p>The Number type has exactly <span style=\"font-family: Times New Roman\">18437736874454810627</span> (that is, <span style=\"font-family: Times New Roman\">2<sup>64</sup>&#x2212;2<sup>53</sup>+3</span>) values, representing the double-precision\n      64-bit format IEEE 754-2008 values as specified in the IEEE Standard for Binary Floating-Point Arithmetic, except that the\n      <span style=\"font-family: Times New Roman\">9007199254740990</span> (that is, <span style=\"font-family: Times New\n      Roman\">2<sup>53</sup>&#x2212;2</span>) distinct &#x201C;Not-a-Number&#x201D; values of the IEEE Standard are represented in\n      ECMAScript as a single special <b>NaN</b> value. (Note that the <b>NaN</b> value is produced by the program expression\n      <code>NaN</code>.) In some implementations, external code might be able to detect a difference between various Not-a-Number\n      values, but such behaviour is implementation-dependent; to ECMAScript code, all NaN values are indistinguishable from each\n      other.</p>\n\n      <div class=\"note\">\n        <p><span class=\"nh\">NOTE</span> The bit pattern that might be observed in an ArrayBuffer (<a href=\"/sec/sec-arraybuffer-objects.html\">see 24.1</a>) after a Number value has been stored into it is not necessarily the same as\n        the internal representation of that Number value used by the ECMAScript implementation.</p>\n      </div>\n\n      <p>There are two other special values, called <b>positive Infinity</b> and <b>negative Infinity</b>. For brevity, these\n      values are also referred to for expository purposes by the symbols <span class=\"value\">+&#x221E;</span> and <span class=\"value\">&#x2212;&#x221E;</span>, respectively. (Note that these two infinite Number values are produced by the program\n      expressions <code>+Infinity</code> (or simply <code>Infinity</code>) and <code>-Infinity</code>.)</p>\n\n      <p>The other <span style=\"font-family: Times New Roman\">18437736874454810624</span> (that is, <span style=\"font-family:\n      Times New Roman\">2<sup>64</sup>&#x2212;2<sup>53</sup></span>) values are called the finite numbers. Half of these are\n      positive numbers and half are negative numbers; for every finite positive Number value there is a corresponding negative\n      value having the same magnitude.</p>\n\n      <p>Note that there is both a <b>positive zero</b> and a <b>negative zero</b>. For brevity, these values are also referred to\n      for expository purposes by the symbols <span class=\"value\">+0</span> and <span class=\"value\">&#x2212;0</span>, respectively.\n      (Note that these two different zero Number values are produced by the program expressions <code>+0</code> (or simply\n      <code>0</code>) and <code>-0</code>.)</p>\n\n      <p>The <span style=\"font-family: Times New Roman\">18437736874454810622</span> (that is, <span style=\"font-family: Times New\n      Roman\">2<sup>64</sup>&#x2212;2<sup>53</sup>&#x2212;2</span>) finite nonzero values are of two kinds:</p>\n\n      <p><span style=\"font-family: Times New Roman\">18428729675200069632</span> (that is, <span style=\"font-family: Times New\n      Roman\">2<sup>64</sup>&#x2212;2<sup>54</sup></span>) of them are normalized, having the form</p>\n\n      <div class=\"math-display\"><i>s</i> &#xD7; <i>m</i> &#xD7; 2<sup><i>e</i></sup></div>\n\n      <p>where <var>s</var> is <span style=\"font-family: Times New Roman\">+1</span> or <span style=\"font-family: Times New\n      Roman\">&#x2212;1</span>, <var>m</var> is a positive integer less than <span style=\"font-family: Times New\n      Roman\">2<sup>53</sup></span> but not less than <span style=\"font-family: Times New Roman\">2<sup>52</sup></span>, and\n      <var>e</var> is an integer ranging from <span style=\"font-family: Times New Roman\">&#x2212;1074</span> to <span style=\"font-family: Times New Roman\">971</span>, inclusive.</p>\n\n      <p>The remaining <span style=\"font-family: Times New Roman\">9007199254740990</span> (that is, <span style=\"font-family:\n      Times New Roman\">2<sup>53</sup>&#x2212;2</span>) values are denormalized, having the form</p>\n\n      <div class=\"math-display\"><i>s</i> &#xD7; <i>m</i> &#xD7; 2<sup><i>e</i></sup></div>\n\n      <p>where <var>s</var> is <span style=\"font-family: Times New Roman\">+1</span> or <span style=\"font-family: Times New\n      Roman\">&#x2212;1</span>, <var>m</var> is a positive integer less than <span style=\"font-family: Times New\n      Roman\">2<sup>52</sup></span>, and <var>e</var> is <span style=\"font-family: Times New Roman\">&#x2212;1074</span>.</p>\n\n      <p>Note that all the positive and negative integers whose magnitude is no greater than <span style=\"font-family: Times New\n      Roman\">2<sup>53</sup></span> are representable in the Number type (indeed, the integer <span style=\"font-family: Times New\n      Roman\">0</span> has two representations, <code>+0</code> and <code>-0</code>).</p>\n\n      <p>A finite number has an <i>odd significand</i> if it is nonzero and the integer <var>m</var> used to express it (in one of\n      the two forms shown above) is odd. Otherwise, it has an <i>even significand</i>.</p>\n\n      <p>In this specification, the phrase &#x201C;<span style=\"font-family: Times New Roman\">the Number value for\n      <i>x</i></span>&#x201D; where <var>x</var> represents an exact nonzero real mathematical quantity (which might even be an\n      irrational number such as <span style=\"font-family: Times New Roman\">&#x3C0;</span>) means a Number value chosen in the\n      following manner. Consider the set of all finite values of the Number type, with <span class=\"value\">&#x2212;0</span> removed\n      and with two additional values added to it that are not representable in the Number type, namely <span style=\"font-family:\n      Times New Roman\">2<sup>1024</sup></span> (which is <span style=\"font-family: Times New Roman\">+1 &#xD7;\n      2<sup>53</sup></span> <span style=\"font-family: Times New Roman\">&#xD7; 2<sup>971</sup></span>) and <span style=\"font-family: Times New Roman\">&#x2212;2<sup>1024</sup></span> (which is <span style=\"font-family: Times New\n      Roman\">&#x2212;1 &#xD7; 2<sup>53</sup></span> <span style=\"font-family: Times New Roman\">&#xD7; 2<sup>971</sup></span>).\n      Choose the member of this set that is closest in value to <var>x</var>. If two values of the set are equally close, then the\n      one with an even significand is chosen; for this purpose, the two extra values <span style=\"font-family: Times New\n      Roman\">2<sup>1024</sup></span> and <span style=\"font-family: Times New Roman\">&#x2212;2<sup>1024</sup></span> are considered\n      to have even significands. Finally, if <span style=\"font-family: Times New Roman\">2<sup>1024</sup></span> was chosen,\n      replace it with <span class=\"value\">+&#x221E;</span>; if <span style=\"font-family: Times New\n      Roman\">&#x2212;2<sup>1024</sup></span> was chosen, replace it with <span class=\"value\">&#x2212;&#x221E;</span>; if <span class=\"value\">+0</span> was chosen, replace it with <span class=\"value\">&#x2212;0</span> if and only if <var>x</var> is less\n      than zero; any other chosen value is used unchanged. The result is the Number value for <var>x</var>. (This procedure\n      corresponds exactly to the behaviour of the IEEE 754-2008 &#x201C;round to nearest, ties to even&#x201D; mode.)</p>\n\n      <p>Some ECMAScript operators deal only with integers in specific ranges such as <span style=\"font-family: Times New\n      Roman\">&#x2212;2<sup>31</sup></span> through <span style=\"font-family: Times New Roman\">2<sup>31</sup>&#x2212;1</span>,\n      inclusive, or in the range <span style=\"font-family: Times New Roman\">0</span> through <span style=\"font-family: Times New\n      Roman\">2<sup>16</sup>&#x2212;1</span>, inclusive. These operators accept any value of the Number type but first convert each\n      such value to an integer value in the expected range. See the descriptions of the numeric conversion operations in <a href=\"/sec/sec-type-conversion.html\">7.1</a>.</p>\n    </section>\n\n    <section id=\"sec-object-type\">\n      <div class=\"front\">\n        <h1><span class=\"secnum\" id=\"sec-6.1.7\"><a href=\"/sec/sec-object-type.html\" title=\"link to this section\">6.1.7</a></span> The\n            Object Type</h1>\n\n        <p>An Object is logically a collection of properties. Each property is either a data property, or an accessor\n        property:</p>\n\n        <ul>\n          <li>\n            <p>A <i>data property</i> associates a key value with an <a href=\"/sec/sec-ecmascript-language-types.html\">ECMAScript language\n            value</a> and a set of Boolean attributes.</p>\n          </li>\n\n          <li>\n            <p>An <i>accessor property</i> associates a key value with one or two accessor functions, and a set of Boolean\n            attributes. The accessor functions are used to store or retrieve an <a href=\"/sec/sec-ecmascript-language-types.html\">ECMAScript language value</a> that is associated with the property.</p>\n          </li>\n        </ul>\n\n        <p>Properties are identified using key values. A property key value is either an ECMAScript String value or a Symbol\n        value. All String and Symbol values, including the empty string, are valid as property keys. A <i>property name</i> is a\n        property key that is a String value.</p>\n\n        <p>An <i>integer index</i> is a String-valued property key that is a canonical numeric String (<a href=\"/sec/sec-canonicalnumericindexstring.html\">see 7.1.16</a>) and whose numeric value is either <span style=\"font-family: Times\n        New Roman\">+0</span> or a positive integer &#x2264; 2<sup>53</sup>&#x2212;1. An <i>array index</i> is an integer index whose\n        numeric value <var>i</var> is in the range <span style=\"font-family: Times New Roman\">+0 &#x2264; <i>i</i> &lt;\n        2<sup>32</sup>&#x2212;1.</span></p>\n\n        <p>Property keys are used to access properties and their values. There are two kinds of access for properties: <i>get</i>\n        and <i>set</i>, corresponding to value retrieval and assignment, respectively. The properties accessible via get and set\n        access includes both <i>own properties</i> that are a direct part of an object and <i>inherited properties</i> which are\n        provided by another associated object via a property inheritance relationship. Inherited properties may be either own or\n        inherited properties of the associated object. Each own property of an object must each have a key value that is distinct\n        from the key values of the other own properties of that object.</p>\n\n        <p>All objects are logically collections of properties, but there are multiple forms of objects that differ in their\n        semantics for accessing and manipulating their properties. O<i>rdinary objects</i> are the most common form of objects and\n        have the default object semantics. An <i>exotic object</i> is any form of object whose property semantics differ in any\n        way from the default semantics.</p>\n      </div>\n\n      <section id=\"sec-property-attributes\">\n        <h1><span class=\"secnum\" id=\"sec-6.1.7.1\"><a href=\"/sec/sec-property-attributes.html\" title=\"link to this section\">6.1.7.1</a></span> Property Attributes</h1>\n\n        <p>Attributes are used in this specification to define and explain the state of Object properties. A data property\n        associates a key value with the attributes listed in <a href=\"/sec/table-2.html\">Table 2</a>.</p>\n\n        <figure>\n          <figcaption><span id=\"table-2\">Table 2</span> &#x2014; Attributes of a Data Property</figcaption>\n          <table class=\"real-table\">\n            <tr>\n              <th style=\"border-bottom: 1px solid black; border-left: 1px solid black; border-right: 1px solid #000000; border-top: 1px solid black\">Attribute Name</th>\n              <th style=\"border-bottom: 1px solid black; border-left: 1px solid black; border-right: 1px solid #000000; border-top: 1px solid black\">Value Domain</th>\n              <th style=\"border-bottom: 1px solid black; border-left: 1px solid black; border-right: 1px solid #000000; border-top: 1px solid black\">Description</th>\n            </tr>\n            <tr>\n              <td style=\"border-bottom: 1px solid black; border-left: 1px solid black; border-right: 1px solid black\">[[Value]]</td>\n              <td style=\"border-bottom: 1px solid black; border-right: 1px solid black\">Any <a href=\"/sec/sec-ecmascript-language-types.html\">ECMAScript language type</a></td>\n              <td style=\"border-bottom: 1px solid black; border-right: 1px solid black\">The value retrieved by a get access of the property.</td>\n            </tr>\n            <tr>\n              <td style=\"border-bottom: 1px solid black; border-left: 1px solid black; border-right: 1px solid black\">[[Writable]]</td>\n              <td style=\"border-bottom: 1px solid black; border-right: 1px solid black\">Boolean</td>\n              <td style=\"border-bottom: 1px solid black; border-right: 1px solid black\">If <b>false</b>, attempts by ECMAScript code to change the property&#x2019;s [[Value]] attribute using [[Set]] will not succeed.</td>\n            </tr>\n            <tr>\n              <td style=\"border-bottom: 1px solid black; border-left: 1px solid black; border-right: 1px solid black\">[[Enumerable]]</td>\n              <td style=\"border-bottom: 1px solid black; border-right: 1px solid black\">Boolean</td>\n              <td style=\"border-bottom: 1px solid black; border-right: 1px solid black\">If <b>true</b>, the property will be enumerated by a for-in enumeration (<a href=\"/sec/sec-for-in-and-for-of-statements.html\">see 13.7.5</a>). Otherwise, the property is said to be non-enumerable.</td>\n            </tr>\n            <tr>\n              <td style=\"border-bottom: 1px solid black; border-left: 1px solid black; border-right: 1px solid black\">[[Configurable]]</td>\n              <td style=\"border-bottom: 1px solid black; border-right: 1px solid black\">Boolean</td>\n              <td style=\"border-bottom: 1px solid black; border-right: 1px solid black\">If <b>false</b>, attempts to delete the property, change the property to be an accessor property, or change its attributes (other than [[Value]], or changing [[Writable]] to <b>false</b>) will fail.</td>\n            </tr>\n          </table>\n        </figure>\n\n        <p>An accessor property associates a key value with the attributes listed in <a href=\"/sec/table-3.html\">Table 3</a>.</p>\n\n        <figure>\n          <figcaption><span id=\"table-3\">Table 3</span> &#x2014; Attributes of an Accessor Property</figcaption>\n          <table class=\"real-table\">\n            <tr>\n              <th style=\"border-bottom: 1px solid black; border-left: 1px solid black; border-right: 1px solid #000000; border-top: 1px solid black\">Attribute Name</th>\n              <th style=\"border-bottom: 1px solid black; border-left: 1px solid black; border-right: 1px solid #000000; border-top: 1px solid black\">Value Domain</th>\n              <th style=\"border-bottom: 1px solid black; border-left: 1px solid black; border-right: 1px solid #000000; border-top: 1px solid black\">Description</th>\n            </tr>\n            <tr>\n              <td style=\"border-bottom: 1px solid black; border-left: 1px solid black; border-right: 1px solid #000000\">[[Get]]</td>\n              <td style=\"border-bottom: 1px solid black; border-right: 1px solid black\">Object <i>|</i> Undefined</td>\n              <td style=\"border-bottom: 1px solid black; border-right: 1px solid black\">If the value is an Object it must be a function object. The function&#x2019;s [[Call]] internal method (<a href=\"/sec/table-6.html\">Table 6</a>) is called with an empty arguments list to retrieve the property value each time a get access of the property is performed.</td>\n            </tr>\n            <tr>\n              <td style=\"border-bottom: 1px solid black; border-left: 1px solid black; border-right: 1px solid #000000; border-top: 1px solid black\">[[Set]]</td>\n              <td style=\"border-bottom: 1px solid black; border-right: 1px solid black\">Object <i>|</i> Undefined</td>\n              <td style=\"border-bottom: 1px solid black; border-right: 1px solid black\">If the value is an Object it must be a function object. The function&#x2019;s [[Call]] internal method (<a href=\"/sec/table-6.html\">Table 6</a>) is called with an arguments list containing the assigned value as its sole argument each time a set access of the property is performed. The effect of a property&apos;s [[Set]] internal method may, but is not required to, have an effect on the value returned by subsequent calls to the property&apos;s [[Get]] internal method.</td>\n            </tr>\n            <tr>\n              <td style=\"border-bottom: 1px solid black; border-left: 1px solid black; border-right: 1px solid #000000; border-top: 1px solid black\">[[Enumerable]]</td>\n              <td style=\"border-bottom: 1px solid black; border-right: 1px solid black\">Boolean</td>\n              <td style=\"border-bottom: 1px solid black; border-right: 1px solid black\">If <b>true</b>, the property is to be enumerated by a for-in enumeration (<a href=\"/sec/sec-for-in-and-for-of-statements.html\">see 13.7.5</a>). Otherwise, the property is said to be non-enumerable.</td>\n            </tr>\n            <tr>\n              <td style=\"border-bottom: 1px solid black; border-left: 1px solid black; border-right: 1px solid #000000; border-top: 1px solid black\">[[Configurable]]</td>\n              <td style=\"border-bottom: 1px solid black; border-right: 1px solid black\">Boolean</td>\n              <td style=\"border-bottom: 1px solid black; border-right: 1px solid black\">If <b>false</b>, attempts to delete the property, change the property to be a data property, or change its attributes will fail.</td>\n            </tr>\n          </table>\n        </figure>\n\n        <p>If the initial values of a property&#x2019;s attributes are not explicitly specified by this specification, the default\n        value defined in <a href=\"/sec/table-4.html\">Table 4</a> is used.</p>\n\n        <figure>\n          <figcaption><span id=\"table-4\">Table 4</span> &#x2014; Default Attribute Values</figcaption>\n          <table class=\"real-table\">\n            <tr>\n              <th style=\"border-bottom: 1px solid black; border-left: 1px solid black; border-right: 1px solid #000000; border-top: 1px solid black\">Attribute Name</th>\n              <th style=\"border-bottom: 1px solid black; border-left: 1px solid black; border-right: 1px solid #000000; border-top: 1px solid black\">Default Value</th>\n            </tr>\n            <tr>\n              <td style=\"border-bottom: 1px solid black; border-left: 1px solid black; border-right: 1px solid #000000; border-top: 1px solid black\">[[Value]]</td>\n              <td style=\"border-bottom: 1px solid black; border-left: 1px solid black; border-right: 1px solid #000000; border-top: 1px solid black\"><b>undefined</b></td>\n            </tr>\n            <tr>\n              <td style=\"border-bottom: 1px solid black; border-left: 1px solid black; border-right: 1px solid #000000\">[[Get]]</td>\n              <td style=\"border-bottom: 1px solid black; border-right: 1px solid black\"><b>undefined</b></td>\n            </tr>\n            <tr>\n              <td style=\"border-bottom: 1px solid black; border-left: 1px solid black; border-right: 1px solid #000000; border-top: 1px solid black\">[[Set]]</td>\n              <td style=\"border-bottom: 1px solid black; border-right: 1px solid black\"><b>undefined</b></td>\n            </tr>\n            <tr>\n              <td style=\"border-bottom: 1px solid black; border-left: 1px solid black; border-right: 1px solid #000000; border-top: 1px solid black\">[[Writable]]</td>\n              <td style=\"border-bottom: 1px solid black; border-right: 1px solid black\"><b>false</b></td>\n            </tr>\n            <tr>\n              <td style=\"border-bottom: 1px solid black; border-left: 1px solid black; border-right: 1px solid #000000; border-top: 1px solid black\">[[Enumerable]]</td>\n              <td style=\"border-bottom: 1px solid black; border-right: 1px solid black\"><b>false</b></td>\n            </tr>\n            <tr>\n              <td style=\"border-bottom: 1px solid black; border-left: 1px solid black; border-right: 1px solid #000000; border-top: 1px solid black\">[[Configurable]]</td>\n              <td style=\"border-bottom: 1px solid black; border-right: 1px solid black\"><b>false</b></td>\n            </tr>\n          </table>\n        </figure>\n      </section>\n\n      <section id=\"sec-object-internal-methods-and-internal-slots\">\n        <h1><span class=\"secnum\" id=\"sec-6.1.7.2\"><a href=\"/sec/sec-object-internal-methods-and-internal-slots.html\" title=\"link to this section\">6.1.7.2</a></span> Object Internal Methods and Internal Slots</h1>\n\n        <p>The actual semantics of objects, in ECMAScript, are specified via algorithms called <i>internal methods</i>. Each\n        object in an ECMAScript engine is associated with a set of internal methods that defines its runtime behaviour. These\n        internal methods are not part of the ECMAScript language. They are defined by this specification purely for expository\n        purposes. However, each object within an implementation of ECMAScript must behave as specified by the internal methods\n        associated with it. The exact manner in which this is accomplished is determined by the implementation.</p>\n\n        <p>Internal method names are polymorphic. This means that different object values may perform different algorithms when a\n        common internal method name is invoked upon them. That actual object upon which an internal method is invoked is the\n        &#x201C;target&#x201D; of the invocation. If, at runtime, the implementation of an algorithm attempts to use an internal\n        method of an object that the object does not support, a <b>TypeError</b> exception is thrown.</p>\n\n        <p>Internal slots correspond to internal state that is associated with objects and used by various ECMAScript\n        specification algorithms. Internal slots are not object properties and they are not inherited. Depending upon the specific\n        internal slot specification, such state may consist of values of any <a href=\"/sec/sec-ecmascript-language-types.html\">ECMAScript\n        language type</a> or of specific ECMAScript specification type values. Unless explicitly specified otherwise, internal\n        slots are allocated as part of the process of creating an object and may not be dynamically added to an object. Unless\n        specified otherwise, the initial value of an internal slot is the value <span class=\"value\">undefined</span>. Various\n        algorithms within this specification create objects that have internal slots. However, the ECMAScript language provides no\n        direct way to associate internal slots with an object.</p>\n\n        <p>Internal methods and internal slots are identified within this specification using names enclosed in double square\n        brackets [[ ]].</p>\n\n        <p><a href=\"/sec/table-5.html\">Table 5</a> summarizes the <i>essential internal methods</i> used by this specification that are\n        applicable to all objects created or manipulated by ECMAScript code. Every object must have algorithms for all of the\n        essential internal methods. However, all objects do not necessarily use the same algorithms for those methods.</p>\n\n        <p>The &#x201C;Signature&#x201D; column of <a href=\"/sec/table-5.html\">Table 5</a> and other similar tables describes the invocation\n        pattern for each internal method. The invocation pattern always includes a parenthesized list of descriptive parameter\n        names. If a parameter name is the same as an ECMAScript type name then the name describes the required type of the\n        parameter value. If an internal method  explicitly returns a value, its parameter list is followed by the symbol\n        &#x201C;&#x2192;&#x201D; and the type name of the returned value. The type names used in signatures refer to the types defined\n        in <a href=\"/sec/sec-ecmascript-data-types-and-values.html\">clause 6</a> augmented by the following additional names.\n        &#x201C;<i>any</i>&#x201D; means the value may be any <a href=\"/sec/sec-ecmascript-language-types.html\">ECMAScript language type</a>.\n        An internal method implicitly returns a <a href=\"/sec/sec-completion-record-specification-type.html\">Completion Record</a> as\n        described in <a href=\"/sec/sec-completion-record-specification-type.html\">6.2.2</a>. In addition to its parameters, an internal\n        method always has access to the object that is the target of the method invocation.</p>\n\n        <figure>\n          <figcaption><span id=\"table-5\">Table 5</span> &#x2014; Essential Internal Methods</figcaption>\n          <table class=\"real-table\">\n            <tr>\n              <th>Internal Method</th>\n              <th>Signature</th>\n              <th>Description</th>\n            </tr>\n            <tr>\n              <td>[[GetPrototypeOf]]</td>\n              <td>() <b>&#x2192;</b> Object | Null</td>\n              <td>Determine the object that provides inherited properties for this object. A <b>null</b> value indicates that there are no inherited properties.</td>\n            </tr>\n            <tr>\n              <td>[[SetPrototypeOf]]</td>\n              <td>(<i>Object</i> | Null) <b>&#x2192;</b> Boolean</td>\n              <td>Associate this object with another object that provides inherited properties. Passing <b>null</b> indicates that there are no inherited properties. Returns <b>true</b> indicating that the operation was completed successfully or <b>false</b> indicating that the operation was not successful.</td>\n            </tr>\n            <tr>\n              <td>[[IsExtensible]]</td>\n              <td>( ) <b>&#x2192;</b> Boolean</td>\n              <td>Determine whether it is permitted to add additional properties to this object.</td>\n            </tr>\n            <tr>\n              <td>[[PreventExtensions]]</td>\n              <td>( ) <b>&#x2192;</b> Boolean</td>\n              <td>Control whether new properties may be added to this object. Returns <b>true</b> if the operation was successful or <b>false</b> if the operation was unsuccessful.</td>\n            </tr>\n            <tr>\n              <td>[[GetOwnProperty]]</td>\n              <td>(<i>propertyKey</i>) <b>&#x2192;</b> Undefined | <a href=\"/sec/sec-property-descriptor-specification-type.html\">Property Descriptor</a></td>\n              <td>Return a <a href=\"/sec/sec-property-descriptor-specification-type.html\">Property Descriptor</a> for the own property of this object whose key is <i>propertyKey</i>, or <b>undefined</b> if no such property exists.</td>\n            </tr>\n            <tr>\n              <td>[[HasProperty]]</td>\n              <td>(<i>propertyKey</i>) <b>&#x2192;</b> Boolean</td>\n              <td>Return a Boolean value indicating whether this object already has either an own or inherited property whose key is <i>propertyKey</i>.</td>\n            </tr>\n            <tr>\n              <td>[[Get]]</td>\n              <td>(<i>propertyKey</i>, <i>Receiver</i>)<br><b>&#x2192;</b> <i>any</i></td>\n              <td>Return the value of the property whose key is <i>propertyKey</i> from this object. If any ECMAScript code must be executed to retrieve the property value, <i>Receiver</i> is used as the <b>this</b> value when evaluating the code.</td>\n            </tr>\n            <tr>\n              <td>[[Set]]</td>\n              <td>(<i>propertyKey</i>,<i>value</i>, <i>Receiver</i>) <br><b>&#x2192;</b> <i>Boolean</i></td>\n              <td>Set the value of the property whose key is <i>propertyKey</i> to <i>value</i>. If any ECMAScript code must be executed to set the property value, <i>Receiver</i> is used as the <b>this</b> value when evaluating the code. Returns <b>true</b> if the property value was set or <b>false</b> if it could not be set.</td>\n            </tr>\n            <tr>\n              <td>[[Delete]]</td>\n              <td>(<i>propertyKey</i>) <b>&#x2192;</b> Boolean</td>\n              <td>Remove the own property whose key is <i>propertyKey</i> from this object . Return <b>false</b> if the property was not deleted and is still present. Return <b>true</b> if the property was deleted or is not present.</td>\n            </tr>\n            <tr>\n              <td>[[DefineOwnProperty]]</td>\n              <td>(<i>propertyKey</i>, <i>PropertyDescriptor</i>)<br><b>&#x2192;</b> Boolean</td>\n              <td>Create or alter the own property, whose key is <i>propertyKey</i>, to have the state described by <i>PropertyDescriptor</i>. Return <b>true</b> if that property was successfully created/updated or <b>false</b> if the property could not be created or updated.</td>\n            </tr>\n            <tr>\n              <td>[[Enumerate]]</td>\n              <td>()<b><i>&#x2192;</i></b>Object</td>\n              <td>Return an iterator object that produces the keys of the string-keyed enumerable properties of the object.</td>\n            </tr>\n            <tr>\n              <td>[[OwnPropertyKeys]]</td>\n              <td>()<b>&#x2192;</b><a href=\"/sec/sec-list-and-record-specification-type.html\">List</a> of propertyKey</td>\n              <td>Return a <a href=\"/sec/sec-list-and-record-specification-type.html\">List</a> whose elements are all of the own property keys for the object.</td>\n            </tr>\n          </table>\n        </figure>\n\n        <p><a href=\"/sec/table-6.html\">Table 6</a> summarizes additional essential internal methods that are supported by objects that may\n        be called as functions. A <i>function object</i> is an object that supports the [[Call]] internal methods. A\n        <i>constructor</i> (also referred to as a <i>constructor function</i>) is a function object that supports the\n        [[Construct]] internal method.</p>\n\n        <figure>\n          <figcaption><span id=\"table-6\">Table 6</span> &#x2014; Additional Essential Internal Methods of Function Objects</figcaption>\n          <table class=\"real-table\">\n            <tr>\n              <th>Internal Method</th>\n              <th>Signature</th>\n              <th>Description</th>\n            </tr>\n            <tr>\n              <td>[[Call]]</td>\n              <td>(<i>any</i>, a <a href=\"/sec/sec-list-and-record-specification-type.html\">List</a> of <i>any</i>)<br><span class=\"value\">&#x2192;</span> <i>any</i></td>\n              <td>Executes code associated with this object. Invoked via a function call expression. The arguments to the internal method are a <b>this</b> value and a list containing the arguments passed to the function by a call expression. Objects that implement this internal method are <i>callable</i>.</td>\n            </tr>\n            <tr>\n              <td>[[Construct]]</td>\n              <td>(a <a href=\"/sec/sec-list-and-record-specification-type.html\">List</a> of <i>any</i>, Object)<br><span class=\"value\">&#x2192;</span> Object</td>\n              <td>Creates an object. Invoked via the <code>new</code> or <code>super</code> operators. The first argument to the internal method is a list containing the arguments of the operator. The second argument is the object to which the <code>new</code> operator was initially applied. Objects that implement this internal method are called <i>constructors</i>. A function object is not necessarily a constructor and such non-constructor function objects do not have a [[Construct]] internal method.</td>\n            </tr>\n          </table>\n        </figure>\n\n        <p>The semantics of the essential internal methods for ordinary objects and standard exotic objects are specified in <a href=\"/sec/sec-ordinary-and-exotic-objects-behaviours.html\">clause 9</a>. If any specified use of an internal method of an exotic\n        object is not supported by an implementation, that usage must throw a <b>TypeError</b> exception when attempted.</p>\n      </section>\n\n      <section id=\"sec-invariants-of-the-essential-internal-methods\">\n        <h1><span class=\"secnum\" id=\"sec-6.1.7.3\"><a href=\"/sec/sec-invariants-of-the-essential-internal-methods.html\" title=\"link to this section\">6.1.7.3</a></span> Invariants of the Essential Internal Methods</h1>\n\n        <p>The Internal Methods of Objects of an ECMAScript engine must conform to the list of invariants specified below.\n        Ordinary ECMAScript Objects as well as all standard exotic objects in this specification maintain these invariants.\n        ECMAScript Proxy objects maintain these invariants by means of runtime checks on the result of traps invoked on the\n        [[ProxyHandler]] object.</p>\n\n        <p>Any implementation provided exotic objects must also maintain these invariants for those objects. Violation of these\n        invariants may cause ECMAScript code to have unpredictable behaviour and create security issues. However, violation of\n        these invariants must never compromise the memory safety of an implementation.</p>\n\n        <p>An implementation must not allow these invariants to be circumvented in any manner such as by providing alternative\n        interfaces that implement the functionality of the essential internal methods without enforcing their invariants.</p>\n\n        <p class=\"normalbefore\">Definitions:</p>\n\n        <p class=\"normalBullet\">&#x25CF;&#xA0;&#xA0;&#xA0;The <i>target</i> of an internal method is the object upon which the\n        internal method is called.</p>\n\n        <p class=\"normalBullet\">&#x25CF;&#xA0;&#xA0;&#xA0;A target is <i>non-extensible</i> if it has been observed to return\n        false from its [[IsExtensible]] internal method, or true from its [[PreventExtensions]] internal method.</p>\n\n        <p class=\"normalBullet\">&#x25CF;&#xA0;&#xA0;&#xA0;A <i>non-existent</i> property is a property that does not exist as an\n        own property on a non-extensible target.</p>\n\n        <p class=\"normalBullet\">&#x25CF;&#xA0;&#xA0;&#xA0;All references to <i><a href=\"/sec/sec-samevalue.html\">SameValue</a></i> are\n        according to the definition of <a href=\"/sec/sec-samevalue.html\">SameValue</a> algorithm specified in <a href=\"/sec/sec-samevalue.html\">7.2.9</a>.</p>\n\n        <p class=\"normalbefore\"><b>[[GetPrototypeOf]] ( )</b></p>\n\n        <p class=\"normalBullet\">&#x25CF;&#xA0;&#xA0;&#xA0;The Type of the return value must be either Object or Null.</p>\n\n        <p class=\"normalBullet\">&#x25CF;&#xA0;&#xA0;&#xA0;If target is non-extensible, and [[GetPrototypeOf]] returns a value v,\n        then any future calls to [[GetPrototypeOf]] should return the <a href=\"/sec/sec-samevalue.html\">SameValue</a> as v.</p>\n\n        <div class=\"note\">\n          <p><span class=\"nh\">NOTE 1</span> An object&#x2019;s prototype chain should have finite length (that is, starting from\n          any object, recursively applying the [[GetPrototypeOf]] internal method to its result should eventually lead to the\n          value null). However, this requirement is not enforceable as an object level invariant if the prototype chain includes\n          any exotic objects that do not use the ordinary object definition of [[GetPrototypeOf]]. Such a circular prototype chain\n          may result in infinite loops when accessing object properties.</p>\n        </div>\n\n        <p class=\"normalbefore\"><b>[[SetPrototypeOf]] (V)</b></p>\n\n        <p class=\"normalBullet\">&#x25CF;&#xA0;&#xA0;&#xA0;The Type of the return value must be Boolean.</p>\n\n        <p class=\"normalBullet\">&#x25CF;&#xA0;&#xA0;&#xA0;If target is non-extensible, [[SetPrototypeOf]] must return false,\n        unless V is the <a href=\"/sec/sec-samevalue.html\">SameValue</a> as the target&#x2019;s observed [[GetPrototypeOf]] value.</p>\n\n        <p class=\"normalbefore\"><b>[[PreventExtensions]] ( )</b></p>\n\n        <p class=\"normalBullet\">&#x25CF;&#xA0;&#xA0;&#xA0;The Type of the return value must be Boolean.</p>\n\n        <p class=\"normalBullet\">&#x25CF;&#xA0;&#xA0;&#xA0;If [[PreventExtensions]] returns true, all future calls to\n        [[IsExtensible]] on the target must return false and the target is now considered non-extensible.</p>\n\n        <p class=\"normalbefore\"><b>[[GetOwnProperty]] (P)</b></p>\n\n        <p class=\"normalBullet\">&#x25CF;&#xA0;&#xA0;&#xA0;The Type of the return value must be either <a href=\"/sec/sec-property-descriptor-specification-type.html\">Property Descriptor</a> or Undefined.</p>\n\n        <p class=\"normalBullet\">&#x25CF;&#xA0;&#xA0;&#xA0;If the Type of the return value is <a href=\"/sec/sec-property-descriptor-specification-type.html\">Property Descriptor</a>, the return value must be a complete property\n        descriptor (<a href=\"/sec/sec-completepropertydescriptor.html\">see 6.2.4.6</a>).</p>\n\n        <p class=\"normalBullet\">&#x25CF;&#xA0;&#xA0;&#xA0;If a property P is described as a data property with Desc.[[Value]]\n        equal to v and Desc.[[Writable]] and Desc.[[Configurable]] are both false, then the <a href=\"/sec/sec-samevalue.html\">SameValue</a>\n        must be returned for the Desc.[[Value]] attribute of the property on all future calls to [[GetOwnProperty]] ( P ).</p>\n\n        <p class=\"normalBullet\">&#x25CF;&#xA0;&#xA0;&#xA0;If P&#x2019;s attributes other than [[Writable]] may change over time or\n        if the property might disappear, then P&#x2019;s [[Configurable]] attribute must be true.</p>\n\n        <p class=\"normalBullet\">&#x25CF;&#xA0;&#xA0;&#xA0;If the [[Writable]] attribute may change from false to true, then the\n        [[Configurable]] attribute must be true.</p>\n\n        <p class=\"normalBullet\">&#x25CF;&#xA0;&#xA0;&#xA0;If the target is non-extensible and P is non-existent, then all future\n        calls to [[GetOwnProperty]] (P)  on the target must describe P as non-existent (i.e. [[GetOwnProperty]] (P) must return\n        undefined).</p>\n\n        <div class=\"note\">\n          <p><span class=\"nh\">NOTE 2</span> As a consequence of the third invariant, if a property is described as a data property\n          and it may return different values over time, then either or both of the Desc.[[Writable]] and Desc.[[Configurable]]\n          attributes must be true even if no mechanism to change the value is exposed via the other internal methods.</p>\n        </div>\n\n        <p class=\"normalbefore\"><b>[[DefineOwnProperty]] (P, Desc)</b></p>\n\n        <p class=\"normalBullet\">&#x25CF;&#xA0;&#xA0;&#xA0;The Type of the return value must be Boolean.</p>\n\n        <p class=\"normalBullet\">&#x25CF;&#xA0;&#xA0;&#xA0;[[DefineOwnProperty]] must return false if P has previously been\n        observed as a non-configurable own property of the target, unless either:</p>\n\n        <p class=\"normalBulletSubstep\">1.\tP is a non-configurable writable own data property. A non-configurable writable data\n        property can be changed into a non-configurable non-writable data property.</p>\n\n        <p class=\"normalBulletSubstep\">2.\tAll attributes in Desc are the <a href=\"/sec/sec-samevalue.html\">SameValue</a> as P&#x2019;s\n        attributes.</p>\n\n        <p class=\"normalBullet\">&#x25CF;&#xA0;&#xA0;&#xA0;[[DefineOwnProperty]] (P, Desc) must return false if target is\n        non-extensible and P is a non-existent own property. That is, a non-extensible target object cannot be extended with new\n        properties.</p>\n\n        <p class=\"normalbefore\"><b>[[HasProperty]] ( P )</b></p>\n\n        <p class=\"normalBullet\">&#x25CF;&#xA0;&#xA0;&#xA0;The Type of the return value must be Boolean.</p>\n\n        <p class=\"normalBullet\">&#x25CF;&#xA0;&#xA0;&#xA0;If P was previously observed as a non-configurable data or accessor own\n        property of the target, [[HasProperty]] must return true.</p>\n\n        <p class=\"normalbefore\"><b>[[Get]] (P, Receiver)</b></p>\n\n        <p class=\"normalBullet\">&#x25CF;&#xA0;&#xA0;&#xA0;If P was previously observed as a non-configurable, non-writable own\n        data property of the target with value v, then [[Get]] must return the <a href=\"/sec/sec-samevalue.html\">SameValue</a>.</p>\n\n        <p class=\"normalBullet\">&#x25CF;&#xA0;&#xA0;&#xA0;If P was previously observed as a non-configurable own accessor property\n        of the target whose [[Get]] attribute is undefined, the [[Get]] operation must return undefined.</p>\n\n        <p class=\"normalbefore\"><b>[[Set]] ( P, V, Receiver)</b></p>\n\n        <p class=\"normalBullet\">&#x25CF;&#xA0;&#xA0;&#xA0;The Type of the return value must be Boolean.</p>\n\n        <p class=\"normalBullet\">&#x25CF;&#xA0;&#xA0;&#xA0;If P was previously observed as a non-configurable, non-writable own\n        data property of the target, then [[Set]] must return false unless V is the <a href=\"/sec/sec-samevalue.html\">SameValue</a> as\n        P&#x2019;s [[Value]] attribute.</p>\n\n        <p class=\"normalBullet\">&#x25CF;&#xA0;&#xA0;&#xA0;If P was previously observed as a non-configurable own accessor property\n        of the target whose [[Set]] attribute is undefined, the [[Set]] operation must return false.</p>\n\n        <p class=\"normalbefore\"><b>[[Delete]] ( P )</b></p>\n\n        <p class=\"normalBullet\">&#x25CF;&#xA0;&#xA0;&#xA0;The Type of the return value must be Boolean.</p>\n\n        <p class=\"normalBullet\">&#x25CF;&#xA0;&#xA0;&#xA0;If P was previously observed to be a non-configurable own data or\n        accessor property of the target, [[Delete]] must return false.</p>\n\n        <p class=\"normalbefore\"><b>[[Enumerate]] ( )</b></p>\n\n        <p class=\"normalBullet\">&#x25CF;&#xA0;&#xA0;&#xA0;The Type of the return value must be Object.</p>\n\n        <p class=\"normalbefore\"><b>[[OwnPropertyKeys]] ( )</b></p>\n\n        <p class=\"normalBullet\">&#x25CF;&#xA0;&#xA0;&#xA0;The return value must be a <a href=\"/sec/sec-list-and-record-specification-type.html\">List</a>.</p>\n\n        <p class=\"normalBullet\">&#x25CF;&#xA0;&#xA0;&#xA0;The Type of each element of the returned <a href=\"/sec/sec-list-and-record-specification-type.html\">List</a> is either String or Symbol.</p>\n\n        <p class=\"normalBullet\">&#x25CF;&#xA0;&#xA0;&#xA0;The returned <a href=\"/sec/sec-list-and-record-specification-type.html\">List</a>\n        must contain at least the keys of all non-configurable own properties that have previously been observed.</p>\n\n        <p class=\"normalBullet\">&#x25CF;&#xA0;&#xA0;&#xA0;If the object is non-extensible, the returned <a href=\"/sec/sec-list-and-record-specification-type.html\">List</a> must contain only the keys of all own properties of the object\n        that are observable using [[GetOwnProperty]].</p>\n\n        <p class=\"normalbefore\"><b>[[Construct]] ( )</b></p>\n\n        <p class=\"normalBullet\">&#x25CF;&#xA0;&#xA0;&#xA0;The Type of the return value must be Object.</p>\n      </section>\n\n      <section id=\"sec-well-known-intrinsic-objects\">\n        <h1><span class=\"secnum\" id=\"sec-6.1.7.4\"><a href=\"/sec/sec-well-known-intrinsic-objects.html\" title=\"link to this section\">6.1.7.4</a></span> Well-Known Intrinsic Objects</h1>\n\n        <p>Well-known intrinsics are built-in objects that are explicitly referenced by the algorithms of this specification and\n        which usually have <a href=\"/sec/sec-code-realms.html\">Realm</a> specific identities. Unless otherwise specified each intrinsic\n        object actually corresponds to a set of similar objects, one per <a href=\"/sec/sec-code-realms.html\">Realm</a>.</p>\n\n        <p>Within this specification a reference such as %name% means the intrinsic object, associated with <a href=\"/sec/sec-execution-contexts.html\">the current Realm</a>, corresponding to the name. Determination of <a href=\"/sec/sec-execution-contexts.html\">the current Realm</a> and its intrinsics is described in <a href=\"/sec/sec-execution-contexts.html\">8.3</a>. The well-known intrinsics are listed in <a href=\"/sec/table-7.html\">Table 7</a>.</p>\n\n        <figure>\n          <figcaption><span id=\"table-7\">Table 7</span> &#x2014; Well-known Intrinsic Objects</figcaption>\n          <table class=\"real-table\">\n            <tr>\n              <th>Intrinsic Name</th>\n              <th>Global Name</th>\n              <th>ECMAScript Language Association</th>\n            </tr>\n            <tr>\n              <td>%Array%</td>\n              <td><code>Array</code></td>\n              <td>The <code>Array</code> constructor (<a href=\"/sec/sec-array-constructor.html\">22.1.1</a>)</td>\n            </tr>\n            <tr>\n              <td>%ArrayBuffer%</td>\n              <td><code>ArrayBuffer</code></td>\n              <td>The <code>ArrayBuffer</code> constructor (<a href=\"/sec/sec-arraybuffer-constructor.html\">24.1.2</a>)</td>\n            </tr>\n            <tr>\n              <td>%ArrayBufferPrototype%</td>\n              <td><code><a href=\"/sec/sec-arraybuffer.prototype.html\">ArrayBuffer.prototype</a></code></td>\n              <td>The initial value of the <code>prototype</code> data property of %ArrayBuffer%.</td>\n            </tr>\n            <tr>\n              <td>%ArrayIteratorPrototype%</td>\n              <td></td>\n              <td>The prototype of Array iterator objects (<a href=\"/sec/sec-array-iterator-objects.html\">22.1.5</a>)</td>\n            </tr>\n            <tr>\n              <td>%ArrayPrototype%</td>\n              <td><code>Array.prototype</code></td>\n              <td>The initial value of the <code>prototype</code> data property of %Array%  (<a href=\"/sec/sec-properties-of-the-array-prototype-object.html\">22.1.3</a>)</td>\n            </tr>\n            <tr>\n              <td>%ArrayProto_values%</td>\n              <td><code><a href=\"/sec/sec-array.prototype.values.html\">Array.prototype.values</a></code></td>\n              <td>The initial value of the <code>values</code> data property of %ArrayPrototype% (<a href=\"/sec/sec-array.prototype.values.html\">22.1.3.29</a>)</td>\n            </tr>\n            <tr>\n              <td>%Boolean%</td>\n              <td><code>Boolean</code></td>\n              <td>The <code>Boolean</code> constructor (<a href=\"/sec/sec-boolean-constructor.html\">19.3.1</a>)</td>\n            </tr>\n            <tr>\n              <td>%BooleanPrototype%</td>\n              <td><code>Boolean.prototype</code></td>\n              <td>The initial value of the <code>prototype</code> data property of %Boolean% (<a href=\"/sec/sec-properties-of-the-boolean-prototype-object.html\">19.3.3</a>)</td>\n            </tr>\n            <tr>\n              <td>%DataView%</td>\n              <td><code>DataView</code></td>\n              <td>The <code>DataView</code> constructor (<a href=\"/sec/sec-dataview-constructor.html\">24.2.2</a>)</td>\n            </tr>\n            <tr>\n              <td>%DataViewPrototype%</td>\n              <td><code><a href=\"/sec/sec-dataview.prototype.html\">DataView.prototype</a></code></td>\n              <td>The initial value of the <code>prototype</code> data property of %DataView%</td>\n            </tr>\n            <tr>\n              <td>%Date%</td>\n              <td><code>Date</code></td>\n              <td>The <code>Date</code> constructor (<a href=\"/sec/sec-date-constructor.html\">20.3.2</a>)</td>\n            </tr>\n            <tr>\n              <td>%DatePrototype%</td>\n              <td><code>Date.prototype</code></td>\n              <td>The initial value of the <code>prototype</code> data property of %Date%.</td>\n            </tr>\n            <tr>\n              <td>%decodeURI%</td>\n              <td><code>decodeURI</code></td>\n              <td>The <code>decodeURI</code> function (<a href=\"/sec/sec-decodeuri-encodeduri.html\">18.2.6.2</a>)</td>\n            </tr>\n            <tr>\n              <td>%decodeURIComponent%</td>\n              <td><code>decodeURIComponent</code></td>\n              <td>The <code>decodeURIComponent</code> function (<a href=\"/sec/sec-decodeuricomponent-encodeduricomponent.html\">18.2.6.3</a>)</td>\n            </tr>\n            <tr>\n              <td>%encodeURI%</td>\n              <td><code>encodeURI</code></td>\n              <td>The <code>encodeURI</code> function (<a href=\"/sec/sec-encodeuri-uri.html\">18.2.6.4</a>)</td>\n            </tr>\n            <tr>\n              <td>%encodeURIComponent%</td>\n              <td><code>encodeURIComponent</code></td>\n              <td>The <code>encodeURIComponent</code> function (<a href=\"/sec/sec-encodeuricomponent-uricomponent.html\">18.2.6.5</a>)</td>\n            </tr>\n            <tr>\n              <td>%Error%</td>\n              <td><code>Error</code></td>\n              <td>The <code>Error</code> constructor (<a href=\"/sec/sec-error-constructor.html\">19.5.1</a>)</td>\n            </tr>\n            <tr>\n              <td>%ErrorPrototype%</td>\n              <td><code>Error.prototype</code></td>\n              <td>The initial value of the <code>prototype</code> data property of %Error%</td>\n            </tr>\n            <tr>\n              <td>%eval%</td>\n              <td><code>eval</code></td>\n              <td>The <code>eval</code> function (<a href=\"/sec/sec-eval-x.html\">18.2.1</a>)</td>\n            </tr>\n            <tr>\n              <td>%EvalError%</td>\n              <td><code>EvalError</code></td>\n              <td>The <code>EvalError</code> constructor (<a href=\"/sec/sec-native-error-types-used-in-this-standard-evalerror.html\">19.5.5.1</a>)</td>\n            </tr>\n            <tr>\n              <td>%EvalErrorPrototype%</td>\n              <td><code>EvalError.prototype</code></td>\n              <td>The initial value of the <code>prototype</code> property of %EvalError%</td>\n            </tr>\n            <tr>\n              <td>%Float32Array%</td>\n              <td><code><a href=\"/sec/sec-float32array.html\">Float32Array</a></code></td>\n              <td>The <code><a href=\"/sec/sec-float32array.html\">Float32Array</a></code> constructor (<a href=\"/sec/sec-typedarray-objects.html\">22.2</a>)</td>\n            </tr>\n            <tr>\n              <td>%Float32ArrayPrototype%</td>\n              <td><code>Float32Array.prototype</code></td>\n              <td>The initial value of the <code>prototype</code> data property of %Float32Array%.</td>\n            </tr>\n            <tr>\n              <td>%Float64Array%</td>\n              <td><code><a href=\"/sec/sec-float64array.html\">Float64Array</a></code></td>\n              <td>The <code><a href=\"/sec/sec-float64array.html\">Float64Array</a></code> constructor (<a href=\"/sec/sec-typedarray-objects.html\">22.2</a>)</td>\n            </tr>\n            <tr>\n              <td>%Float64ArrayPrototype%</td>\n              <td><code>Float64Array.prototype</code></td>\n              <td>The initial value of the <code>prototype</code> data property of %Float64Array%</td>\n            </tr>\n            <tr>\n              <td>%Function%</td>\n              <td><code>Function</code></td>\n              <td>The <code>Function</code> constructor (<a href=\"/sec/sec-function-constructor.html\">19.2.1</a>)</td>\n            </tr>\n            <tr>\n              <td>%FunctionPrototype%</td>\n              <td><code>Function.prototype</code></td>\n              <td>The initial value of the <code>prototype</code> data property of %Function%</td>\n            </tr>\n            <tr>\n              <td>%Generator%</td>\n              <td></td>\n              <td>The initial value of the <code>prototype</code> property of %GeneratorFunction%</td>\n            </tr>\n            <tr>\n              <td>%GeneratorFunction%</td>\n              <td></td>\n              <td>The constructor of generator objects (<a href=\"/sec/sec-generatorfunction-constructor.html\">25.2.1</a>)</td>\n            </tr>\n            <tr>\n              <td>%GeneratorPrototype%</td>\n              <td></td>\n              <td>The initial value of the <code>prototype</code> property of %Generator%</td>\n            </tr>\n            <tr>\n              <td>%Int8Array%</td>\n              <td><code><a href=\"/sec/sec-int8array.html\">Int8Array</a></code></td>\n              <td>The <code><a href=\"/sec/sec-int8array.html\">Int8Array</a></code> constructor (<a href=\"/sec/sec-typedarray-objects.html\">22.2</a>)</td>\n            </tr>\n            <tr>\n              <td>%Int8ArrayPrototype%</td>\n              <td><code>Int8Array.prototype</code></td>\n              <td>The initial value of the <code>prototype</code> data property of %Int8Array%</td>\n            </tr>\n            <tr>\n              <td>%Int16Array%</td>\n              <td><code><a href=\"/sec/sec-int16array.html\">Int16Array</a></code></td>\n              <td>The <code><a href=\"/sec/sec-int16array.html\">Int16Array</a></code> constructor (<a href=\"/sec/sec-typedarray-objects.html\">22.2</a>)</td>\n            </tr>\n            <tr>\n              <td>%Int16ArrayPrototype%</td>\n              <td><code>Int16Array.prototype</code></td>\n              <td>The initial value of the <code>prototype</code> data property of %Int16Array%</td>\n            </tr>\n            <tr>\n              <td>%Int32Array%</td>\n              <td><code><a href=\"/sec/sec-int32array.html\">Int32Array</a></code></td>\n              <td>The <code><a href=\"/sec/sec-int32array.html\">Int32Array</a></code> constructor (<a href=\"/sec/sec-typedarray-objects.html\">22.2</a>)</td>\n            </tr>\n            <tr>\n              <td>%Int32ArrayPrototype%</td>\n              <td><code>Int32Array.prototype</code></td>\n              <td>The initial value of the <code>prototype</code> data property of %Int32Array%</td>\n            </tr>\n            <tr>\n              <td>%isFinite%</td>\n              <td><code>isFinite</code></td>\n              <td>The <code>isFinite</code> function (<a href=\"/sec/sec-isfinite-number.html\">18.2.2</a>)</td>\n            </tr>\n            <tr>\n              <td>%isNaN%</td>\n              <td><code>isNaN</code></td>\n              <td>The <code>isNaN</code> function (<a href=\"/sec/sec-isnan-number.html\">18.2.3</a>)</td>\n            </tr>\n            <tr>\n              <td>%IteratorPrototype%</td>\n              <td></td>\n              <td>An object that all standard built-in  iterator objects indirectly inherit from</td>\n            </tr>\n            <tr>\n              <td>%JSON%</td>\n              <td><code>JSON</code></td>\n              <td>The <code>JSON</code> object (<a href=\"/sec/sec-json-object.html\">24.3</a>)</td>\n            </tr>\n            <tr>\n              <td>%Map%</td>\n              <td><code>Map</code></td>\n              <td>The <code>Map</code> constructor (<a href=\"/sec/sec-map-constructor.html\">23.1.1</a>)</td>\n            </tr>\n            <tr>\n              <td>%MapIteratorPrototype%</td>\n              <td></td>\n              <td>The prototype of Map iterator objects (<a href=\"/sec/sec-map-iterator-objects.html\">23.1.5</a>)</td>\n            </tr>\n            <tr>\n              <td>%MapPrototype%</td>\n              <td><code>Map.prototype</code></td>\n              <td>The initial value of the <code>prototype</code> data property of %Map%</td>\n            </tr>\n            <tr>\n              <td>%Math%</td>\n              <td><code>Math</code></td>\n              <td>The <code>Math</code> object (<a href=\"/sec/sec-math-object.html\">20.2</a>)</td>\n            </tr>\n            <tr>\n              <td>%Number%</td>\n              <td><code>Number</code></td>\n              <td>The <code>Number</code> constructor (<a href=\"/sec/sec-number-constructor.html\">20.1.1</a>)</td>\n            </tr>\n            <tr>\n              <td>%NumberPrototype%</td>\n              <td><code>Number.prototype</code></td>\n              <td>The initial value of the <code>prototype</code> property of %Number%</td>\n            </tr>\n            <tr>\n              <td>%Object%</td>\n              <td><code>Object</code></td>\n              <td>The <code>Object</code> constructor (<a href=\"/sec/sec-object-constructor.html\">19.1.1</a>)</td>\n            </tr>\n            <tr>\n              <td>%ObjectPrototype%</td>\n              <td><code>Object.prototype</code></td>\n              <td>The initial value of the <code>prototype</code> data property of %Object%. (<a href=\"/sec/sec-properties-of-the-object-prototype-object.html\">19.1.3</a>)</td>\n            </tr>\n            <tr>\n              <td>%ObjProto_toString%</td>\n              <td><code>Object.prototype.<br>toString</code></td>\n              <td>The initial value of the <code>toString</code> data property of %ObjectPrototype% (<a href=\"/sec/sec-object.prototype.tostring.html\">19.1.3.6</a>)</td>\n            </tr>\n            <tr>\n              <td>%parseFloat%</td>\n              <td><code>parseFloat</code></td>\n              <td>The <code>parseFloat</code> function (<a href=\"/sec/sec-parsefloat-string.html\">18.2.4</a>)</td>\n            </tr>\n            <tr>\n              <td>%parseInt%</td>\n              <td><code>parseInt</code></td>\n              <td>The <code>parseInt</code> function (<a href=\"/sec/sec-parseint-string-radix.html\">18.2.5</a>)</td>\n            </tr>\n            <tr>\n              <td>%Promise%</td>\n              <td><code>Promise</code></td>\n              <td>The <code>Promise</code> constructor (<a href=\"/sec/sec-promise-constructor.html\">25.4.3</a>)</td>\n            </tr>\n            <tr>\n              <td>%PromisePrototype%</td>\n              <td><code>Promise.prototype</code></td>\n              <td>The initial value of the <code>prototype</code> data property of %Promise%</td>\n            </tr>\n            <tr>\n              <td>%Proxy%</td>\n              <td><code>Proxy</code></td>\n              <td>The <code>Proxy</code> constructor (<a href=\"/sec/sec-proxy-constructor.html\">26.2.1</a>)</td>\n            </tr>\n            <tr>\n              <td>%RangeError%</td>\n              <td><code>RangeError</code></td>\n              <td>The <code>RangeError</code> constructor (<a href=\"/sec/sec-native-error-types-used-in-this-standard-rangeerror.html\">19.5.5.2</a>)</td>\n            </tr>\n            <tr>\n              <td>%RangeErrorPrototype%</td>\n              <td><code>RangeError.prototype</code></td>\n              <td>The initial value of the <code>prototype</code> property of %RangeError%</td>\n            </tr>\n            <tr>\n              <td>%ReferenceError%</td>\n              <td><code>ReferenceError</code></td>\n              <td>The <code>ReferenceError</code> constructor (<a href=\"/sec/sec-native-error-types-used-in-this-standard-referenceerror.html\">19.5.5.3</a>)</td>\n            </tr>\n            <tr>\n              <td>%ReferenceErrorPrototype%</td>\n              <td><code>ReferenceError.<br>prototype</code></td>\n              <td>The initial value of the <code>prototype</code> property of %ReferenceError%</td>\n            </tr>\n            <tr>\n              <td>%Reflect%</td>\n              <td><code>Reflect</code></td>\n              <td>The <code>Reflect</code> object (<a href=\"/sec/sec-reflect-object.html\">26.1</a>)</td>\n            </tr>\n            <tr>\n              <td>%RegExp%</td>\n              <td><code>RegExp</code></td>\n              <td>The <code>RegExp</code> constructor (<a href=\"/sec/sec-regexp-constructor.html\">21.2.3</a>)</td>\n            </tr>\n            <tr>\n              <td>%RegExpPrototype%</td>\n              <td><code><a href=\"/sec/sec-regexp.prototype.html\">RegExp.prototype</a></code></td>\n              <td>The initial value of the <code>prototype</code> data property of %RegExp%</td>\n            </tr>\n            <tr>\n              <td>%Set%</td>\n              <td><code>Set</code></td>\n              <td>The <code>Set</code> constructor (<a href=\"/sec/sec-set-constructor.html\">23.2.1</a>)</td>\n            </tr>\n            <tr>\n              <td>%SetIteratorPrototype%</td>\n              <td></td>\n              <td>The prototype of Set iterator objects (<a href=\"/sec/sec-set-iterator-objects.html\">23.2.5</a>)</td>\n            </tr>\n            <tr>\n              <td>%SetPrototype%</td>\n              <td><code>Set.prototype</code></td>\n              <td>The initial value of the <code>prototype</code> data property of %Set%</td>\n            </tr>\n            <tr>\n              <td>%String%</td>\n              <td><code>String</code></td>\n              <td>The <code>String</code> constructor (<a href=\"/sec/sec-string-constructor.html\">21.1.1</a>)</td>\n            </tr>\n            <tr>\n              <td>%StringIteratorPrototype%</td>\n              <td></td>\n              <td>The prototype of String iterator objects (<a href=\"/sec/sec-string-iterator-objects.html\">21.1.5</a>)</td>\n            </tr>\n            <tr>\n              <td>%StringPrototype%</td>\n              <td><code>String.prototype</code></td>\n              <td>The initial value of the <code>prototype</code> data property of %String%</td>\n            </tr>\n            <tr>\n              <td>%Symbol%</td>\n              <td><code>Symbol</code></td>\n              <td>The <code>Symbol</code> constructor (<a href=\"/sec/sec-symbol-constructor.html\">19.4.1</a>)</td>\n            </tr>\n            <tr>\n              <td>%SymbolPrototype%</td>\n              <td><code>Symbol.prototype</code></td>\n              <td>The initial value of the <code>prototype</code> data property of %Symbol%. (<a href=\"/sec/sec-properties-of-the-symbol-prototype-object.html\">19.4.3</a>)</td>\n            </tr>\n            <tr>\n              <td>%SyntaxError%</td>\n              <td><code>SyntaxError</code></td>\n              <td>The <code>SyntaxError</code> constructor (<a href=\"/sec/sec-native-error-types-used-in-this-standard-syntaxerror.html\">19.5.5.4</a>)</td>\n            </tr>\n            <tr>\n              <td>%SyntaxErrorPrototype%</td>\n              <td><code>SyntaxError.prototype</code></td>\n              <td>The initial value of the <code>prototype</code> property of %SyntaxError%</td>\n            </tr>\n            <tr>\n              <td><a href=\"/sec/sec-%throwtypeerror%.html\">%ThrowTypeError%</a></td>\n              <td></td>\n              <td>A function object that unconditionally throws a new instance of %TypeError%</td>\n            </tr>\n            <tr>\n              <td>%TypedArray%</td>\n              <td></td>\n              <td>The super class of all typed Array  constructors (<a href=\"/sec/sec-%typedarray%-intrinsic-object.html\">22.2.1</a>)</td>\n            </tr>\n            <tr>\n              <td>%TypedArrayPrototype%</td>\n              <td></td>\n              <td>The initial value of the <code>prototype</code> property of %TypedArray%</td>\n            </tr>\n            <tr>\n              <td>%TypeError%</td>\n              <td><code>TypeError</code></td>\n              <td>The <code>TypeError</code> constructor (<a href=\"/sec/sec-native-error-types-used-in-this-standard-typeerror.html\">19.5.5.5</a>)</td>\n            </tr>\n            <tr>\n              <td>%TypeErrorPrototype%</td>\n              <td><code>TypeError.prototype</code></td>\n              <td>The initial value of the <code>prototype</code> property of %TypeError%</td>\n            </tr>\n            <tr>\n              <td>%Uint8Array%</td>\n              <td><code><a href=\"/sec/sec-uint8array.html\">Uint8Array</a></code></td>\n              <td>The <code><a href=\"/sec/sec-uint8array.html\">Uint8Array</a></code> constructor (<a href=\"/sec/sec-typedarray-objects.html\">22.2</a>)</td>\n            </tr>\n            <tr>\n              <td>%Uint8ArrayPrototype%</td>\n              <td><code>Uint8Array.prototype</code></td>\n              <td>The initial value of the <code>prototype</code> data property of %Uint8Array%</td>\n            </tr>\n            <tr>\n              <td>%Uint8ClampedArray%</td>\n              <td><code><a href=\"/sec/sec-uint8clampedarray.html\">Uint8ClampedArray</a></code></td>\n              <td>The <code><a href=\"/sec/sec-uint8clampedarray.html\">Uint8ClampedArray</a></code> constructor (<a href=\"/sec/sec-typedarray-objects.html\">22.2</a>)</td>\n            </tr>\n            <tr>\n              <td>%Uint8ClampedArrayPrototype%</td>\n              <td><code><a href=\"/sec/sec-uint8clampedarray.html\">Uint8ClampedArray</a>.<br>prototype</code></td>\n              <td>The initial value of the <code>prototype</code> data property of %Uint8ClampedArray%</td>\n            </tr>\n            <tr>\n              <td>%Uint16Array%</td>\n              <td><code><a href=\"/sec/sec-uint16array.html\">Uint16Array</a></code></td>\n              <td>The <code><a href=\"/sec/sec-uint16array.html\">Uint16Array</a></code> constructor (<a href=\"/sec/sec-typedarray-objects.html\">22.2</a>)</td>\n            </tr>\n            <tr>\n              <td>%Uint16ArrayPrototype%</td>\n              <td><code>Uint16Array.prototype</code></td>\n              <td>The initial value of the <code>prototype</code> data property of %Uint16Array%</td>\n            </tr>\n            <tr>\n              <td>%Uint32Array%</td>\n              <td><code><a href=\"/sec/sec-uint32array.html\">Uint32Array</a></code></td>\n              <td>The <code><a href=\"/sec/sec-uint32array.html\">Uint32Array</a></code> constructor (<a href=\"/sec/sec-typedarray-objects.html\">22.2</a>)</td>\n            </tr>\n            <tr>\n              <td>%Uint32ArrayPrototype%</td>\n              <td><code>Uint32Array.prototype</code></td>\n              <td>The initial value of the <code>prototype</code> data property of %Uint32Array%</td>\n            </tr>\n            <tr>\n              <td>%URIError%</td>\n              <td><code><a href=\"/sec/sec-constructor-properties-of-the-global-object-urierror.html\">URIError</a></code></td>\n              <td>The <code><a href=\"/sec/sec-constructor-properties-of-the-global-object-urierror.html\">URIError</a></code> constructor (<a href=\"/sec/sec-native-error-types-used-in-this-standard-urierror.html\">19.5.5.6</a>)</td>\n            </tr>\n            <tr>\n              <td>%URIErrorPrototype%</td>\n              <td><code>URIError.prototype</code></td>\n              <td>The initial value of the <code>prototype</code> property of %URIError%</td>\n            </tr>\n            <tr>\n              <td>%WeakMap%</td>\n              <td><code>WeakMap</code></td>\n              <td>The <code>WeakMap</code> constructor (<a href=\"/sec/sec-weakmap-constructor.html\">23.3.1</a>)</td>\n            </tr>\n            <tr>\n              <td>%WeakMapPrototype%</td>\n              <td><code><a href=\"/sec/sec-weakmap.prototype.html\">WeakMap.prototype</a></code></td>\n              <td>The initial value of the <code>prototype</code> data property of %WeakMap%</td>\n            </tr>\n            <tr>\n              <td>%WeakSet%</td>\n              <td><code>WeakSet</code></td>\n              <td>The <code>WeakSet</code> constructor (<a href=\"/sec/sec-weakset-constructor.html\">23.4.1</a>)</td>\n            </tr>\n            <tr>\n              <td>%WeakSetPrototype%</td>\n              <td><code><a href=\"/sec/sec-weakset.prototype.html\">WeakSet.prototype</a></code></td>\n              <td>The initial value of the <code>prototype</code> data property of %WeakSet%</td>\n            </tr>\n          </table>\n        </figure>\n      </section>\n    </section>\n  "}