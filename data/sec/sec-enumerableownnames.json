{"id":"sec-enumerableownnames","html":"\n      <h1><span class=\"secnum\" id=\"sec-7.3.21\"><a href=\"/sec/sec-enumerableownnames.html\" title=\"link to this section\">7.3.21</a></span>\n          EnumerableOwnNames (O)</h1>\n\n      <p class=\"normalbefore\">When the abstract operation EnumerableOwnNames is called with Object <var>O</var> the following\n      steps are taken:</p>\n\n      <ol class=\"proc\">\n        <li><a href=\"/sec/sec-algorithm-conventions.html\">Assert</a>:  <a href=\"/sec/sec-ecmascript-data-types-and-values.html\">Type</a>(<i>O</i>)\n            is Object.</li>\n        <li>Let <i>ownKeys</i> be <i>O</i>.[[OwnPropertyKeys]]().</li>\n        <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>ownKeys</i>).</li>\n        <li>Let <i>names</i> be a new empty <a href=\"/sec/sec-list-and-record-specification-type.html\">List</a>.</li>\n        <li>Repeat, for each element <i>key</i> of <i>ownKeys</i> in <a href=\"/sec/sec-list-and-record-specification-type.html\">List</a>\n            order\n          <ol class=\"block\">\n            <li>If <a href=\"/sec/sec-ecmascript-data-types-and-values.html\">Type</a>(<i>key</i>) is String, then\n              <ol class=\"block\">\n                <li>Let <i>desc</i> be <i>O</i>.[[GetOwnProperty]](<i>key</i>).</li>\n                <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>desc</i>).</li>\n                <li>If <i>desc</i> is not <b>undefined</b>, then\n                  <ol class=\"block\">\n                    <li>If <i>desc.</i>[[Enumerable]] is <b>true</b>, append <i>key</i> to <i>names</i>.</li>\n                  </ol>\n                </li>\n              </ol>\n            </li>\n          </ol>\n        </li>\n        <li>Order the elements of <i>names</i> so they are in the same relative order as would be produced by the Iterator that\n            would be returned if the [[Enumerate]] internal method was invoked on <i>O</i>.</li>\n        <li>Return <i>names</i>.</li>\n      </ol>\n\n      <div class=\"note\">\n        <p><span class=\"nh\">NOTE</span> The order of elements in the returned list is the same as the enumeration order that is\n        used by a for-in statement.</p>\n      </div>\n    "}