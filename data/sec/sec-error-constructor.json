{"id":"sec-error-constructor","html":"\n      <div class=\"front\">\n        <h1><span class=\"secnum\" id=\"sec-19.5.1\"><a href=\"/sec/sec-error-constructor.html\" title=\"link to this section\">19.5.1</a></span>\n            The Error Constructor</h1>\n\n        <p>The Error constructor is the %Error% intrinsic object and the initial value of the <code>Error</code> property of the\n        global object. When <code>Error</code> is called as a function rather than as a constructor, it creates and initializes a\n        new Error object. Thus the function call <code><b>Error(</b>&#x2026;<b>)</b></code> is equivalent to the object creation\n        expression <code><b>new Error(</b>&#x2026;<b>)</b></code> with the same arguments.</p>\n\n        <p>The <code>Error</code> constructor is designed to be subclassable. It may be used as the value of an\n        <code>extends</code> clause of a class definition. Subclass constructors that intend to inherit the specified\n        <code>Error</code> behaviour must include a <code>super</code> call to the <code>Error</code> constructor to create and\n        initialize subclass instances with a [[ErrorData]] <a href=\"/sec/sec-object-internal-methods-and-internal-slots.html\">internal\n        slot</a>.</p>\n      </div>\n\n      <section id=\"sec-error-message\">\n        <h1><span class=\"secnum\" id=\"sec-19.5.1.1\"><a href=\"/sec/sec-error-message.html\" title=\"link to this section\">19.5.1.1</a></span>\n            Error ( message )</h1>\n\n        <p class=\"normalbefore\">When the <code>Error</code> function is called with argument <i>message</i> the following steps\n        are taken:</p>\n\n        <ol class=\"proc\">\n          <li>If NewTarget is <b>undefined</b><i>,</i> let <i>newTarget</i> be the active function object, else let\n              <i>newTarget</i> be NewTarget.</li>\n          <li>Let <i>O</i> be <a href=\"/sec/sec-ordinarycreatefromconstructor.html\">OrdinaryCreateFromConstructor</a>(<i>newTarget</i>,\n              <code>&quot;%ErrorPrototype%&quot;</code>, &#xAB;[[ErrorData]]&#xBB;).</li>\n          <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>O</i>).</li>\n          <li>If <i>message</i> is not <b>undefined</b>, then\n            <ol class=\"block\">\n              <li>Let <i>msg</i> be <a href=\"/sec/sec-tostring.html\">ToString</a>(<i>message</i>).</li>\n              <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>msg</i>).</li>\n              <li>Let <i>msgDesc</i> be the PropertyDescriptor{[[Value]]: <i>msg</i>, [[Writable]]: <b>true</b>, [[Enumerable]]:\n                  <b>false</b>, [[Configurable]]: <b>true</b>}.</li>\n              <li>Let <i>status</i> be <a href=\"/sec/sec-definepropertyorthrow.html\">DefinePropertyOrThrow</a>(<i>O</i>,\n                  &quot;<code>message</code>&quot;, <i>msgDesc</i>).</li>\n              <li><a href=\"/sec/sec-algorithm-conventions.html\">Assert</a>: <i>status</i> is not an <a href=\"/sec/sec-completion-record-specification-type.html\">abrupt completion</a>.</li>\n            </ol>\n          </li>\n          <li>Return <i>O</i>.</li>\n        </ol>\n      </section>\n    "}