{"id":"sec-evaluatedirectcall","html":"\n        <h1><span class=\"secnum\" id=\"sec-12.3.4.3\"><a href=\"/sec/sec-evaluatedirectcall.html\" title=\"link to this section\">12.3.4.3</a></span> Runtime Semantics: EvaluateDirectCall( func, thisValue, arguments,\n            tailPosition )</h1>\n\n        <p class=\"normalbefore\">The abstract operation EvaluateDirectCall takes as arguments a value <var>func</var>, a value\n        <var>thisValue</var>, a syntactic grammar production <var>arguments</var>, and a Boolean argument <var>tailPosition</var>.\n        It performs the following steps:</p>\n\n        <ol class=\"proc\">\n          <li>Let <i>argList</i> be ArgumentListEvaluation(<i>arguments</i>).</li>\n          <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>argList</i>).</li>\n          <li>If <a href=\"/sec/sec-ecmascript-data-types-and-values.html\">Type</a>(<i>func</i>) is not Object, throw a <b>TypeError</b>\n              exception.</li>\n          <li>If <a href=\"/sec/sec-iscallable.html\">IsCallable</a>(<i>func</i>) is <b>false</b>, throw a <b>TypeError</b> exception.</li>\n          <li>If <i>tailPosition</i> is <b>true</b>, perform <a href=\"/sec/sec-preparefortailcall.html\">PrepareForTailCall</a>().</li>\n          <li>Let <i>result</i> be <a href=\"/sec/sec-call.html\">Call</a>(<i>func</i>, <i>thisValue</i>, <i>argList</i>).</li>\n          <li><a href=\"/sec/sec-algorithm-conventions.html\">Assert</a>: If <i>tailPosition</i> is <b>true</b>, the above call will not\n              return here, but instead evaluation will continue as if the following return has already occurred.</li>\n          <li><a href=\"/sec/sec-algorithm-conventions.html\">Assert</a>: If <i>result</i> is not an <a href=\"/sec/sec-completion-record-specification-type.html\">abrupt completion</a> then <a href=\"/sec/sec-ecmascript-data-types-and-values.html\">Type</a>(<i>result</i>) is an <a href=\"/sec/sec-ecmascript-language-types.html\">ECMAScript language type</a>.</li>\n          <li>Return <i>result</i>.</li>\n        </ol>\n      "}