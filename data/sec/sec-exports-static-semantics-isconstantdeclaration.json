{"id":"sec-exports-static-semantics-isconstantdeclaration","html":"\n        <h1><span class=\"secnum\" id=\"sec-15.2.3.7\"><a href=\"/sec/sec-exports-static-semantics-isconstantdeclaration.html\" title=\"link to this section\">15.2.3.7</a></span> Static Semantics:  IsConstantDeclaration</h1>\n\n        <p>See also: <a href=\"/sec/sec-let-and-const-declarations-static-semantics-isconstantdeclaration.html\">13.3.1.3</a>, <a href=\"/sec/sec-function-definitions-static-semantics-isconstantdeclaration.html\">14.1.10</a>, <a href=\"/sec/sec-generator-function-definitions-static-semantics-isconstantdeclaration.html\">14.4.8</a>, <a href=\"/sec/sec-class-definitions-static-semantics-isconstantdeclaration.html\">14.5.7</a>.</p>\n\n        <div class=\"gp\">\n          <div class=\"lhs\"><span class=\"nt\">ExportDeclaration</span> <span class=\"geq\">:</span></div>\n          <div class=\"rhs\"><code class=\"t\">export</code> <code class=\"t\">*</code> <span class=\"nt\">FromClause</span> <code class=\"t\">;</code></div>\n          <div class=\"rhs\"><code class=\"t\">export</code> <span class=\"nt\">ExportClause</span> <span class=\"nt\">FromClause</span> <code class=\"t\">;</code></div>\n          <div class=\"rhs\"><code class=\"t\">export</code> <span class=\"nt\">ExportClause</span> <code class=\"t\">;</code></div>\n          <div class=\"rhs\"><code class=\"t\">export</code> <code class=\"t\">default</code> <span class=\"nt\">AssignmentExpression</span> <code class=\"t\">;</code></div>\n        </div>\n\n        <ol class=\"proc\">\n          <li>Return <b>false</b>.</li>\n        </ol>\n\n        <div class=\"note\">\n          <p><span class=\"nh\">NOTE</span> It is not necessary to treat <code>export</code> <code>default</code> <span class=\"nt\">AssignmentExpression</span> as a constant declaration because there is no syntax that permits assignment to\n          the internal bound name used to reference a module&#x2019;s default object.</p>\n        </div>\n      "}