{"id":"sec-for-in-and-for-of-statements-static-semantics-early-errors","html":"\n        <h1><span class=\"secnum\" id=\"sec-13.7.5.1\"><a href=\"/sec/sec-for-in-and-for-of-statements-static-semantics-early-errors.html\" title=\"link to this section\">13.7.5.1</a></span> Static Semantics:  Early Errors</h1>\n\n        <div class=\"gp\">\n          <div class=\"lhs\"><span class=\"nt\">IterationStatement</span> <span class=\"geq\">:</span></div>\n          <div class=\"rhs\"><code class=\"t\">for</code> <code class=\"t\">(</code> <span class=\"nt\">LeftHandSideExpression</span> <code class=\"t\">in</code> <span class=\"nt\">Expression</span> <code class=\"t\">)</code> <span class=\"nt\">Statement</span></div>\n          <div class=\"rhs\"><code class=\"t\">for</code> <code class=\"t\">(</code> <span class=\"nt\">LeftHandSideExpression</span> <code class=\"t\">of</code> <span class=\"nt\">AssignmentExpression</span> <code class=\"t\">)</code> <span class=\"nt\">Statement</span></div>\n        </div>\n\n        <ul>\n          <li>\n            <p>It is a Syntax Error if <span class=\"nt\">LeftHandSideExpression</span> is either an <span class=\"nt\">ObjectLiteral</span> or an <span class=\"nt\">ArrayLiteral</span> and if the lexical token sequence matched\n            by <span class=\"nt\">LeftHandSideExpression</span> cannot be parsed with no tokens left over using <span class=\"nt\">AssignmentPattern</span> as the goal symbol.</p>\n          </li>\n        </ul>\n\n        <p>If <span class=\"nt\">LeftHandSideExpression</span> is either an <span class=\"nt\">ObjectLiteral</span> or an <span class=\"nt\">ArrayLiteral</span> and if the lexical token sequence matched by <span class=\"nt\">LeftHandSideExpression</span>\n        can be parsed with no tokens left over using <span class=\"nt\">AssignmentPattern</span> as the goal symbol then the\n        following rules are not applied. Instead, the Early Error rules for <span class=\"nt\">AssignmentPattern</span> are\n        used.</p>\n\n        <ul>\n          <li>\n            <p>It is a Syntax Error if <span style=\"font-family: Times New Roman\">IsValidSimpleAssignmentTarget</span> of <span class=\"nt\">LeftHandSideExpression</span> is <span class=\"value\">false</span>.</p>\n          </li>\n\n          <li>\n            <p>It is a Syntax Error if the <span class=\"nt\">LeftHandSideExpression</span> is                    <span class=\"prod\"><span class=\"nt\">CoverParenthesizedExpressionAndArrowParameterList</span> <span class=\"geq\">:</span>\n            <code class=\"t\">(</code> <span class=\"nt\">Expression</span> <code class=\"t\">)</code></span> and <span class=\"nt\">Expression</span> derives a production that would produce a Syntax Error according to these rules if that\n            production is substituted for <span class=\"nt\">LeftHandSideExpression</span>. This rule is recursively applied.</p>\n          </li>\n        </ul>\n\n        <div class=\"note\">\n          <p><span class=\"nh\">NOTE</span> The last rule means that the other rules are applied even if parentheses surround <span class=\"nt\">Expression</span>.</p>\n        </div>\n\n        <div class=\"gp\">\n          <div class=\"lhs\"><span class=\"nt\">IterationStatement</span> <span class=\"geq\">:</span></div>\n          <div class=\"rhs\"><code class=\"t\">for</code> <code class=\"t\">(</code> <span class=\"nt\">ForDeclaration</span> <code class=\"t\">in</code> <span class=\"nt\">Expression</span> <code class=\"t\">)</code> <span class=\"nt\">Statement</span></div>\n          <div class=\"rhs\"><code class=\"t\">for</code> <code class=\"t\">(</code> <span class=\"nt\">ForDeclaration</span> <code class=\"t\">of</code> <span class=\"nt\">AssignmentExpression</span> <code class=\"t\">)</code> <span class=\"nt\">Statement</span></div>\n        </div>\n\n        <ul>\n          <li>\n            <p>It is a Syntax Error if the BoundNames of <span class=\"nt\">ForDeclaration</span> contains <code>&quot;let&quot;</code>.</p>\n          </li>\n\n          <li>\n            <p>It is a Syntax Error if any element of the BoundNames of <span class=\"nt\">ForDeclaration</span> also occurs in the\n            VarDeclaredNames of <span class=\"nt\">Statement</span>.</p>\n          </li>\n\n          <li>\n            <p>It is a Syntax Error if the BoundNames of <span class=\"nt\">ForDeclaration</span> contains any duplicate\n            entries.</p>\n          </li>\n        </ul>\n      "}