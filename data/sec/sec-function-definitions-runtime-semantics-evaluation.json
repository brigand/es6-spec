{"id":"sec-function-definitions-runtime-semantics-evaluation","html":"\n      <h1><span class=\"secnum\" id=\"sec-14.1.20\"><a href=\"/sec/sec-function-definitions-runtime-semantics-evaluation.html\" title=\"link to this section\">14.1.20</a></span> Runtime Semantics: Evaluation</h1>\n      <div class=\"gp prod\"><span class=\"nt\">FunctionDeclaration</span> <span class=\"geq\">:</span> <code class=\"t\">function</code> <span class=\"nt\">BindingIdentifier</span> <code class=\"t\">(</code> <span class=\"nt\">FormalParameters</span> <code class=\"t\">)</code> <code class=\"t\">{</code> <span class=\"nt\">FunctionBody</span> <code class=\"t\">}</code></div>\n      <ol class=\"proc\">\n        <li>Return <a href=\"/sec/sec-normalcompletion.html\">NormalCompletion</a>(<span style=\"font-family: sans-serif\">empty</span>).</li>\n      </ol>\n\n      <div class=\"note\">\n        <p><span class=\"nh\">NOTE 1</span> An alternative semantics is provided in <a href=\"/sec/sec-block-level-function-declarations-web-legacy-compatibility-semantics.html\">B.3.3</a>.</p>\n      </div>\n\n      <div class=\"gp prod\"><span class=\"nt\">FunctionDeclaration</span> <span class=\"geq\">:</span> <code class=\"t\">function</code> <code class=\"t\">(</code> <span class=\"nt\">FormalParameters</span> <code class=\"t\">)</code> <code class=\"t\">{</code> <span class=\"nt\">FunctionBody</span> <code class=\"t\">}</code></div>\n      <ol class=\"proc\">\n        <li>Return <a href=\"/sec/sec-normalcompletion.html\">NormalCompletion</a>(<span style=\"font-family: sans-serif\">empty</span>).</li>\n      </ol>\n      <div class=\"gp prod\"><span class=\"nt\">FunctionExpression</span> <span class=\"geq\">:</span> <code class=\"t\">function</code> <code class=\"t\">(</code> <span class=\"nt\">FormalParameters</span> <code class=\"t\">)</code> <code class=\"t\">{</code> <span class=\"nt\">FunctionBody</span> <code class=\"t\">}</code></div>\n      <ol class=\"proc\">\n        <li>If the function code for <i>FunctionExpression</i> is <a href=\"/sec/sec-strict-mode-code.html\">strict mode code</a>, let\n            <i>strict</i> be <b>true</b>. Otherwise let <i>strict</i> be <b>false</b>.</li>\n        <li>Let <i>scope</i> be the <a href=\"/sec/sec-execution-contexts.html\">LexicalEnvironment</a> of <a href=\"/sec/sec-execution-contexts.html\">the running execution context</a>.</li>\n        <li>Let <i>closure</i> be <a href=\"/sec/sec-functioncreate.html\">FunctionCreate</a>(<span style=\"font-family:\n            sans-serif\">Normal</span>, <i>FormalParameters</i>, <i>FunctionBody, scope</i>, <i>strict</i>).</li>\n        <li>Perform <a href=\"/sec/sec-makeconstructor.html\">MakeConstructor</a>(<i>closure</i>).</li>\n        <li>Return <i>closure</i>.</li>\n      </ol>\n      <div class=\"gp prod\"><span class=\"nt\">FunctionExpression</span> <span class=\"geq\">:</span> <code class=\"t\">function</code> <span class=\"nt\">BindingIdentifier</span> <code class=\"t\">(</code> <span class=\"nt\">FormalParameters</span> <code class=\"t\">)</code> <code class=\"t\">{</code> <span class=\"nt\">FunctionBody</span> <code class=\"t\">}</code></div>\n      <ol class=\"proc\">\n        <li>If the function code for <i>FunctionExpression</i> is <a href=\"/sec/sec-strict-mode-code.html\">strict mode code</a>, let\n            <i>strict</i> be <b>true</b>. Otherwise let <i>strict</i> be <b>false</b>.</li>\n        <li>Let <i>runningContext</i> be <a href=\"/sec/sec-execution-contexts.html\">the running execution context</a>&#x2019;s <a href=\"/sec/sec-lexical-environments.html\">Lexical Environment</a>.</li>\n        <li>Let <i>funcEnv</i> be <a href=\"/sec/sec-newdeclarativeenvironment.html\">NewDeclarativeEnvironment</a>(<i>runningContext</i>\n            ).</li>\n        <li>Let <i>envRec</i> be <i>funcEnv&#x2019;s</i> <a href=\"/sec/sec-lexical-environments.html\">EnvironmentRecord</a>.</li>\n        <li>Let <i>name</i> be StringValue of <i>BindingIdentifier</i>.</li>\n        <li>Perform <i>envRec.</i>CreateImmutableBinding(<i>name</i>).</li>\n        <li>Let <i>closure</i> be <a href=\"/sec/sec-functioncreate.html\">FunctionCreate</a>(<span style=\"font-family:\n            sans-serif\">Normal</span>, <i>FormalParameters</i>, <i>FunctionBody, funcEnv</i>, <i>strict</i>).</li>\n        <li>Perform <a href=\"/sec/sec-makeconstructor.html\">MakeConstructor</a>(<i>closure</i>).</li>\n        <li>Perform <a href=\"/sec/sec-setfunctionname.html\">SetFunctionName</a>(<i>closure</i>, <i>name</i>).</li>\n        <li>Perform <i>envRec</i>.InitializeBinding(<i>name,</i> <i>closure</i>).</li>\n        <li>Return <a href=\"/sec/sec-normalcompletion.html\">NormalCompletion</a>(<i>closure</i>).</li>\n      </ol>\n\n      <div class=\"note\">\n        <p><span class=\"nh\">NOTE 2</span> The <span class=\"nt\">BindingIdentifier</span> in a <span class=\"nt\">FunctionExpression</span> can be referenced from inside the <var>FunctionExpression&apos;s</var> <span class=\"nt\">FunctionBody</span> to allow the function to call itself recursively. However, unlike in a <span class=\"nt\">FunctionDeclaration</span>, the <span class=\"nt\">BindingIdentifier</span> in a <span class=\"nt\">FunctionExpression</span> cannot be referenced from and does not affect the scope enclosing the <span class=\"nt\">FunctionExpression</span>.</p>\n      </div>\n\n      <div class=\"note\">\n        <p><span class=\"nh\">NOTE 3</span> A <code>prototype</code> property is automatically created for every function defined\n        using a <span class=\"nt\">FunctionDeclaration</span> or <span class=\"nt\">FunctionExpression</span>, to allow for the\n        possibility that the function will be used as a constructor.</p>\n      </div>\n\n      <div class=\"gp prod\"><span class=\"nt\">FunctionStatementList</span> <span class=\"geq\">:</span> <span class=\"grhsannot\">[empty]</span></div>\n      <ol class=\"proc\">\n        <li>Return <a href=\"/sec/sec-normalcompletion.html\">NormalCompletion</a>(<b>undefined</b>).</li>\n      </ol>\n    "}