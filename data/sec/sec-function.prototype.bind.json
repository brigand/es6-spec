{"id":"sec-function.prototype.bind","html":"\n        <h1><span class=\"secnum\" id=\"sec-19.2.3.2\"><a href=\"/sec/sec-function.prototype.bind.html\" title=\"link to this section\">19.2.3.2</a></span> Function.prototype.bind ( thisArg , ...args)</h1>\n\n        <p class=\"normalbefore\">When the <code>bind</code> method is called with argument <var>thisArg</var> and zero or more\n        <var>args</var>, it performs the following steps:</p>\n\n        <ol class=\"proc\">\n          <li>Let <i>Target</i> be the <b>this</b> value.</li>\n          <li>If <a href=\"/sec/sec-iscallable.html\">IsCallable</a>(<i>Target</i>) is <b>false</b>, throw a <b>TypeError</b> exception.</li>\n          <li>Let <i>args</i> be a new (possibly empty) <a href=\"/sec/sec-list-and-record-specification-type.html\">List</a> consisting of\n              all of the argument values provided after <i>thisArg</i>  in order.</li>\n          <li>Let <i>F</i> be <a href=\"/sec/sec-boundfunctioncreate.html\">BoundFunctionCreate</a>(<i>Target</i>, <i>thisArg</i>,\n              <i>args</i>).</li>\n          <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>F</i>).</li>\n          <li>Let <i>targetHasLength</i> be <a href=\"/sec/sec-hasownproperty.html\">HasOwnProperty</a>(<i>Target</i>,\n              <code>&quot;length&quot;</code>).</li>\n          <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>targetHasLength</i>).</li>\n          <li>If <i>targetHasLength</i> is <b>true</b>, then\n            <ol class=\"block\">\n              <li>Let <i>targetLen</i> be <a href=\"/sec/sec-get-o-p.html\">Get</a>(<i>Target</i>, <code>&quot;length&quot;</code>).</li>\n              <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>targetLen</i>).</li>\n              <li>If <a href=\"/sec/sec-ecmascript-data-types-and-values.html\">Type</a>(<i>targetLen</i>) is not Number, let <i>L</i> be\n                  0.</li>\n              <li>Else,\n                <ol class=\"block\">\n                  <li>Let <i>targetLen</i> be <a href=\"/sec/sec-tointeger.html\">ToInteger</a>(<i>targetLen</i>).</li>\n                  <li>Let <i>L</i> be the larger of 0 and the result of <i>targetLen</i> minus the number of elements of\n                      <i>args</i>.</li>\n                </ol>\n              </li>\n            </ol>\n          </li>\n          <li>Else let <i>L</i> be 0.</li>\n          <li>Let <i>status</i> be <a href=\"/sec/sec-definepropertyorthrow.html\">DefinePropertyOrThrow</a>(<i>F</i>, <code>&quot;length&quot;</code>,\n              PropertyDescriptor {[[Value]]: <i>L</i>, [[Writable]]: <b>false</b>, [[Enumerable]]: <b>false</b>, [[Configurable]]:\n              <b>true</b>}).</li>\n          <li><a href=\"/sec/sec-algorithm-conventions.html\">Assert</a>: <i>status</i> is not an <a href=\"/sec/sec-completion-record-specification-type.html\">abrupt completion</a>.</li>\n          <li>Let <i>targetName</i> be <a href=\"/sec/sec-get-o-p.html\">Get</a>(<i>Target</i>, <code>&quot;name&quot;</code>).</li>\n          <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>targetName</i>).</li>\n          <li>If <a href=\"/sec/sec-ecmascript-data-types-and-values.html\">Type</a>(<i>targetName</i>) is not String, let <i>targetName</i>\n              be the empty string.</li>\n          <li>Perform <a href=\"/sec/sec-setfunctionname.html\">SetFunctionName</a>(<i>F</i>, <i>targetName</i>, <code>&quot;bound&quot;</code>).</li>\n          <li>Return <i>F</i>.</li>\n        </ol>\n\n        <p>The <code>length</code> property of the <code>bind</code> method is <b>1</b>.</p>\n\n        <div class=\"note\">\n          <p><span class=\"nh\">NOTE 1</span> Function objects created using <code>Function.prototype.bind</code> are exotic\n          objects. They also do not have a <code>prototype</code> property.</p>\n        </div>\n\n        <div class=\"note\">\n          <p><span class=\"nh\">NOTE 2</span> If <span class=\"nt\">Target</span> is an arrow function or a <a href=\"/sec/sec-bound-function-exotic-objects.html\">bound function</a> then the <var>thisArg</var> passed to this method will not\n          be used by subsequent calls to <var>F</var>.</p>\n        </div>\n      "}