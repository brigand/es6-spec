{"id":"sec-function.prototype.tostring","html":"\n        <h1><span class=\"secnum\" id=\"sec-19.2.3.5\"><a href=\"/sec/sec-function.prototype.tostring.html\" title=\"link to this section\">19.2.3.5</a></span> Function.prototype.toString ( )</h1>\n\n        <p class=\"normalbefore\">When the <code>toString</code> method is called on an object <var>func</var> the following steps\n        are taken:</p>\n\n        <ol class=\"proc\">\n          <li>If <i>func</i> is a <a href=\"/sec/sec-bound-function-exotic-objects.html\">Bound Function</a> exotic object, then\n            <ol class=\"block\">\n              <li>Return an implementation-dependent String source code representation of <i>func</i>. The representation must\n                  conform to the rules below. It is implementation dependent whether the representation includes <a href=\"/sec/sec-bound-function-exotic-objects.html\">bound function</a> information or information about the target\n                  function.</li>\n            </ol>\n          </li>\n          <li>If <a href=\"/sec/sec-ecmascript-data-types-and-values.html\">Type</a>(<i>func</i>) is Object and is either a built-in function\n              object or  has an [[ECMAScriptCode]] <a href=\"/sec/sec-object-internal-methods-and-internal-slots.html\">internal slot</a>,\n              then\n            <ol class=\"block\">\n              <li>Return an implementation-dependent String source code representation of <i>func</i>. The representation must\n                  conform to the rules below.</li>\n            </ol>\n          </li>\n          <li>Throw a <b>TypeError</b> exception.</li>\n        </ol>\n\n        <p class=\"normalbefore\"><code>toString</code> Representation Requirements:</p>\n\n        <ul>\n          <li>\n            <p>The string representation must have the syntax of a <i>FunctionDeclaration</i>, <i>FunctionExpression</i>,\n            <i>GeneratorDeclaration, GeneratorExpression, ClassDeclaration</i>, <i>ClassExpression</i>, <i>ArrowFunction</i>,\n            <i>MethodDefinition</i>, or <i>GeneratorMethod</i> depending upon the actual characteristics of the object.</p>\n          </li>\n\n          <li>\n            <p>T<span style=\"font-family: Times New Roman\">he use and placement of white space, line terminators, and semicolons\n            within the representation String is implementation-dependent.</span></p>\n          </li>\n\n          <li>\n            <p>If the object was defined using ECMAScript code and the returned string representation is not in the form of a\n            <i>MethodDefinition</i> or <i>GeneratorMethod</i> then the representation must be such that if the string is\n            evaluated, using <code>eval</code> in a lexical context that is equivalent to the lexical context used to create the\n            original object, it will result in a new functionally equivalent object. In that case the returned source code must\n            not mention freely any variables that were not mentioned freely by the original function&#x2019;s source code, even if\n            these &#x201C;extra&#x201D; names were originally in scope.</p>\n          </li>\n\n          <li>\n            <p>If the implementation cannot produce a source code string that meets these criteria then it must return a string\n            for which <code>eval</code> will throw a <span style=\"font-family: sans-serif\"><b>SyntaxError</b></span>\n            exception.</p>\n          </li>\n        </ul>\n      "}