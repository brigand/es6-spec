{"id":"sec-generator-abstract-operations","html":"\n      <div class=\"front\">\n        <h1><span class=\"secnum\" id=\"sec-25.3.3\"><a href=\"/sec/sec-generator-abstract-operations.html\" title=\"link to this section\">25.3.3</a></span> Generator Abstract Operations</h1>\n      </div>\n\n      <section id=\"sec-generatorstart\">\n        <h1><span class=\"secnum\" id=\"sec-25.3.3.1\"><a href=\"/sec/sec-generatorstart.html\" title=\"link to this section\">25.3.3.1</a></span>\n            GeneratorStart (generator, generatorBody)</h1>\n\n        <p class=\"normalbefore\">The abstract operation GeneratorStart with arguments <span style=\"font-family: Times New\n        Roman\"><i>generator</i> and <i>generatorBody</i></span> performs the following steps:</p>\n\n        <ol class=\"proc\">\n          <li><a href=\"/sec/sec-algorithm-conventions.html\">Assert</a>: The value of <i>generator&#x2019;s</i> [[GeneratorState]] <a href=\"/sec/sec-object-internal-methods-and-internal-slots.html\">internal slot</a> is <b>undefined</b>.</li>\n          <li>Let <i>genContext</i> be <a href=\"/sec/sec-execution-contexts.html\">the running execution context</a>.</li>\n          <li>Set the Generator component of <i>genContext</i> to <i>generator.</i></li>\n          <li>Set the code evaluation state of <i>genContext</i> such that when evaluation is resumed for that <a href=\"/sec/sec-execution-contexts.html\">execution context</a> the following steps will be performed:\n            <ol class=\"nested proc\">\n              <li>Let <i>result</i> be the result of evaluating <i>generatorBody</i>.</li>\n              <li><a href=\"/sec/sec-algorithm-conventions.html\">Assert</a>: If we return here, the generator either threw an exception or\n                  performed either an implicit or explicit return.</li>\n              <li>Remove <i>genContext</i> from <a href=\"/sec/sec-execution-contexts.html\">the execution context stack</a> and restore the\n                  <a href=\"/sec/sec-execution-contexts.html\">execution context</a> that is at the top of <a href=\"/sec/sec-execution-contexts.html\">the execution context stack</a> as <a href=\"/sec/sec-execution-contexts.html\">the running\n                  execution context</a>.</li>\n              <li>Set <i>generator&#x2019;s</i> [[GeneratorState]] <a href=\"/sec/sec-object-internal-methods-and-internal-slots.html\">internal slot</a> to <code>&quot;completed&quot;</code>.</li>\n              <li>Once a generator enters the <code>&quot;completed&quot;</code> state it never leaves it and its associated <a href=\"/sec/sec-execution-contexts.html\">execution context</a> is never resumed. Any execution state associated with\n                  <i>generator</i> can be discarded at this point.</li>\n              <li>If <i>result</i> is a normal completion, let <i>resultValue</i> be <b>undefined</b>.</li>\n              <li>Else,\n                <ol class=\"block\">\n                  <li>If <i>result</i>.[[type]] is <span style=\"font-family: sans-serif\">return</span>, let <i>resultValue</i> be\n                      <i>result</i>.[[value]].</li>\n                  <li>Else, return <a href=\"/sec/sec-completion-record-specification-type.html\">Completion</a>(<i>result</i>).</li>\n                </ol>\n              </li>\n              <li>Return <a href=\"/sec/sec-createiterresultobject.html\">CreateIterResultObject</a>(<i>resultValue</i>, <b>true</b>).</li>\n            </ol>\n          </li>\n          <li>Set <i>generator&#x2019;s</i> [[GeneratorContext]] <a href=\"/sec/sec-object-internal-methods-and-internal-slots.html\">internal\n              slot</a> to <i>genContext</i>.</li>\n          <li>Set <i>generator&#x2019;s</i> [[GeneratorState]] <a href=\"/sec/sec-object-internal-methods-and-internal-slots.html\">internal\n              slot</a> to <code>&quot;suspendedStart&quot;</code>.</li>\n          <li>Return <a href=\"/sec/sec-normalcompletion.html\">NormalCompletion</a>(<b>undefined</b>).</li>\n        </ol>\n      </section>\n\n      <section id=\"sec-generatorvalidate\">\n        <h1><span class=\"secnum\" id=\"sec-25.3.3.2\"><a href=\"/sec/sec-generatorvalidate.html\" title=\"link to this section\">25.3.3.2</a></span> GeneratorValidate ( generator )</h1>\n\n        <p class=\"normalbefore\">The abstract operation GeneratorValidate with argument <var>generator</var> performs the following\n        steps:</p>\n\n        <ol class=\"proc\">\n          <li>If <a href=\"/sec/sec-ecmascript-data-types-and-values.html\">Type</a>(<i>generator</i>) is not Object, throw a\n              <b>TypeError</b> exception.</li>\n          <li>If <i>generator</i> does not have a [[GeneratorState]] <a href=\"/sec/sec-object-internal-methods-and-internal-slots.html\">internal slot</a>, throw a <b>TypeError</b> exception.</li>\n          <li><a href=\"/sec/sec-algorithm-conventions.html\">Assert</a>: <i>generator</i> also has a [[GeneratorContext]] <a href=\"/sec/sec-object-internal-methods-and-internal-slots.html\">internal slot</a>.</li>\n          <li>Let <i>state</i> be the value of <i>generator&#x2019;s</i> [[GeneratorState]] <a href=\"/sec/sec-object-internal-methods-and-internal-slots.html\">internal slot</a>.</li>\n          <li>If <i>state</i> is <code>&quot;executing&quot;</code>, throw a <b>TypeError</b> exception.</li>\n          <li>Return <i>state</i>.</li>\n        </ol>\n      </section>\n\n      <section id=\"sec-generatorresume\">\n        <h1><span class=\"secnum\" id=\"sec-25.3.3.3\"><a href=\"/sec/sec-generatorresume.html\" title=\"link to this section\">25.3.3.3</a></span>\n            GeneratorResume ( generator, value )</h1>\n\n        <p class=\"normalbefore\">The abstract operation GeneratorResume with arguments <span style=\"font-family: Times New\n        Roman\"><i>generator</i> and <i>value</i></span> performs the following steps:</p>\n\n        <ol class=\"proc\">\n          <li>Let <i>state</i> be <a href=\"/sec/sec-generatorvalidate.html\">GeneratorValidate</a>(<i>generator</i>).</li>\n          <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>state</i>).</li>\n          <li>If <i>state</i> is <code>&quot;completed&quot;</code>, return <a href=\"/sec/sec-createiterresultobject.html\">CreateIterResultObject</a>(<b>undefined</b>, <b>true</b>).</li>\n          <li><a href=\"/sec/sec-algorithm-conventions.html\">Assert</a>: <i>state</i> is either <code>&quot;suspendedStart&quot;</code> or\n              <code>&quot;suspendedYield&quot;</code>.</li>\n          <li>Let <i>genContext</i> be the value of <i>generator&#x2019;s</i> [[GeneratorContext]] <a href=\"/sec/sec-object-internal-methods-and-internal-slots.html\">internal slot</a>.</li>\n          <li>Let <i>methodContext</i> be <a href=\"/sec/sec-execution-contexts.html\">the running execution context</a>.</li>\n          <li><a href=\"/sec/sec-execution-contexts.html\">Suspend</a> <i>methodContext</i>.</li>\n          <li>Set <i>generator&#x2019;s</i> [[GeneratorState]] <a href=\"/sec/sec-object-internal-methods-and-internal-slots.html\">internal\n              slot</a> to <code>&quot;executing&quot;</code>.</li>\n          <li>Push <i>genContext</i> onto <a href=\"/sec/sec-execution-contexts.html\">the execution context stack</a>; <i>genContext</i> is\n              now <a href=\"/sec/sec-execution-contexts.html\">the running execution context</a>.</li>\n          <li>Resume the <a href=\"/sec/sec-execution-contexts.html\">suspended</a> evaluation of <i>genContext</i> using <a href=\"/sec/sec-normalcompletion.html\">NormalCompletion</a>(<i>value</i>) as the result of the operation that <a href=\"/sec/sec-execution-contexts.html\">suspended</a> it. Let <i>result</i> be the value returned by the resumed\n              computation.</li>\n          <li><a href=\"/sec/sec-algorithm-conventions.html\">Assert</a>: When we return here, <i>genContext</i> has already been removed\n              from <a href=\"/sec/sec-execution-contexts.html\">the execution context stack</a> and <i>methodContext</i> is <a href=\"/sec/sec-execution-contexts.html\">the currently running execution context</a>.</li>\n          <li>Return <i>result</i>.</li>\n        </ol>\n      </section>\n\n      <section id=\"sec-generatorresumeabrupt\">\n        <h1><span class=\"secnum\" id=\"sec-25.3.3.4\"><a href=\"/sec/sec-generatorresumeabrupt.html\" title=\"link to this section\">25.3.3.4</a></span> GeneratorResumeAbrupt(generator, abruptCompletion)</h1>\n\n        <p class=\"normalbefore\">The abstract operation GeneratorResumeAbrupt with arguments <span style=\"font-family: Times New\n        Roman\"><i>generator</i> and <i>abruptCompletion</i></span> performs the following steps:</p>\n\n        <ol class=\"proc\">\n          <li>Let <i>state</i> be <a href=\"/sec/sec-generatorvalidate.html\">GeneratorValidate</a>(<i>generator</i>).</li>\n          <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>state</i>).</li>\n          <li>If <i>state</i> is <code>&quot;suspendedStart&quot;</code>, then\n            <ol class=\"block\">\n              <li>Set <i>generator&#x2019;s</i> [[GeneratorState]] <a href=\"/sec/sec-object-internal-methods-and-internal-slots.html\">internal slot</a> to <code>&quot;completed&quot;</code>.</li>\n              <li>Once a generator enters the <code>&quot;completed&quot;</code> state it never leaves it and its associated <a href=\"/sec/sec-execution-contexts.html\">execution context</a> is never resumed. Any execution state associated with\n                  <i>generator</i> can be discarded at this point.</li>\n              <li>Let <i>state</i> be <code>&quot;completed&quot;</code>.</li>\n            </ol>\n          </li>\n          <li>If <i>state</i> is <code>&quot;completed&quot;</code>, then\n            <ol class=\"block\">\n              <li>If <i>abruptCompletion</i>.[[type]] is <span style=\"font-family: sans-serif\">return</span>, then\n                <ol class=\"block\">\n                  <li>Return <a href=\"/sec/sec-createiterresultobject.html\">CreateIterResultObject</a>(<i>abruptCompletion</i>.[[value]],\n                      <b>true</b>).</li>\n                </ol>\n              </li>\n              <li>Return <a href=\"/sec/sec-completion-record-specification-type.html\">Completion</a>(<i>abruptCompletion</i>).</li>\n            </ol>\n          </li>\n          <li><a href=\"/sec/sec-algorithm-conventions.html\">Assert</a>: <i>state</i> is <code>&quot;suspendedYield&quot;</code>.</li>\n          <li>Let <i>genContext</i> be the value of <i>generator&#x2019;s</i> [[GeneratorContext]] <a href=\"/sec/sec-object-internal-methods-and-internal-slots.html\">internal slot</a>.</li>\n          <li>Let <i>methodContext</i> be <a href=\"/sec/sec-execution-contexts.html\">the running execution context</a>.</li>\n          <li><a href=\"/sec/sec-execution-contexts.html\">Suspend</a> <i>methodContext</i>.</li>\n          <li>Set <i>generator&#x2019;s</i> [[GeneratorState]] <a href=\"/sec/sec-object-internal-methods-and-internal-slots.html\">internal\n              slot</a> to <code>&quot;executing&quot;</code>.</li>\n          <li>Push <i>genContext</i> onto <a href=\"/sec/sec-execution-contexts.html\">the execution context stack</a>; <i>genContext</i> is\n              now <a href=\"/sec/sec-execution-contexts.html\">the running execution context</a>.</li>\n          <li>Resume the <a href=\"/sec/sec-execution-contexts.html\">suspended</a> evaluation of <i>genContext</i> using\n              <i>abruptCompletion</i> as the result of the operation that <a href=\"/sec/sec-execution-contexts.html\">suspended</a> it. Let\n              <i>result</i> be the completion record returned by the resumed computation.</li>\n          <li><a href=\"/sec/sec-algorithm-conventions.html\">Assert</a>: When we return here, <i>genContext</i> has already been removed\n              from <a href=\"/sec/sec-execution-contexts.html\">the execution context stack</a> and <i>methodContext</i> is <a href=\"/sec/sec-execution-contexts.html\">the currently running execution context</a>.</li>\n          <li>Return <a href=\"/sec/sec-completion-record-specification-type.html\">Completion</a>(<i>result</i>).</li>\n        </ol>\n      </section>\n\n      <section id=\"sec-generatoryield\">\n        <h1><span class=\"secnum\" id=\"sec-25.3.3.5\"><a href=\"/sec/sec-generatoryield.html\" title=\"link to this section\">25.3.3.5</a></span>\n            GeneratorYield ( iterNextObj )</h1>\n\n        <p class=\"normalbefore\">The abstract operation GeneratorYield with argument <var>iterNextObj</var> performs the following\n        steps:</p>\n\n        <ol class=\"proc\">\n          <li><a href=\"/sec/sec-algorithm-conventions.html\">Assert</a>: <i>iterNextObj</i> is an Object that implements the\n              <i>IteratorResult</i> interface.</li>\n          <li>Let <i>genContext</i> be <a href=\"/sec/sec-execution-contexts.html\">the running execution context</a>.</li>\n          <li><a href=\"/sec/sec-algorithm-conventions.html\">Assert</a>: <i>genContext</i> is the <a href=\"/sec/sec-execution-contexts.html\">execution context</a> of a generator.</li>\n          <li>Let <i>generator</i> be the value of the Generator component of <i>genContext</i>.</li>\n          <li>Set the value of <i>generator&#x2019;s</i> [[GeneratorState]] <a href=\"/sec/sec-object-internal-methods-and-internal-slots.html\">internal slot</a> to <code>&quot;suspendedYield&quot;</code>.</li>\n          <li>Remove <i>genContext</i> from <a href=\"/sec/sec-execution-contexts.html\">the execution context stack</a> and restore the <a href=\"/sec/sec-execution-contexts.html\">execution context</a> that is at the top of <a href=\"/sec/sec-execution-contexts.html\">the\n              execution context stack</a> as <a href=\"/sec/sec-execution-contexts.html\">the running execution context</a>.</li>\n          <li>Set the code evaluation state of <i>genContext</i> such that when evaluation is resumed with a <a href=\"/sec/sec-completion-record-specification-type.html\">Completion</a> <i>resumptionValue</i> the following steps will be\n              performed:\n            <ol class=\"nested proc\">\n              <li>Return <i>resumptionValue</i>.</li>\n              <li>NOTE:  This returns to the evaluation of the <span class=\"nt\">YieldExpression</span> production that originally\n                  called this abstract operation.</li>\n            </ol>\n          </li>\n          <li>Return <a href=\"/sec/sec-normalcompletion.html\">NormalCompletion</a>(<i>iterNextObj</i>).</li>\n          <li><span style=\"font-family: sans-serif\">NOTE:  This returns to the evaluation of the operation that had most\n              previously resumed evaluation of</span> <i>genContext</i>.</li>\n        </ol>\n      </section>\n    "}