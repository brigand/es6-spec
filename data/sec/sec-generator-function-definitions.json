{"id":"sec-generator-function-definitions","html":"\n    <div class=\"front\">\n      <h1><span class=\"secnum\" id=\"sec-14.4\"><a href=\"/sec/sec-generator-function-definitions.html\" title=\"link to this section\">14.4</a></span> Generator Function Definitions</h1>\n      <h2>Syntax</h2>\n\n      <div class=\"gp\">\n        <div class=\"lhs\"><span class=\"nt\">GeneratorMethod</span><sub class=\"g-params\">[Yield]</sub> <span class=\"geq\">:</span></div>\n        <div class=\"rhs\"><code class=\"t\">*</code> <span class=\"nt\">PropertyName</span><sub class=\"g-params\">[?Yield]</sub> <code class=\"t\">(</code> <span class=\"nt\">StrictFormalParameters</span><sub class=\"g-params\">[Yield]</sub> <code class=\"t\">)</code> <code class=\"t\">{</code> <span class=\"nt\">GeneratorBody</span> <code class=\"t\">}</code></div>\n      </div>\n\n      <div class=\"gp\">\n        <div class=\"lhs\"><span class=\"nt\">GeneratorDeclaration</span><sub class=\"g-params\">[Yield, Default]</sub> <span class=\"geq\">:</span></div>\n        <div class=\"rhs\"><code class=\"t\">function</code> <code class=\"t\">*</code> <span class=\"nt\">BindingIdentifier</span><sub class=\"g-params\">[?Yield]</sub> <code class=\"t\">(</code> <span class=\"nt\">FormalParameters</span><sub class=\"g-params\">[Yield]</sub> <code class=\"t\">)</code> <code class=\"t\">{</code> <span class=\"nt\">GeneratorBody</span> <code class=\"t\">}</code></div>\n        <div class=\"rhs\"><span class=\"grhsannot\">[+Default]</span> <code class=\"t\">function</code> <code class=\"t\">*</code> <code class=\"t\">(</code> <span class=\"nt\">FormalParameters</span><sub class=\"g-params\">[Yield]</sub> <code class=\"t\">)</code> <code class=\"t\">{</code> <span class=\"nt\">GeneratorBody</span> <code class=\"t\">}</code></div>\n      </div>\n\n      <div class=\"gp\">\n        <div class=\"lhs\"><span class=\"nt\">GeneratorExpression</span> <span class=\"geq\">:</span></div>\n        <div class=\"rhs\"><code class=\"t\">function</code> <code class=\"t\">*</code> <span class=\"nt\">BindingIdentifier</span><sub class=\"g-params\">[Yield]</sub><sub class=\"g-opt\">opt</sub> <code class=\"t\">(</code> <span class=\"nt\">FormalParameters</span><sub class=\"g-params\">[Yield]</sub> <code class=\"t\">)</code> <code class=\"t\">{</code> <span class=\"nt\">GeneratorBody</span> <code class=\"t\">}</code></div>\n      </div>\n\n      <div class=\"gp\">\n        <div class=\"lhs\"><span class=\"nt\">GeneratorBody</span> <span class=\"geq\">:</span></div>\n        <div class=\"rhs\"><span class=\"nt\">FunctionBody</span><sub class=\"g-params\">[Yield]</sub></div>\n      </div>\n\n      <div class=\"gp\">\n        <div class=\"lhs\"><span class=\"nt\">YieldExpression</span><sub class=\"g-params\">[In]</sub> <span class=\"geq\">:</span></div>\n        <div class=\"rhs\"><code class=\"t\">yield</code></div>\n        <div class=\"rhs\"><code class=\"t\">yield</code> <span class=\"grhsannot\">[no <span class=\"nt\">LineTerminator</span> here]</span> <span class=\"nt\">AssignmentExpression</span><sub class=\"g-params\">[?In, Yield]</sub></div>\n        <div class=\"rhs\"><code class=\"t\">yield</code> <span class=\"grhsannot\">[no <span class=\"nt\">LineTerminator</span> here]</span> <code class=\"t\">*</code> <span class=\"nt\">AssignmentExpression</span><sub class=\"g-params\">[?In, Yield]</sub></div>\n      </div>\n\n      <div class=\"note\">\n        <p><span class=\"nh\">NOTE 1</span> The syntactic context immediately following <code>yield</code> requires use of the <span class=\"nt\">InputElementRegExpOrTemplateTail</span> lexical goal.</p>\n      </div>\n\n      <div class=\"note\">\n        <p><span class=\"nh\">NOTE 2</span> <span class=\"nt\">YieldExpression</span> cannot be used within the <span class=\"nt\">FormalParameters</span> of a generator function because any expressions that are part of <span class=\"nt\">FormalParameters</span> are evaluated before the resulting generator object is in a resumable state.</p>\n      </div>\n\n      <div class=\"note\">\n        <p><span class=\"nh\">NOTE 3</span> Abstract operations relating to generator objects are defined in <a href=\"/sec/sec-generator-abstract-operations.html\">25.3.3</a>.</p>\n      </div>\n    </div>\n\n    <section id=\"sec-generator-function-definitions-static-semantics-early-errors\">\n      <h1><span class=\"secnum\" id=\"sec-14.4.1\"><a href=\"/sec/sec-generator-function-definitions-static-semantics-early-errors.html\" title=\"link to this section\">14.4.1</a></span> Static Semantics:  Early Errors</h1>\n      <div class=\"gp prod\"><span class=\"nt\">GeneratorMethod</span> <span class=\"geq\">:</span> <code class=\"t\">*</code> <span class=\"nt\">PropertyName</span> <code class=\"t\">(</code> <span class=\"nt\">StrictFormalParameters</span> <code class=\"t\">)</code> <code class=\"t\">{</code> <span class=\"nt\">GeneratorBody</span> <code class=\"t\">}</code></div>\n      <ul>\n        <li>\n          <p>It is a Syntax Error if HasDirectSuper of <span class=\"nt\">GeneratorMethod</span>  is <span style=\"font-family: Times\n          New Roman\"><b><i>true</i></b></span>.</p>\n        </li>\n\n        <li>\n          <p>It is a Syntax Error if <span class=\"nt\">StrictFormalParameters</span> Contains <span class=\"nt\">YieldExpression</span> is <span style=\"font-family: Times New Roman\"><b><i>true</i></b></span>.</p>\n        </li>\n\n        <li>\n          <p>It is a Syntax Error if any element of the <span style=\"font-family: Times New Roman\">BoundNames</span> of <span class=\"nt\">StrictFormalParameters</span> also occurs in the <span style=\"font-family: Times New\n          Roman\">LexicallyDeclaredNames</span> of <span class=\"nt\">GeneratorBody</span>.</p>\n        </li>\n      </ul>\n      <div class=\"gp prod\"><span class=\"nt\">GeneratorDeclaration</span> <span class=\"geq\">:</span> <code class=\"t\">function</code> <code class=\"t\">*</code> <span class=\"nt\">BindingIdentifier</span> <code class=\"t\">(</code> <span class=\"nt\">FormalParameters</span> <code class=\"t\">)</code> <code class=\"t\">{</code> <span class=\"nt\">GeneratorBody</span> <code class=\"t\">}</code></div>\n      <ul>\n        <li>It is a Syntax Error if HasDirectSuper of <span class=\"nt\">GeneratorDeclaration</span> is <span style=\"font-family:\n            Times New Roman\"><b><i>true</i></b></span>.</li>\n      </ul>\n      <div class=\"gp prod\"><span class=\"nt\">GeneratorExpression</span> <span class=\"geq\">:</span> <code class=\"t\">function</code> <code class=\"t\">*</code> <span class=\"nt\">BindingIdentifier</span><sub class=\"g-opt\">opt</sub> <code class=\"t\">(</code> <span class=\"nt\">FormalParameters</span> <code class=\"t\">)</code> <code class=\"t\">{</code> <span class=\"nt\">GeneratorBody</span> <code class=\"t\">}</code></div>\n      <ul>\n        <li>It is a Syntax Error if HasDirectSuper of <span class=\"nt\">GeneratorExpression</span> is <span style=\"font-family:\n            Times New Roman\"><b><i>true</i></b></span>.</li>\n      </ul>\n\n      <p><span class=\"prod\"><span class=\"nt\">GeneratorDeclaration</span> <span class=\"geq\">:</span> <code class=\"t\">function</code> <code class=\"t\">*</code> <span class=\"nt\">BindingIdentifier</span> <code class=\"t\">(</code> <span class=\"nt\">FormalParameters</span> <code class=\"t\">)</code> <code class=\"t\">{</code> <span class=\"nt\">GeneratorBody</span>\n      <code class=\"t\">}</code></span><br><span class=\"prod\"><span class=\"nt\">GeneratorExpression</span> <span class=\"geq\">:</span>\n      <code class=\"t\">function</code> <code class=\"t\">*</code> <span class=\"nt\">BindingIdentifier</span><sub class=\"g-opt\">opt</sub> <code class=\"t\">(</code> <span class=\"nt\">FormalParameters</span> <code class=\"t\">)</code> <code class=\"t\">{</code> <span class=\"nt\">GeneratorBody</span> <code class=\"t\">}</code></span></p>\n\n      <ul>\n        <li>\n          <p>If the source code matching this production is <a href=\"/sec/sec-strict-mode-code.html\">strict code</a>, the Early Error rules\n          for <span class=\"prod\"><span class=\"nt\">StrictFormalParameters</span> <span class=\"geq\">:</span> <span class=\"nt\">FormalParameters</span></span> are applied.</p>\n        </li>\n\n        <li>\n          <p>If the source code matching this production is <a href=\"/sec/sec-strict-mode-code.html\">strict code</a>, it is a Syntax Error\n          if <span class=\"nt\">BindingIdentifier</span> is the <span class=\"nt\">IdentifierName</span> <code>eval</code> or the\n          <span class=\"nt\">IdentifierName</span> <code>arguments</code>.</p>\n        </li>\n\n        <li>\n          <p>It is a Syntax Error if any element of the <span style=\"font-family: Times New Roman\">BoundNames</span> of <span class=\"nt\">FormalParameters</span> also occurs in the <span style=\"font-family: Times New\n          Roman\">LexicallyDeclaredNames</span> of <span class=\"nt\">GeneratorBody</span>.</p>\n        </li>\n\n        <li>\n          <p>It is a Syntax Error if <span class=\"nt\">FormalParameters</span> Contains <span class=\"nt\">YieldExpression</span> is\n          <span style=\"font-family: Times New Roman\"><b><i>true</i></b></span>.</p>\n        </li>\n\n        <li>\n          <p>It is a Syntax Error if <span class=\"nt\">FormalParameters</span> Contains <span class=\"nt\">SuperProperty</span> is\n          <span style=\"font-family: Times New Roman\"><b><i>true</i></b></span>.</p>\n        </li>\n\n        <li>\n          <p>It is a Syntax Error if <span class=\"nt\">GeneratorBody</span> Contains <span class=\"nt\">SuperProperty</span> is <span style=\"font-family: Times New Roman\"><b><i>true</i></b></span>.</p>\n        </li>\n      </ul>\n    </section>\n\n    <section id=\"sec-generator-function-definitions-static-semantics-boundnames\">\n      <h1><span class=\"secnum\" id=\"sec-14.4.2\"><a href=\"/sec/sec-generator-function-definitions-static-semantics-boundnames.html\" title=\"link to this section\">14.4.2</a></span> Static Semantics:  BoundNames</h1>\n\n      <p>See also: <a href=\"/sec/sec-identifiers-static-semantics-boundnames.html\">12.1.2</a>, <a href=\"/sec/sec-let-and-const-declarations-static-semantics-boundnames.html\">13.3.1.2</a>, <a href=\"/sec/sec-variable-statement-static-semantics-boundnames.html\">13.3.2.1</a>, <a href=\"/sec/sec-destructuring-binding-patterns-static-semantics-boundnames.html\">13.3.3.1</a>, <a href=\"/sec/sec-for-in-and-for-of-statements-static-semantics-boundnames.html\">13.7.5.2</a>, <a href=\"/sec/sec-function-definitions-static-semantics-boundnames.html\">14.1.3</a>, <a href=\"/sec/sec-arrow-function-definitions-static-semantics-boundnames.html\">14.2.2</a>, <a href=\"/sec/sec-class-definitions-static-semantics-boundnames.html\">14.5.2</a>, <a href=\"/sec/sec-imports-static-semantics-boundnames.html\">15.2.2.2</a>, <a href=\"/sec/sec-exports-static-semantics-boundnames.html\">15.2.3.2</a>.</p>\n\n      <div class=\"gp prod\"><span class=\"nt\">GeneratorDeclaration</span> <span class=\"geq\">:</span> <code class=\"t\">function</code> <code class=\"t\">*</code> <span class=\"nt\">BindingIdentifier</span> <code class=\"t\">(</code> <span class=\"nt\">FormalParameters</span> <code class=\"t\">)</code> <code class=\"t\">{</code> <span class=\"nt\">GeneratorBody</span> <code class=\"t\">}</code></div>\n      <ol class=\"proc\">\n        <li>Return the BoundNames of <i>BindingIdentifier</i>.</li>\n      </ol>\n      <div class=\"gp prod\"><span class=\"nt\">GeneratorDeclaration</span> <span class=\"geq\">:</span> <code class=\"t\">function</code> <code class=\"t\">*</code> <code class=\"t\">(</code> <span class=\"nt\">FormalParameters</span> <code class=\"t\">)</code> <code class=\"t\">{</code> <span class=\"nt\">GeneratorBody</span> <code class=\"t\">}</code></div>\n      <ol class=\"proc\">\n        <li>Return &#xAB;<code>&quot;*default*&quot;</code>&#xBB;.</li>\n      </ol>\n\n      <div class=\"note\">\n        <p><span class=\"nh\">NOTE</span> <code>&quot;*default*&quot;</code> is used within this specification as a synthetic name for\n        hoistable anonymous functions that are defined using export declarations.</p>\n      </div>\n    </section>\n\n    <section id=\"sec-generator-function-definitions-static-semantics-computedpropertycontains\">\n      <h1><span class=\"secnum\" id=\"sec-14.4.3\"><a href=\"/sec/sec-generator-function-definitions-static-semantics-computedpropertycontains.html\" title=\"link to this section\">14.4.3</a></span> Static Semantics:  ComputedPropertyContains</h1>\n\n      <p>With parameter <var>symbol</var>.</p>\n\n      <p>See also: <a href=\"/sec/sec-object-initializer-static-semantics-computedpropertycontains.html\">12.2.6.2</a>, <a href=\"/sec/sec-method-definitions-static-semantics-computedpropertycontains.html\">14.3.2</a>, <a href=\"/sec/sec-class-definitions-static-semantics-computedpropertycontains.html\">14.5.5</a>.</p>\n\n      <div class=\"gp prod\"><span class=\"nt\">GeneratorMethod</span> <span class=\"geq\">:</span> <code class=\"t\">*</code> <span class=\"nt\">PropertyName</span> <code class=\"t\">(</code> <span class=\"nt\">StrictFormalParameters</span> <code class=\"t\">)</code> <code class=\"t\">{</code> <span class=\"nt\">GeneratorBody</span> <code class=\"t\">}</code></div>\n      <ol class=\"proc\">\n        <li>Return the result of ComputedPropertyContains for <i>PropertyName</i> with argument <i>symbol</i>.</li>\n      </ol>\n    </section>\n\n    <section id=\"sec-generator-function-definitions-static-semantics-contains\">\n      <h1><span class=\"secnum\" id=\"sec-14.4.4\"><a href=\"/sec/sec-generator-function-definitions-static-semantics-contains.html\" title=\"link to this section\">14.4.4</a></span> Static Semantics:  Contains</h1>\n\n      <p>With parameter <var>symbol</var>.</p>\n\n      <p>See also: <a href=\"/sec/sec-static-semantic-rules.html\">5.3</a>, <a href=\"/sec/sec-object-initializer-static-semantics-contains.html\">12.2.6.3</a>, <a href=\"/sec/sec-static-semantics-static-semantics-contains.html\">12.3.1.1</a>, <a href=\"/sec/sec-function-definitions-static-semantics-contains.html\">14.1.4</a>, <a href=\"/sec/sec-arrow-function-definitions-static-semantics-contains.html\">14.2.3</a>, <a href=\"/sec/sec-class-definitions-static-semantics-contains.html\">14.5.4</a></p>\n\n      <p><span class=\"prod\"><span class=\"nt\">GeneratorDeclaration</span> <span class=\"geq\">:</span> <code class=\"t\">function</code> <code class=\"t\">*</code> <span class=\"nt\">BindingIdentifier</span> <code class=\"t\">(</code> <span class=\"nt\">FormalParameters</span> <code class=\"t\">)</code> <code class=\"t\">{</code> <span class=\"nt\">GeneratorBody</span>\n      <code class=\"t\">}GeneratorDeclaration</code> <code class=\"t\">:</code> <code class=\"t\">function</code> <code class=\"t\">*</code> <code class=\"t\">(</code> <span class=\"nt\">FormalParameters</span> <code class=\"t\">)</code> <code class=\"t\">{</code> <span class=\"nt\">GeneratorBody</span> <code class=\"t\">}</code></span></p>\n\n      <ol class=\"proc\">\n        <li>Return <b>false</b>.</li>\n      </ol>\n      <div class=\"gp prod\"><span class=\"nt\">GeneratorExpression</span> <span class=\"geq\">:</span> <code class=\"t\">function</code> <code class=\"t\">*</code> <span class=\"nt\">BindingIdentifier</span><sub class=\"g-opt\">opt</sub> <code class=\"t\">(</code> <span class=\"nt\">FormalParameters</span> <code class=\"t\">)</code> <code class=\"t\">{</code> <span class=\"nt\">GeneratorBody</span> <code class=\"t\">}</code></div>\n      <ol class=\"proc\">\n        <li>Return <b>false</b>.</li>\n      </ol>\n\n      <div class=\"note\">\n        <p><span class=\"nh\">NOTE</span> Static semantic rules that depend upon substructure generally do not look into function\n        definitions.</p>\n      </div>\n    </section>\n\n    <section id=\"sec-generator-function-definitions-static-semantics-hascomputedpropertykey\">\n      <h1><span class=\"secnum\" id=\"sec-14.4.5\"><a href=\"/sec/sec-generator-function-definitions-static-semantics-hascomputedpropertykey.html\" title=\"link to this section\">14.4.5</a></span> Static Semantics:  HasComputedPropertyKey</h1>\n\n      <p>See also: <a href=\"/sec/sec-object-initializer-static-semantics-hascomputedpropertykey.html\">12.2.6.4</a>, <a href=\"/sec/sec-method-definitions-static-semantics-hascomputedpropertykey.html\">14.3.4</a>.</p>\n\n      <div class=\"gp prod\"><span class=\"nt\">GeneratorMethod</span> <span class=\"geq\">:</span> <code class=\"t\">*</code> <span class=\"nt\">PropertyName</span> <code class=\"t\">(</code> <span class=\"nt\">StrictFormalParameters</span> <code class=\"t\">)</code> <code class=\"t\">{</code> <span class=\"nt\">GeneratorBody</span> <code class=\"t\">}</code></div>\n      <ol class=\"proc\">\n        <li>Return IsComputedPropertyKey of <i>PropertyName</i>.</li>\n      </ol>\n    </section>\n\n    <section id=\"sec-generator-function-definitions-static-semantics-hasdirectsuper\">\n      <h1><span class=\"secnum\" id=\"sec-14.4.6\"><a href=\"/sec/sec-generator-function-definitions-static-semantics-hasdirectsuper.html\" title=\"link to this section\">14.4.6</a></span> Static Semantics:  HasDirectSuper</h1>\n\n      <p>See also: <a href=\"/sec/sec-method-definitions-static-semantics-hasdirectsuper.html\">14.3.5</a>.</p>\n\n      <div class=\"gp prod\"><span class=\"nt\">GeneratorMethod</span> <span class=\"geq\">:</span> <code class=\"t\">*</code> <span class=\"nt\">PropertyName</span> <code class=\"t\">(</code> <span class=\"nt\">StrictFormalParameters</span> <code class=\"t\">)</code> <code class=\"t\">{</code> <span class=\"nt\">GeneratorBody</span> <code class=\"t\">}</code></div>\n      <ol class=\"proc\">\n        <li>If <i>StrictFormalParameters</i> Contains <i>SuperCall</i> is <b>true</b>, return <b>true.</b></li>\n        <li>Return <i>GeneratorBody</i> Contains <i>SuperCall</i>.</li>\n      </ol>\n\n      <p><span class=\"prod\"><span class=\"nt\">GeneratorDeclaration</span> <span class=\"geq\">:</span> <code class=\"t\">function</code> <code class=\"t\">*</code> <span class=\"nt\">BindingIdentifier</span> <code class=\"t\">(</code> <span class=\"nt\">FormalParameters</span> <code class=\"t\">)</code> <code class=\"t\">{</code> <span class=\"nt\">GeneratorBody</span>\n      <code class=\"t\">}</code> <span class=\"nt\">GeneratorDeclaration</span> <code class=\"t\">:</code> <code class=\"t\">function</code> <code class=\"t\">*</code> <code class=\"t\">(</code> <span class=\"nt\">FormalParameters</span> <code class=\"t\">)</code> <code class=\"t\">{</code> <span class=\"nt\">GeneratorBody</span> <code class=\"t\">}</code></span><br><span class=\"prod\"><span class=\"nt\">GeneratorExpression</span> <span class=\"geq\">:</span> <code class=\"t\">function</code> <code class=\"t\">*</code> <code class=\"t\">(</code> <span class=\"nt\">FormalParameters</span> <code class=\"t\">)</code> <code class=\"t\">{</code> <span class=\"nt\">GeneratorBody</span> <code class=\"t\">}</code></span><br><span class=\"prod\"><span class=\"nt\">GeneratorExpression</span> <span class=\"geq\">:</span> <code class=\"t\">function</code> <code class=\"t\">*</code>\n      <span class=\"nt\">BindingIdentifier</span> <code class=\"t\">(</code> <span class=\"nt\">FormalParameters</span> <code class=\"t\">)</code> <code class=\"t\">{</code> <span class=\"nt\">GeneratorBody</span> <code class=\"t\">}</code></span></p>\n\n      <ol class=\"proc\">\n        <li>If <i>FormalParameters</i> Contains <i>SuperCall</i> is <b>true</b>, return <b>true.</b></li>\n        <li>Return <i>GeneratorBody</i> Contains <i>SuperCall</i>.</li>\n      </ol>\n    </section>\n\n    <section id=\"sec-generator-function-definitions-static-semantics-hasname\">\n      <h1><span class=\"secnum\" id=\"sec-14.4.7\"><a href=\"/sec/sec-generator-function-definitions-static-semantics-hasname.html\" title=\"link to this section\">14.4.7</a></span> Static Semantics:  HasName</h1>\n\n      <p>See also: <a href=\"/sec/sec-semantics-static-semantics-hasname.html\">12.2.1.2</a>, <a href=\"/sec/sec-function-definitions-static-semantics-hasname.html\">14.1.8</a>, <a href=\"/sec/sec-arrow-function-definitions-static-semantics-hasname.html\">14.2.7</a>, <a href=\"/sec/sec-class-definitions-static-semantics-hasname.html\">14.5.6</a>.</p>\n\n      <div class=\"gp prod\"><span class=\"nt\">GeneratorExpression</span> <span class=\"geq\">:</span> <code class=\"t\">function</code> <code class=\"t\">*</code> <code class=\"t\">(</code> <span class=\"nt\">FormalParameters</span> <code class=\"t\">)</code> <code class=\"t\">{</code> <span class=\"nt\">GeneratorBody</span> <code class=\"t\">}</code></div>\n      <ol class=\"proc\">\n        <li>Return <b>false</b>.</li>\n      </ol>\n      <div class=\"gp prod\"><span class=\"nt\">GeneratorExpression</span> <span class=\"geq\">:</span> <code class=\"t\">function</code> <code class=\"t\">*</code> <span class=\"nt\">BindingIdentifier</span> <code class=\"t\">(</code> <span class=\"nt\">FormalParameters</span> <code class=\"t\">)</code> <code class=\"t\">{</code> <span class=\"nt\">GeneratorBody</span> <code class=\"t\">}</code></div>\n      <ol class=\"proc\">\n        <li>Return <b>true</b>.</li>\n      </ol>\n    </section>\n\n    <section id=\"sec-generator-function-definitions-static-semantics-isconstantdeclaration\">\n      <h1><span class=\"secnum\" id=\"sec-14.4.8\"><a href=\"/sec/sec-generator-function-definitions-static-semantics-isconstantdeclaration.html\" title=\"link to this section\">14.4.8</a></span> Static Semantics:  IsConstantDeclaration</h1>\n\n      <p>See also: <a href=\"/sec/sec-let-and-const-declarations-static-semantics-isconstantdeclaration.html\">13.3.1.3</a>, <a href=\"/sec/sec-function-definitions-static-semantics-isconstantdeclaration.html\">14.1.10</a>, <a href=\"/sec/sec-class-definitions-static-semantics-isconstantdeclaration.html\">14.5.7</a>, <a href=\"/sec/sec-exports-static-semantics-isconstantdeclaration.html\">15.2.3.7</a>.</p>\n\n      <p><span class=\"prod\"><span class=\"nt\">GeneratorDeclaration</span> <span class=\"geq\">:</span> <code class=\"t\">function</code> <code class=\"t\">*</code> <span class=\"nt\">BindingIdentifier</span> <code class=\"t\">(</code> <span class=\"nt\">FormalParameters</span> <code class=\"t\">)</code> <code class=\"t\">{</code> <span class=\"nt\">GeneratorBody</span>\n      <code class=\"t\">}GeneratorDeclaration</code> <code class=\"t\">:</code> <code class=\"t\">function</code> <code class=\"t\">*</code> <code class=\"t\">(</code> <span class=\"nt\">FormalParameters</span> <code class=\"t\">)</code> <code class=\"t\">{</code> <span class=\"nt\">GeneratorBody</span> <code class=\"t\">}</code></span></p>\n\n      <ol class=\"proc\">\n        <li>Return <b>false</b>.</li>\n      </ol>\n    </section>\n\n    <section id=\"sec-generator-function-definitions-static-semantics-isfunctiondefinition\">\n      <h1><span class=\"secnum\" id=\"sec-14.4.9\"><a href=\"/sec/sec-generator-function-definitions-static-semantics-isfunctiondefinition.html\" title=\"link to this section\">14.4.9</a></span> Static Semantics:  IsFunctionDefinition</h1>\n\n      <p>See also: <a href=\"/sec/sec-semantics-static-semantics-isfunctiondefinition.html\">12.2.1.3</a>, <a href=\"/sec/sec-grouping-operator-static-semantics-isfunctiondefinition.html\">12.2.10.2</a>, <a href=\"/sec/sec-static-semantics-static-semantics-isfunctiondefinition.html\">12.3.1.2</a>, <a href=\"/sec/sec-postfix-expressions-static-semantics-isfunctiondefinition.html\">12.4.2</a>, <a href=\"/sec/sec-unary-operators-static-semantics-isfunctiondefinition.html\">12.5.2</a>, <a href=\"/sec/sec-multiplicative-operators-static-semantics-isfunctiondefinition.html\">12.6.1</a>, <a href=\"/sec/sec-additive-operators-static-semantics-isfunctiondefinition.html\">12.7.1</a>, <a href=\"/sec/sec-bitwise-shift-operators-static-semantics-isfunctiondefinition.html\">12.8.1</a>, <a href=\"/sec/sec-relational-operators-static-semantics-isfunctiondefinition.html\">12.9.1</a>, <a href=\"/sec/sec-equality-operators-static-semantics-isfunctiondefinition.html\">12.10.1</a>, <a href=\"/sec/sec-binary-bitwise-operators-static-semantics-isfunctiondefinition.html\">12.11.1</a>, <a href=\"/sec/sec-binary-logical-operators-static-semantics-isfunctiondefinition.html\">12.12.1</a>, <a href=\"/sec/sec-conditional-operator-static-semantics-isfunctiondefinition.html\">12.13.1</a>, <a href=\"/sec/sec-assignment-operators-static-semantics-isfunctiondefinition.html\">12.14.2</a>, <a href=\"/sec/sec-comma-operator-static-semantics-isfunctiondefinition.html\">12.15.1</a>, <a href=\"/sec/sec-function-definitions-static-semantics-isfunctiondefinition.html\">14.1.11</a>, <a href=\"/sec/sec-class-definitions-static-semantics-isfunctiondefinition.html\">14.5.8</a>.</p>\n\n      <div class=\"gp prod\"><span class=\"nt\">GeneratorExpression</span> <span class=\"geq\">:</span> <code class=\"t\">function</code> <code class=\"t\">*</code> <code class=\"t\">(</code> <span class=\"nt\">FormalParameters</span> <code class=\"t\">)</code> <code class=\"t\">{</code> <span class=\"nt\">GeneratorBody</span> <code class=\"t\">}</code></div>\n      <ol class=\"proc\">\n        <li>Return <b>true</b>.</li>\n      </ol>\n      <div class=\"gp prod\"><span class=\"nt\">GeneratorExpression</span> <span class=\"geq\">:</span> <code class=\"t\">function</code> <code class=\"t\">*</code> <span class=\"nt\">BindingIdentifier</span> <code class=\"t\">(</code> <span class=\"nt\">FormalParameters</span> <code class=\"t\">)</code> <code class=\"t\">{</code> <span class=\"nt\">GeneratorBody</span> <code class=\"t\">}</code></div>\n      <ol class=\"proc\">\n        <li>Return <b>true</b>.</li>\n      </ol>\n    </section>\n\n    <section id=\"sec-generator-function-definitions-static-semantics-propname\">\n      <h1><span class=\"secnum\" id=\"sec-14.4.10\"><a href=\"/sec/sec-generator-function-definitions-static-semantics-propname.html\" title=\"link to this section\">14.4.10</a></span> Static Semantics:  PropName</h1>\n\n      <p>See also: <a href=\"/sec/sec-object-initializer-static-semantics-propname.html\">12.2.6.6</a>, <a href=\"/sec/sec-method-definitions-static-semantics-propname.html\">14.3.6</a>, <a href=\"/sec/sec-class-definitions-static-semantics-propname.html\">14.5.12</a></p>\n\n      <div class=\"gp prod\"><span class=\"nt\">GeneratorMethod</span> <span class=\"geq\">:</span> <code class=\"t\">*</code> <span class=\"nt\">PropertyName</span> <code class=\"t\">(</code> <span class=\"nt\">StrictFormalParameters</span> <code class=\"t\">)</code> <code class=\"t\">{</code> <span class=\"nt\">GeneratorBody</span> <code class=\"t\">}</code></div>\n      <ol class=\"proc\">\n        <li>Return PropName of <i>PropertyName</i>.</li>\n      </ol>\n    </section>\n\n    <section id=\"sec-generator-function-definitions-runtime-semantics-evaluatebody\">\n      <h1><span class=\"secnum\" id=\"sec-14.4.11\"><a href=\"/sec/sec-generator-function-definitions-runtime-semantics-evaluatebody.html\" title=\"link to this section\">14.4.11</a></span> Runtime Semantics: EvaluateBody</h1>\n\n      <p>With parameter <var>functionObject</var>.</p>\n\n      <p>See also: <a href=\"/sec/sec-function-definitions-runtime-semantics-evaluatebody.html\">14.1.17</a>, <a href=\"/sec/sec-arrow-function-definitions-runtime-semantics-evaluatebody.html\">14.2.15</a>.</p>\n\n      <div class=\"gp prod\"><span class=\"nt\">GeneratorBody</span> <span class=\"geq\">:</span> <span class=\"nt\">FunctionBody</span></div>\n      <ol class=\"proc\">\n        <li>Let <i>G</i> be <a href=\"/sec/sec-ordinarycreatefromconstructor.html\">OrdinaryCreateFromConstructor</a>(<i>functionObject</i>,\n            <code>&quot;%GeneratorPrototype%&quot;</code>, &#xAB;&#x200D;[[GeneratorState]], [[GeneratorContext]]&#xBB; ).</li>\n        <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>G</i>).</li>\n        <li>Perform <a href=\"/sec/sec-generatorstart.html\">GeneratorStart</a>(<i>G</i>, <i>FunctionBody</i>).</li>\n        <li>Return <a href=\"/sec/sec-completion-record-specification-type.html\">Completion</a>{[[type]]: <span style=\"font-family:\n            sans-serif\">return</span>, [[value]]: <i>G</i>, [[target]]: <span style=\"font-family: sans-serif\">empty</span>}.</li>\n      </ol>\n\n      <div class=\"note\">\n        <p><span class=\"nh\">NOTE</span> If the generator was invoked using [[Call]], the <code>this</code> binding will have\n        already been initialized in the normal manner. If the generator was invoked using [[Construct]], the <code>this</code>\n        bind is not initialized and any references to <code>this</code> within the <span class=\"nt\">FunctionBody</span> will\n        produce a <span class=\"value\">ReferenceError</span> exception.</p>\n      </div>\n    </section>\n\n    <section id=\"sec-generator-function-definitions-runtime-semantics-instantiatefunctionobject\">\n      <h1><span class=\"secnum\" id=\"sec-14.4.12\"><a href=\"/sec/sec-generator-function-definitions-runtime-semantics-instantiatefunctionobject.html\" title=\"link to this section\">14.4.12</a></span> Runtime Semantics: InstantiateFunctionObject</h1>\n\n      <p>With parameter <var>scope</var>.</p>\n\n      <p>See also: <a href=\"/sec/sec-function-definitions-runtime-semantics-instantiatefunctionobject.html\">14.1.19</a>.</p>\n\n      <div class=\"gp prod\"><span class=\"nt\">GeneratorDeclaration</span> <span class=\"geq\">:</span> <code class=\"t\">function</code> <code class=\"t\">*</code> <span class=\"nt\">BindingIdentifier</span> <code class=\"t\">(</code> <span class=\"nt\">FormalParameters</span> <code class=\"t\">)</code> <code class=\"t\">{</code> <span class=\"nt\">GeneratorBody</span> <code class=\"t\">}</code></div>\n      <ol class=\"proc\">\n        <li>If the function code for <i>GeneratorDeclaration</i> is <a href=\"/sec/sec-strict-mode-code.html\">strict mode code</a>, let\n            <i>strict</i> be <b>true</b>. Otherwise let <i>strict</i> be <b>false</b>.</li>\n        <li>Let <i>name</i> be StringValue of <i>BindingIdentifier.</i></li>\n        <li>Let <i>F</i> be <a href=\"/sec/sec-generatorfunctioncreate.html\">GeneratorFunctionCreate</a>(<span style=\"font-family:\n            sans-serif\">Normal</span>, <i>FormalParameters</i>, <i>GeneratorBody</i>, <i>scope</i>, <i>strict</i>).</li>\n        <li>Let <i>prototype</i> be <a href=\"/sec/sec-objectcreate.html\">ObjectCreate</a>(<span style=\"font-family:\n            sans-serif\">%GeneratorPrototype%</span>).</li>\n        <li>Perform <a href=\"/sec/sec-makeconstructor.html\">MakeConstructor</a>(<i>F</i>, <b>true</b>, <i>prototype</i>).</li>\n        <li>Perform <a href=\"/sec/sec-setfunctionname.html\">SetFunctionName</a>(<i>F</i>, <i>name</i>).</li>\n        <li>Return <i>F</i>.</li>\n      </ol>\n      <div class=\"gp prod\"><span class=\"nt\">GeneratorDeclaration</span> <span class=\"geq\">:</span> <code class=\"t\">function</code> <code class=\"t\">*</code> <code class=\"t\">(</code> <span class=\"nt\">FormalParameters</span> <code class=\"t\">)</code> <code class=\"t\">{</code> <span class=\"nt\">GeneratorBody</span> <code class=\"t\">}</code></div>\n      <ol class=\"proc\">\n        <li>If the function code for <i>GeneratorDeclaration</i> is <a href=\"/sec/sec-strict-mode-code.html\">strict mode code</a>, let\n            <i>strict</i> be <b>true</b>. Otherwise let <i>strict</i> be <b>false</b>.</li>\n        <li>Let <i>F</i> be <a href=\"/sec/sec-generatorfunctioncreate.html\">GeneratorFunctionCreate</a>(<span style=\"font-family:\n            sans-serif\">Normal</span>, <i>FormalParameters</i>, <i>GeneratorBody</i>, <i>scope</i>, <i>strict</i>).</li>\n        <li>Let <i>prototype</i> be <a href=\"/sec/sec-objectcreate.html\">ObjectCreate</a>(<span style=\"font-family:\n            sans-serif\">%GeneratorPrototype%</span>).</li>\n        <li>Perform <a href=\"/sec/sec-makeconstructor.html\">MakeConstructor</a>(<i>F</i>, <b>true</b>, <i>prototype</i>).</li>\n        <li>Perform <a href=\"/sec/sec-setfunctionname.html\">SetFunctionName</a>(<i>F</i>, <code>&quot;default&quot;</code>).</li>\n        <li>Return <i>F</i>.</li>\n      </ol>\n\n      <div class=\"note\">\n        <p><span class=\"nh\">NOTE</span> An anonymous <span class=\"nt\">GeneratorDeclaration</span> can only occur as part of an\n        <code>export default</code> declaration.</p>\n      </div>\n    </section>\n\n    <section id=\"sec-generator-function-definitions-runtime-semantics-propertydefinitionevaluation\">\n      <h1><span class=\"secnum\" id=\"sec-14.4.13\"><a href=\"/sec/sec-generator-function-definitions-runtime-semantics-propertydefinitionevaluation.html\" title=\"link to this section\">14.4.13</a></span> Runtime Semantics: PropertyDefinitionEvaluation</h1>\n\n      <p>With parameter <var>object</var> and <span style=\"font-family: Times New Roman\"><i>enumerable</i>.</span></p>\n\n      <p>See also: <a href=\"/sec/sec-object-initializer-runtime-semantics-propertydefinitionevaluation.html\">12.2.6.9</a>, <a href=\"/sec/sec-method-definitions-runtime-semantics-propertydefinitionevaluation.html\">14.3.9</a>, B.3.1</p>\n\n      <div class=\"gp prod\"><span class=\"nt\">GeneratorMethod</span> <span class=\"geq\">:</span> <code class=\"t\">*</code> <span class=\"nt\">PropertyName</span> <code class=\"t\">(</code> <span class=\"nt\">StrictFormalParameters</span> <code class=\"t\">)</code> <code class=\"t\">{</code> <span class=\"nt\">GeneratorBody</span> <code class=\"t\">}</code></div>\n      <ol class=\"proc\">\n        <li>Let <i>propKey</i> be the result of evaluating <i>PropertyName</i>.</li>\n        <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>propKey</i>).</li>\n        <li>If the function code for this <i>GeneratorMethod</i> is <a href=\"/sec/sec-strict-mode-code.html\">strict mode code</a>, let\n            <i>strict</i> be <b>true</b>. Otherwise let <i>strict</i> be <b>false</b>.</li>\n        <li>Let <i>scope</i> be <a href=\"/sec/sec-execution-contexts.html\">the running execution context</a>&#x2019;s <a href=\"/sec/sec-execution-contexts.html\">LexicalEnvironment</a>.</li>\n        <li>Let <i>closure</i> be <a href=\"/sec/sec-generatorfunctioncreate.html\">GeneratorFunctionCreate</a>(<span style=\"font-family:\n            sans-serif\">Method</span>, <i>StrictFormalParameters</i>, <i>GeneratorBody, scope</i>, <i>strict</i>).</li>\n        <li>Perform <a href=\"/sec/sec-makemethod.html\">MakeMethod</a>(<i>closure</i>, <i>object</i>).</li>\n        <li>Let <i>prototype</i> be <a href=\"/sec/sec-objectcreate.html\">ObjectCreate</a>(<span style=\"font-family:\n            sans-serif\">%GeneratorPrototype</span>%).</li>\n        <li>Perform <a href=\"/sec/sec-makeconstructor.html\">MakeConstructor</a>(<i>closure</i>, <b>true</b>, <i>prototype</i>).</li>\n        <li>Perform <a href=\"/sec/sec-setfunctionname.html\">SetFunctionName</a>(<i>closure</i>, <i>propKey</i>).</li>\n        <li>Let <i>desc</i> be the <a href=\"/sec/sec-property-descriptor-specification-type.html\">Property Descriptor</a>{[[Value]]:\n            <i>closure</i>, [[Writable]]: <b>true</b>, [[Enumerable]]: <i>enumerable</i>, [[Configurable]]: <b>true</b>}.</li>\n        <li>Return <a href=\"/sec/sec-definepropertyorthrow.html\">DefinePropertyOrThrow</a>(<i>object</i>, <i>propKey</i>,\n            <i>desc</i>).</li>\n      </ol>\n    </section>\n\n    <section id=\"sec-generator-function-definitions-runtime-semantics-evaluation\">\n      <h1><span class=\"secnum\" id=\"sec-14.4.14\"><a href=\"/sec/sec-generator-function-definitions-runtime-semantics-evaluation.html\" title=\"link to this section\">14.4.14</a></span> Runtime Semantics: Evaluation</h1>\n      <div class=\"gp prod\"><span class=\"nt\">GeneratorExpression</span> <span class=\"geq\">:</span> <code class=\"t\">function</code> <code class=\"t\">*</code> <code class=\"t\">(</code> <span class=\"nt\">FormalParameters</span> <code class=\"t\">)</code> <code class=\"t\">{</code> <span class=\"nt\">GeneratorBody</span> <code class=\"t\">}</code></div>\n      <ol class=\"proc\">\n        <li>If the function code for this <i>GeneratorExpression</i> is <a href=\"/sec/sec-strict-mode-code.html\">strict mode code</a>, let\n            <i>strict</i> be <b>true</b>. Otherwise let <i>strict</i> be <b>false</b>.</li>\n        <li>Let <i>scope</i> be the <a href=\"/sec/sec-execution-contexts.html\">LexicalEnvironment</a> of <a href=\"/sec/sec-execution-contexts.html\">the running execution context</a>.</li>\n        <li>Let <i>closure</i> be <a href=\"/sec/sec-generatorfunctioncreate.html\">GeneratorFunctionCreate</a>(<span style=\"font-family:\n            sans-serif\">Normal</span>, <i>FormalParameters</i>, <i>GeneratorBody, scope</i>, <i>strict</i>).</li>\n        <li>Let <i>prototype</i> be <a href=\"/sec/sec-objectcreate.html\">ObjectCreate</a>(<span style=\"font-family:\n            sans-serif\">%GeneratorPrototype%</span>).</li>\n        <li>Perform <a href=\"/sec/sec-makeconstructor.html\">MakeConstructor</a>(<i>closure</i>, <b>true</b>, <i>prototype</i>).</li>\n        <li>Return <i>closure</i>.</li>\n      </ol>\n      <div class=\"gp prod\"><span class=\"nt\">GeneratorExpression</span> <span class=\"geq\">:</span> <code class=\"t\">function</code> <code class=\"t\">*</code> <span class=\"nt\">BindingIdentifier</span> <code class=\"t\">(</code> <span class=\"nt\">FormalParameters</span> <code class=\"t\">)</code> <code class=\"t\">{</code> <span class=\"nt\">GeneratorBody</span> <code class=\"t\">}</code></div>\n      <ol class=\"proc\">\n        <li>If the function code for this <i>GeneratorExpression</i> is <a href=\"/sec/sec-strict-mode-code.html\">strict mode code</a>, let\n            <i>strict</i> be <b>true</b>. Otherwise let <i>strict</i> be <b>false</b>.</li>\n        <li>Let <i>runningContext</i> be <a href=\"/sec/sec-execution-contexts.html\">the running execution context</a>&#x2019;s <a href=\"/sec/sec-lexical-environments.html\">Lexical Environment</a>.</li>\n        <li>Let <i>funcEnv</i> be <a href=\"/sec/sec-newdeclarativeenvironment.html\">NewDeclarativeEnvironment</a>(<i>runningContext</i>).</li>\n        <li>Let <i>envRec</i> be <i>funcEnv&#x2019;s</i> <a href=\"/sec/sec-lexical-environments.html\">EnvironmentRecord</a>.</li>\n        <li>Let <i>name</i> be StringValue of <i>BindingIdentifier</i>.</li>\n        <li>Perform <i>envRec.</i>CreateImmutableBinding(<i>name</i>).</li>\n        <li>Let <i>closure</i> be <a href=\"/sec/sec-generatorfunctioncreate.html\">GeneratorFunctionCreate</a>(<span style=\"font-family:\n            sans-serif\">Normal</span>, <i>FormalParameters</i>, <i>GeneratorBody, funcEnv</i>, <i>strict</i>).</li>\n        <li>Let <i>prototype</i> be <a href=\"/sec/sec-objectcreate.html\">ObjectCreate</a>(<span style=\"font-family:\n            sans-serif\">%GeneratorPrototype%</span>).</li>\n        <li>Perform <a href=\"/sec/sec-makeconstructor.html\">MakeConstructor</a> (<i>closure</i>, <b>true</b>, <i>prototype</i>).</li>\n        <li>Perform <a href=\"/sec/sec-setfunctionname.html\">SetFunctionName</a>(<i>closure</i>, <i>name</i>).</li>\n        <li>Perform <i>envRec.</i>InitializeBinding(<i>name,</i> <i>closure</i>).</li>\n        <li>Return <i>closure</i>.</li>\n      </ol>\n\n      <div class=\"note\">\n        <p><span class=\"nh\">NOTE</span> The <span class=\"nt\">BindingIdentifier</span> in a <span class=\"nt\">GeneratorExpression</span> can be referenced from inside the <var>GeneratorExpression&apos;s</var> <span class=\"nt\">FunctionBody</span> to allow the generator code to call itself recursively. However, unlike in a <span class=\"nt\">GeneratorDeclaration</span>, the <span class=\"nt\">BindingIdentifier</span> in a <span class=\"nt\">GeneratorExpression</span> cannot be referenced from and does not affect the scope enclosing the <span class=\"nt\">GeneratorExpression</span>.</p>\n      </div>\n\n      <div class=\"gp prod\"><span class=\"nt\">YieldExpression</span> <span class=\"geq\">:</span> <code class=\"t\">yield</code></div>\n      <ol class=\"proc\">\n        <li>Return <a href=\"/sec/sec-generatoryield.html\">GeneratorYield</a>(<a href=\"/sec/sec-createiterresultobject.html\">CreateIterResultObject</a>(<b>undefined</b>, <b>false</b>)).</li>\n      </ol>\n      <div class=\"gp prod\"><span class=\"nt\">YieldExpression</span> <span class=\"geq\">:</span> <code class=\"t\">yield</code> <span class=\"nt\">AssignmentExpression</span></div>\n      <ol class=\"proc\">\n        <li>Let <i>exprRef</i> be the result of evaluating <i>AssignmentExpression</i>.</li>\n        <li>Let <i>value</i> be <a href=\"/sec/sec-getvalue.html\">GetValue</a>(<i>exprRef</i>).</li>\n        <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>value</i>).</li>\n        <li>Return <a href=\"/sec/sec-generatoryield.html\">GeneratorYield</a>(<a href=\"/sec/sec-createiterresultobject.html\">CreateIterResultObject</a>(<i>value</i>, <b>false</b>)).</li>\n      </ol>\n      <div class=\"gp prod\"><span class=\"nt\">YieldExpression</span> <span class=\"geq\">:</span> <code class=\"t\">yield</code> <code class=\"t\">*</code> <span class=\"nt\">AssignmentExpression</span></div>\n      <ol class=\"proc\">\n        <li>Let <i>exprRef</i> be the result of evaluating <i>AssignmentExpression</i>.</li>\n        <li>Let <i>value</i> be <a href=\"/sec/sec-getvalue.html\">GetValue</a>(<i>exprRef</i>).</li>\n        <li>Let <i>iterator</i> be <a href=\"/sec/sec-getiterator.html\">GetIterator</a>(<i>value</i>).</li>\n        <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>iterator</i>)<i>.</i></li>\n        <li>Let <i>received</i> be <a href=\"/sec/sec-normalcompletion.html\">NormalCompletion</a>(<b>undefined</b>).</li>\n        <li>Repeat\n          <ol class=\"block\">\n            <li>If <i>received</i>.[[type]] is <span style=\"font-family: sans-serif\">normal</span>, then\n              <ol class=\"block\">\n                <li>Let <i>innerResult</i> be <a href=\"/sec/sec-iteratornext.html\">IteratorNext</a>(<i>iterator</i>,\n                    <i>received</i>.[[value]]).</li>\n                <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>innerResult</i>).</li>\n                <li>Let <i>done</i> be <a href=\"/sec/sec-iteratorcomplete.html\">IteratorComplete</a>(<i>innerResult</i>).</li>\n                <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>done</i>).</li>\n                <li>If <i>done</i> is <b>true</b>, then\n                  <ol class=\"block\">\n                    <li>Return <a href=\"/sec/sec-iteratorvalue.html\">IteratorValue</a> (<i>innerResult</i>).</li>\n                  </ol>\n                </li>\n                <li>Let <i>received</i>  be <a href=\"/sec/sec-generatoryield.html\">GeneratorYield</a>(<i>innerResult</i>).</li>\n              </ol>\n            </li>\n            <li>Else if <i>received</i>.[[type]] is <span style=\"font-family: sans-serif\">throw</span>, then\n              <ol class=\"block\">\n                <li>Let <i>throw</i> be <a href=\"/sec/sec-getmethod.html\">GetMethod</a>(<i>iterator</i>, <code>&quot;throw&quot;</code>).</li>\n                <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>throw</i>)<span style=\"font-family:\n                    sans-serif\">.</span></li>\n                <li>If <i>throw</i> is not <b>undefined</b>, then\n                  <ol class=\"block\">\n                    <li>Let <i>innerResult</i> be <a href=\"/sec/sec-call.html\">Call</a>(<i>throw</i>, <i>iterator</i>,\n                        &#xAB;&#x200D;<i>received</i>.[[value]]&#xBB;).</li>\n                    <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>innerResult</i>)<span style=\"font-family:\n                        sans-serif\">.</span></li>\n                    <li>NOTE:  Exceptions from the inner iterator <code>throw</code> method are propagated. Normal completions\n                        from an inner <code>throw</code> method are processed similarly to an inner <code>next</code>.</li>\n                    <li>If <a href=\"/sec/sec-ecmascript-data-types-and-values.html\">Type</a>(<i>innerResult</i>) is not Object, throw a\n                        <b>TypeError</b> exception.</li>\n                    <li>Let <i>done</i> be <a href=\"/sec/sec-iteratorcomplete.html\">IteratorComplete</a>(<i>innerResult</i>).</li>\n                    <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>done</i>).</li>\n                    <li>If <i>done</i> is <b>true</b>, then\n                      <ol class=\"block\">\n                        <li>Let <i>value</i> be <a href=\"/sec/sec-iteratorvalue.html\">IteratorValue</a>(<i>innerResult</i>).</li>\n                        <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>value</i>).</li>\n                        <li>Return <a href=\"/sec/sec-completion-record-specification-type.html\">Completion</a>{[[type]]: <span style=\"font-family: sans-serif\">return</span> , [[value]]:<i>value</i>, [[target]]:<span style=\"font-family: sans-serif\">empty</span>}.</li>\n                      </ol>\n                    </li>\n                    <li>Let <i>received</i>  be <a href=\"/sec/sec-generatoryield.html\">GeneratorYield</a>(<i>innerResult</i>).</li>\n                  </ol>\n                </li>\n                <li>Else,\n                  <ol class=\"block\">\n                    <li>NOTE:  If <var>iterator</var> does not have a <code>throw</code> method, this throw is going to terminate\n                        the <code>yield*</code> loop. But first we need to give <var>iterator</var> a chance to clean up.</li>\n                    <li>Let <i>closeResult</i> be <a href=\"/sec/sec-iteratorclose.html\">IteratorClose</a>(<i>iterator</i>, <a href=\"/sec/sec-completion-record-specification-type.html\">Completion</a>{[[type]]: <span style=\"font-family:\n                        sans-serif\">normal</span> , [[value]]: <span style=\"font-family: sans-serif\">empty</span>,\n                        [[target]]:<span style=\"font-family: sans-serif\">empty</span>}).</li>\n                    <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>closeResult</i>).</li>\n                    <li>NOTE: The next step throws a <span class=\"value\">TypeError</span> to indicate that there was a\n                        <code>yield*</code> protocol violation: <var>iterator</var> does not have a <code>throw</code>\n                        method.</li>\n                    <li>Throw a <b>TypeError</b> exception.</li>\n                  </ol>\n                </li>\n              </ol>\n            </li>\n            <li>Else,\n              <ol class=\"block\">\n                <li><a href=\"/sec/sec-algorithm-conventions.html\">Assert</a>: <i>received</i>.[[type]] is <span style=\"font-family:\n                    sans-serif\">return</span>.</li>\n                <li>Let <i>return</i> be <a href=\"/sec/sec-getmethod.html\">GetMethod</a>(<i>iterator</i>, <code>&quot;return&quot;</code>).</li>\n                <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>return</i>)<span style=\"font-family:\n                    sans-serif\">.</span></li>\n                <li>If <i>return</i> is <b>undefined</b>, return <a href=\"/sec/sec-completion-record-specification-type.html\">Completion</a>(<i>received</i>).</li>\n                <li>Let <i>innerReturnResult</i> be <a href=\"/sec/sec-call.html\">Call</a>(<i>return</i>, <i>iterator</i>,\n                    &#xAB;&#x200D;<i>received</i>.[[value]]&#xBB;).</li>\n                <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>innerReturnResult</i>)<span style=\"font-family:\n                    sans-serif\">.</span></li>\n                <li>If <a href=\"/sec/sec-ecmascript-data-types-and-values.html\">Type</a>(<i>innerReturnResult</i>) is not Object, throw a\n                    <b>TypeError</b> exception.</li>\n                <li>Let <i>done</i> be <a href=\"/sec/sec-iteratorcomplete.html\">IteratorComplete</a>(<i>innerReturnResult</i>).</li>\n                <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>done</i>).</li>\n                <li>If <i>done</i> is <b>true</b>, then\n                  <ol class=\"block\">\n                    <li>Let <i>value</i> be <a href=\"/sec/sec-iteratorvalue.html\">IteratorValue</a>(<i>innerReturnResult</i>).</li>\n                    <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>value</i>).</li>\n                    <li>Return <a href=\"/sec/sec-completion-record-specification-type.html\">Completion</a>{[[type]]: <span style=\"font-family: sans-serif\">return</span> , [[value]]: <i>value</i>, [[target]]:<span style=\"font-family: sans-serif\">empty</span>}.</li>\n                  </ol>\n                </li>\n                <li>Let <i>received</i>  be <a href=\"/sec/sec-generatoryield.html\">GeneratorYield</a>(<i>innerReturnResult</i>).</li>\n              </ol>\n            </li>\n          </ol>\n        </li>\n      </ol>\n    </section>\n  "}