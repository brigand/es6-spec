{"id":"sec-generatorstart","html":"\n        <h1><span class=\"secnum\" id=\"sec-25.3.3.1\"><a href=\"/sec/sec-generatorstart.html\" title=\"link to this section\">25.3.3.1</a></span>\n            GeneratorStart (generator, generatorBody)</h1>\n\n        <p class=\"normalbefore\">The abstract operation GeneratorStart with arguments <span style=\"font-family: Times New\n        Roman\"><i>generator</i> and <i>generatorBody</i></span> performs the following steps:</p>\n\n        <ol class=\"proc\">\n          <li><a href=\"/sec/sec-algorithm-conventions.html\">Assert</a>: The value of <i>generator&#x2019;s</i> [[GeneratorState]] <a href=\"/sec/sec-object-internal-methods-and-internal-slots.html\">internal slot</a> is <b>undefined</b>.</li>\n          <li>Let <i>genContext</i> be <a href=\"/sec/sec-execution-contexts.html\">the running execution context</a>.</li>\n          <li>Set the Generator component of <i>genContext</i> to <i>generator.</i></li>\n          <li>Set the code evaluation state of <i>genContext</i> such that when evaluation is resumed for that <a href=\"/sec/sec-execution-contexts.html\">execution context</a> the following steps will be performed:\n            <ol class=\"nested proc\">\n              <li>Let <i>result</i> be the result of evaluating <i>generatorBody</i>.</li>\n              <li><a href=\"/sec/sec-algorithm-conventions.html\">Assert</a>: If we return here, the generator either threw an exception or\n                  performed either an implicit or explicit return.</li>\n              <li>Remove <i>genContext</i> from <a href=\"/sec/sec-execution-contexts.html\">the execution context stack</a> and restore the\n                  <a href=\"/sec/sec-execution-contexts.html\">execution context</a> that is at the top of <a href=\"/sec/sec-execution-contexts.html\">the execution context stack</a> as <a href=\"/sec/sec-execution-contexts.html\">the running\n                  execution context</a>.</li>\n              <li>Set <i>generator&#x2019;s</i> [[GeneratorState]] <a href=\"/sec/sec-object-internal-methods-and-internal-slots.html\">internal slot</a> to <code>&quot;completed&quot;</code>.</li>\n              <li>Once a generator enters the <code>&quot;completed&quot;</code> state it never leaves it and its associated <a href=\"/sec/sec-execution-contexts.html\">execution context</a> is never resumed. Any execution state associated with\n                  <i>generator</i> can be discarded at this point.</li>\n              <li>If <i>result</i> is a normal completion, let <i>resultValue</i> be <b>undefined</b>.</li>\n              <li>Else,\n                <ol class=\"block\">\n                  <li>If <i>result</i>.[[type]] is <span style=\"font-family: sans-serif\">return</span>, let <i>resultValue</i> be\n                      <i>result</i>.[[value]].</li>\n                  <li>Else, return <a href=\"/sec/sec-completion-record-specification-type.html\">Completion</a>(<i>result</i>).</li>\n                </ol>\n              </li>\n              <li>Return <a href=\"/sec/sec-createiterresultobject.html\">CreateIterResultObject</a>(<i>resultValue</i>, <b>true</b>).</li>\n            </ol>\n          </li>\n          <li>Set <i>generator&#x2019;s</i> [[GeneratorContext]] <a href=\"/sec/sec-object-internal-methods-and-internal-slots.html\">internal\n              slot</a> to <i>genContext</i>.</li>\n          <li>Set <i>generator&#x2019;s</i> [[GeneratorState]] <a href=\"/sec/sec-object-internal-methods-and-internal-slots.html\">internal\n              slot</a> to <code>&quot;suspendedStart&quot;</code>.</li>\n          <li>Return <a href=\"/sec/sec-normalcompletion.html\">NormalCompletion</a>(<b>undefined</b>).</li>\n        </ol>\n      "}