{"id":"sec-getexportednames","html":"\n          <h1><span class=\"secnum\" id=\"sec-15.2.1.16.2\"><a href=\"/sec/sec-getexportednames.html\" title=\"link to this section\">15.2.1.16.2</a></span> GetExportedNames( exportStarSet ) Concrete Method</h1>\n\n          <p class=\"normalbefore\">The GetExportedNames concrete method of a <a href=\"/sec/sec-source-text-module-records.html\">Source Text\n          Module Record</a> with argument <var>exportStarSet</var> performs the following steps:</p>\n\n          <ol class=\"proc\">\n            <li>Let <i>module</i> be this <a href=\"/sec/sec-source-text-module-records.html\">Source Text Module Record</a>.</li>\n            <li>If <i>exportStarSet</i> contains <i>module</i>, then\n              <ol class=\"block\">\n                <li><a href=\"/sec/sec-algorithm-conventions.html\">Assert</a>: We&#x2019;ve reached the starting point of an import *\n                    circularity.</li>\n                <li>Return a new empty <a href=\"/sec/sec-list-and-record-specification-type.html\">List</a>.</li>\n              </ol>\n            </li>\n            <li>Append <i>module</i> to <i>exportStarSet</i>.</li>\n            <li>Let <i>exportedNames</i> be a new empty <a href=\"/sec/sec-list-and-record-specification-type.html\">List</a>.</li>\n            <li>For each ExportEntry Record <i>e</i> in <i>module</i>.[[LocalExportEntries]], do\n              <ol class=\"block\">\n                <li><a href=\"/sec/sec-algorithm-conventions.html\">Assert</a>: <i>module</i> provides the direct binding for this\n                    export.</li>\n                <li>Append <i>e</i>.[[ExportName]] to <i>exportedNames</i>.</li>\n              </ol>\n            </li>\n            <li>For each ExportEntry Record <i>e</i> in <i>module</i>.[[IndirectExportEntries]], do\n              <ol class=\"block\">\n                <li><a href=\"/sec/sec-algorithm-conventions.html\">Assert</a>: <i>module</i> imports a specific binding for this\n                    export.</li>\n                <li>Append <i>e</i>.[[ExportName]] to <i>exportedNames</i>.</li>\n              </ol>\n            </li>\n            <li>For each ExportEntry Record <i>e</i> in <i>module</i>.[[StarExportEntries]], do\n              <ol class=\"block\">\n                <li>Let <i>requestedModule</i> be <a href=\"/sec/sec-hostresolveimportedmodule.html\">HostResolveImportedModule</a>(<i>module</i>,\n                    <i>e</i>.[[ModuleRequest]]).</li>\n                <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>requestedModule</i>).</li>\n                <li>Let <i>starNames</i> be <i>requestedModule.</i>GetExportedNames(<i>exportStarSet</i>).</li>\n                <li>For each element <i>n</i> of <i>starNames</i>, do\n                  <ol class=\"block\">\n                    <li>If <a href=\"/sec/sec-samevalue.html\">SameValue</a>(<i>n</i>, <code>&quot;default&quot;</code>) is <b>false</b>, then\n                      <ol class=\"block\">\n                        <li>If <i>n</i> is not an element of <i>exportedNames</i>, then\n                          <ol class=\"block\">\n                            <li>Append <i>n</i> to <i>exportedNames</i>.</li>\n                          </ol>\n                        </li>\n                      </ol>\n                    </li>\n                  </ol>\n                </li>\n              </ol>\n            </li>\n            <li>Return <i>exportedNames</i>.</li>\n          </ol>\n\n          <div class=\"note\">\n            <p><span class=\"nh\">NOTE</span> GetExportedNames does not filter out or throw an exception for names that have\n            ambiguous star export bindings.</p>\n          </div>\n        "}