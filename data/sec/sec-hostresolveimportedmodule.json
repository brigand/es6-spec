{"id":"sec-hostresolveimportedmodule","html":"\n        <h1><span class=\"secnum\" id=\"sec-15.2.1.17\"><a href=\"/sec/sec-hostresolveimportedmodule.html\" title=\"link to this section\">15.2.1.17</a></span> Runtime Semantics: HostResolveImportedModule (referencingModule,\n            specifier )</h1>\n\n        <p class=\"normalbefore\">HostResolveImportedModule is an implementation defined abstract operation that provides the\n        concrete <a href=\"/sec/sec-abstract-module-records.html\">Module Record</a> subclass instance that corresponds to the <span class=\"nt\">ModuleSpecifier</span> <var>String, specifier, occurring within the context of the module represented by the <a href=\"/sec/sec-abstract-module-records.html\">Module Record</a> referencingModule.</var></p>\n\n        <p class=\"normalbefore\">The implementation of HostResolveImportedModule must conform to the following requirements:</p>\n\n        <ul>\n          <li>\n            <p>The normal return value must be an instance of a concrete subclass of <a href=\"/sec/sec-abstract-module-records.html\">Module\n            Record</a>.</p>\n          </li>\n\n          <li>\n            <p>If a <a href=\"/sec/sec-abstract-module-records.html\">Module Record</a> corresponding to the pair <var>referencingModule,\n            specifier</var> does not exist or cannot be created, an exception must be thrown.</p>\n          </li>\n\n          <li>\n            <p>This operation must be idempotent if it completes normally. Each time it is called with a specific\n            <var>referencingModule, specifier</var> pair as arguments it must return the same <a href=\"/sec/sec-abstract-module-records.html\">Module Record</a> instance.</p>\n          </li>\n        </ul>\n\n        <p class=\"normalbefore\">Multiple different <var>referencingModule, specifier</var> pairs may map to the same <a href=\"/sec/sec-abstract-module-records.html\">Module Record</a> instance. The actual mapping semantic is implementation defined but\n        typically a normalization process is applied to <var>specifier</var> as part of the mapping process. A typical\n        normalization process would include actions such as alphabetic case folding and expansion of relative and abbreviated path\n        specifiers.</p>\n      "}