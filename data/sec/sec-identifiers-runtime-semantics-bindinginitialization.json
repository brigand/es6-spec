{"id":"sec-identifiers-runtime-semantics-bindinginitialization","html":"\n      <div class=\"front\">\n        <h1><span class=\"secnum\" id=\"sec-12.1.5\"><a href=\"/sec/sec-identifiers-runtime-semantics-bindinginitialization.html\" title=\"link to this section\">12.1.5</a></span> Runtime Semantics: BindingInitialization</h1>\n\n        <p>With arguments <var>value</var> and <var>environment</var>.</p>\n\n        <p>See also: <a href=\"/sec/sec-destructuring-binding-patterns-runtime-semantics-bindinginitialization.html\">13.3.3.5</a>, <a href=\"/sec/sec-for-in-and-for-of-statements-runtime-semantics-bindinginitialization.html\">13.7.5.9</a>.</p>\n\n        <div class=\"note\">\n          <p><span class=\"nh\">NOTE</span> <b>undefined</b> is passed for <var>environment</var> to indicate that a <a href=\"/sec/sec-putvalue.html\">PutValue</a> operation should be used to assign the initialization value. This is the case for\n          <code>var</code> statements and formal parameter lists of some non-strict functions (See <a href=\"/sec/sec-functiondeclarationinstantiation.html\">9.2.12</a>). In those cases a lexical binding is hoisted and preinitialized\n          prior to evaluation of its initializer.</p>\n        </div>\n\n        <div class=\"gp prod\"><span class=\"nt\">BindingIdentifier</span> <span class=\"geq\">:</span> <span class=\"nt\">Identifier</span></div>\n        <ol class=\"proc\">\n          <li>Let <i>name</i> be StringValue of <i>Identifier</i>.</li>\n          <li>Return <a href=\"/sec/sec-initializeboundname.html\">InitializeBoundName</a>( <i>name</i>, <i>value</i>,\n              <i>environment</i>).</li>\n        </ol>\n        <div class=\"gp prod\"><span class=\"nt\">BindingIdentifier</span> <span class=\"geq\">:</span> <code class=\"t\">yield</code></div>\n        <ol class=\"proc\">\n          <li>Return <a href=\"/sec/sec-initializeboundname.html\">InitializeBoundName</a>(<code>&quot;yield&quot;</code>, <i>value</i>,\n              <i>environment</i>).</li>\n        </ol>\n      </div>\n\n      <section id=\"sec-initializeboundname\">\n        <h1><span class=\"secnum\" id=\"sec-12.1.5.1\"><a href=\"/sec/sec-initializeboundname.html\" title=\"link to this section\">12.1.5.1</a></span> Runtime Semantics: InitializeBoundName(name, value, environment)</h1>\n        <ol class=\"proc\">\n          <li><a href=\"/sec/sec-algorithm-conventions.html\">Assert</a>: <a href=\"/sec/sec-ecmascript-data-types-and-values.html\">Type</a>(<i>name</i>) is String.</li>\n          <li>If <i>environment</i> is not <b>undefined</b>, then\n            <ol class=\"block\">\n              <li>Let <i>env</i> be the <a href=\"/sec/sec-lexical-environments.html\">EnvironmentRecord</a> component of\n                  <i>environment</i>.</li>\n              <li>Perform <i>env</i>.InitializeBinding(<i>name</i>, <i>value</i>).</li>\n              <li>Return <a href=\"/sec/sec-normalcompletion.html\">NormalCompletion</a>(<b>undefined</b>).</li>\n            </ol>\n          </li>\n          <li>Else\n            <ol class=\"block\">\n              <li>Let <i>lhs</i> be <a href=\"/sec/sec-resolvebinding.html\">ResolveBinding</a>(<i>name</i>).</li>\n              <li>Return <a href=\"/sec/sec-putvalue.html\">PutValue</a>(<i>lhs</i>, <i>value</i>).</li>\n            </ol>\n          </li>\n        </ol>\n      </section>\n    "}