{"id":"sec-if-statement-runtime-semantics-evaluation","html":"\n      <h1><span class=\"secnum\" id=\"sec-13.6.7\"><a href=\"/sec/sec-if-statement-runtime-semantics-evaluation.html\" title=\"link to this section\">13.6.7</a></span> Runtime Semantics:  Evaluation</h1>\n      <div class=\"gp prod\"><span class=\"nt\">IfStatement</span> <span class=\"geq\">:</span> <code class=\"t\">if</code> <code class=\"t\">(</code> <span class=\"nt\">Expression</span> <code class=\"t\">)</code> <span class=\"nt\">Statement</span> <code class=\"t\">else</code> <span class=\"nt\">Statement</span></div>\n      <ol class=\"proc\">\n        <li>Let <i>exprRef</i> be the result of evaluating <i>Expression</i>.</li>\n        <li>Let <i>exprValue</i> be <a href=\"/sec/sec-toboolean.html\">ToBoolean</a>(<a href=\"/sec/sec-getvalue.html\">GetValue</a>(<i>exprRef</i>)).</li>\n        <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>exprValue</i>).</li>\n        <li>If <i>exprValue</i> is <b>true</b>, then\n          <ol class=\"block\">\n            <li>Let <i>stmtCompletion</i> be the result of evaluating the first <i>Statement</i>.</li>\n          </ol>\n        </li>\n        <li>Else,\n          <ol class=\"block\">\n            <li>Let <i>stmtCompletion</i> be the result of evaluating the second <i>Statement</i>.</li>\n          </ol>\n        </li>\n        <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>stmtCompletion</i>).</li>\n        <li>If <i>stmtCompletion</i>.[[value]] is not <span style=\"font-family: sans-serif\">empty</span>, return\n            <i>stmtCompletion</i>.</li>\n        <li>Return <a href=\"/sec/sec-normalcompletion.html\">NormalCompletion</a>(<b>undefined</b>).</li>\n      </ol>\n      <div class=\"gp prod\"><span class=\"nt\">IfStatement</span> <span class=\"geq\">:</span> <code class=\"t\">if</code> <code class=\"t\">(</code> <span class=\"nt\">Expression</span> <code class=\"t\">)</code> <span class=\"nt\">Statement</span></div>\n      <ol class=\"proc\">\n        <li>Let <i>exprRef</i> be the result of evaluating <i>Expression</i>.</li>\n        <li>Let <i>exprValue</i> be <a href=\"/sec/sec-toboolean.html\">ToBoolean</a>(<a href=\"/sec/sec-getvalue.html\">GetValue</a>(<i>exprRef</i>)).</li>\n        <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>exprValue</i>).</li>\n        <li>If <i>exprValue</i> is <b>false</b>, then\n          <ol class=\"block\">\n            <li>Return <a href=\"/sec/sec-normalcompletion.html\">NormalCompletion</a>(<b>undefined</b>).</li>\n          </ol>\n        </li>\n        <li>Else,\n          <ol class=\"block\">\n            <li>Let <i>stmtCompletion</i> be the result of evaluating <i>Statement</i>.</li>\n            <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>stmtCompletion</i>).</li>\n            <li>If <i>stmtCompletion</i>.[[value]] is not <span style=\"font-family: sans-serif\">empty</span>, return\n                <i>stmtCompletion</i>.</li>\n            <li>Return <a href=\"/sec/sec-normalcompletion.html\">NormalCompletion</a>(<b>undefined</b>).</li>\n          </ol>\n        </li>\n      </ol>\n    "}