{"id":"sec-instanceofoperator","html":"\n      <h1><span class=\"secnum\" id=\"sec-12.9.4\"><a href=\"/sec/sec-instanceofoperator.html\" title=\"link to this section\">12.9.4</a></span>\n          Runtime Semantics: InstanceofOperator(O, C)</h1>\n\n      <p class=\"normalbefore\">The abstract operation <span style=\"font-family: Times New Roman\">InstanceofOperator(<i>O</i>,\n      <i>C</i>)</span> implements the generic algorithm for determining if an object <var>O</var> inherits from the inheritance\n      path defined by constructor <var>C</var>. This abstract operation performs the following steps:</p>\n\n      <ol class=\"proc\">\n        <li>If <a href=\"/sec/sec-ecmascript-data-types-and-values.html\">Type</a>(<i>C</i>) is not Object, throw a <b>TypeError</b>\n            exception.</li>\n        <li>Let <i>instOfHandler</i> be <a href=\"/sec/sec-getmethod.html\">GetMethod</a>(<i>C</i>,@@hasInstance).</li>\n        <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>instOfHandler</i>).</li>\n        <li>If <i>instOfHandler</i> is not <b>undefined</b>, then\n          <ol class=\"block\">\n            <li>Return <a href=\"/sec/sec-toboolean.html\">ToBoolean</a>(<a href=\"/sec/sec-call.html\">Call</a>(<i>instOfHandler</i>, <i>C</i>,\n                &#xAB;<i>O</i>&#xBB;)).</li>\n          </ol>\n        </li>\n        <li>If <a href=\"/sec/sec-iscallable.html\">IsCallable</a>(<i>C</i>) is <b>false</b>, throw a <b>TypeError</b> exception.</li>\n        <li>Return <a href=\"/sec/sec-ordinaryhasinstance.html\">OrdinaryHasInstance</a>(<i>C</i>, <i>O</i>).</li>\n      </ol>\n\n      <div class=\"note\">\n        <p><span class=\"nh\">NOTE</span> Steps 5 and 6 provide compatibility with previous editions of ECMAScript that did not use\n        a @@hasInstance method to define the <code>instanceof</code> operator semantics. If a function object does not define or\n        inherit @@hasInstance it uses the default <code>instanceof</code> semantics.</p>\n      </div>\n    "}