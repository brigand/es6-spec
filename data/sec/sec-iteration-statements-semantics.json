{"id":"sec-iteration-statements-semantics","html":"\n      <div class=\"front\">\n        <h1><span class=\"secnum\" id=\"sec-13.7.1\"><a href=\"/sec/sec-iteration-statements-semantics.html\" title=\"link to this section\">13.7.1</a></span> Semantics</h1>\n      </div>\n\n      <section id=\"sec-semantics-static-semantics-early-errors\">\n        <h1><span class=\"secnum\" id=\"sec-13.7.1.1\"><a href=\"/sec/sec-semantics-static-semantics-early-errors.html\" title=\"link to this section\">13.7.1.1</a></span> Static Semantics:  Early Errors</h1>\n\n        <div class=\"gp\">\n          <div class=\"lhs\"><span class=\"nt\">IterationStatement</span> <span class=\"geq\">:</span></div>\n          <div class=\"rhs\"><code class=\"t\">do</code> <span class=\"nt\">Statement</span> <code class=\"t\">while</code> <code class=\"t\">(</code> <span class=\"nt\">Expression</span> <code class=\"t\">)</code> <code class=\"t\">;</code></div>\n          <div class=\"rhs\"><code class=\"t\">while</code> <code class=\"t\">(</code> <span class=\"nt\">Expression</span> <code class=\"t\">)</code> <span class=\"nt\">Statement</span></div>\n          <div class=\"rhs\"><code class=\"t\">for</code> <code class=\"t\">(</code> <span class=\"nt\">Expression</span><sub class=\"g-opt\">opt</sub> <code class=\"t\">;</code> <span class=\"nt\">Expression</span><sub class=\"g-opt\">opt</sub> <code class=\"t\">;</code> <span class=\"nt\">Expression</span><sub class=\"g-opt\">opt</sub> <code class=\"t\">)</code> <span class=\"nt\">Statement</span></div>\n          <div class=\"rhs\"><code class=\"t\">for</code> <code class=\"t\">(</code> <code class=\"t\">var</code> <span class=\"nt\">VariableDeclarationList</span> <code class=\"t\">;</code> <span class=\"nt\">Expression</span><sub class=\"g-opt\">opt</sub> <code class=\"t\">;</code> <span class=\"nt\">Expression</span><sub class=\"g-opt\">opt</sub> <code class=\"t\">)</code> <span class=\"nt\">Statement</span></div>\n          <div class=\"rhs\"><code class=\"t\">for</code> <code class=\"t\">(</code> <span class=\"nt\">LexicalDeclaration</span> <span class=\"nt\">Expression</span><sub class=\"g-opt\">opt</sub> <code class=\"t\">;</code> <span class=\"nt\">Expression</span><sub class=\"g-opt\">opt</sub> <code class=\"t\">)</code> <span class=\"nt\">Statement</span></div>\n          <div class=\"rhs\"><code class=\"t\">for</code> <code class=\"t\">(</code> <span class=\"nt\">LeftHandSideExpression</span> <code class=\"t\">in</code> <span class=\"nt\">Expression</span> <code class=\"t\">)</code> <span class=\"nt\">Statement</span></div>\n          <div class=\"rhs\"><code class=\"t\">for</code> <code class=\"t\">(</code> <code class=\"t\">var</code> <span class=\"nt\">ForBinding</span> <code class=\"t\">in</code> <span class=\"nt\">Expression</span> <code class=\"t\">)</code> <span class=\"nt\">Statement</span></div>\n          <div class=\"rhs\"><code class=\"t\">for</code> <code class=\"t\">(</code> <span class=\"nt\">ForDeclaration</span> <code class=\"t\">in</code> <span class=\"nt\">Expression</span> <code class=\"t\">)</code> <span class=\"nt\">Statement</span></div>\n          <div class=\"rhs\"><code class=\"t\">for</code> <code class=\"t\">(</code> <span class=\"nt\">LeftHandSideExpression</span> <code class=\"t\">of</code> <span class=\"nt\">AssignmentExpression</span> <code class=\"t\">)</code> <span class=\"nt\">Statement</span></div>\n          <div class=\"rhs\"><code class=\"t\">for</code> <code class=\"t\">(</code> <code class=\"t\">var</code> <span class=\"nt\">ForBinding</span> <code class=\"t\">of</code> <span class=\"nt\">AssignmentExpression</span> <code class=\"t\">)</code> <span class=\"nt\">Statement</span></div>\n          <div class=\"rhs\"><code class=\"t\">for</code> <code class=\"t\">(</code> <span class=\"nt\">ForDeclaration</span> <code class=\"t\">of</code> <span class=\"nt\">AssignmentExpression</span> <code class=\"t\">)</code> <span class=\"nt\">Statement</span></div>\n        </div>\n\n        <ul>\n          <li>It is a Syntax Error if <a href=\"/sec/sec-islabelledfunction.html\">IsLabelledFunction</a>(<span class=\"nt\">Statement</span>)\n              is <span class=\"value\">true</span>.</li>\n        </ul>\n\n        <div class=\"note\">\n          <p><span class=\"nh\">NOTE</span> It is only necessary to apply this rule if the extension specified in  <a href=\"/sec/sec-labelled-function-declarations.html\">B.3.2</a> is implemented.</p>\n        </div>\n      </section>\n\n      <section id=\"sec-loopcontinues\">\n        <h1><span class=\"secnum\" id=\"sec-13.7.1.2\"><a href=\"/sec/sec-loopcontinues.html\" title=\"link to this section\">13.7.1.2</a></span>\n            Runtime Semantics: LoopContinues(completion, labelSet)</h1>\n\n        <p class=\"normalbefore\">The abstract operation <span style=\"font-family: Times New Roman\">LoopContinues</span> with\n        arguments <var>completion</var> and <var>labelSet</var> is defined by the following steps:</p>\n\n        <ol class=\"proc\">\n          <li>If <i>completion</i>.[[type]] is <span style=\"font-family: sans-serif\">normal</span>, return <b>true</b>.</li>\n          <li>If <i>completion</i>.[[type]] is not <span style=\"font-family: sans-serif\">continue</span>, return\n              <b>false</b>.</li>\n          <li>If <i>completion</i>.[[target]] is <span style=\"font-family: sans-serif\">empty</span>, return <b>true</b>.</li>\n          <li>If <i>completion</i>.[[target]] is an element of <i>labelSet</i>, return <b>true</b>.</li>\n          <li>Return <b>false</b>.</li>\n        </ol>\n\n        <div class=\"note\">\n          <p><span class=\"nh\">NOTE</span> Within the <span class=\"nt\">Statement</span> part of an <span class=\"nt\">IterationStatement</span> a <span class=\"nt\">ContinueStatement</span> may be used to begin a new\n          iteration.</p>\n        </div>\n      </section>\n    "}