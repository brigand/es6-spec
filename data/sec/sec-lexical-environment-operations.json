{"id":"sec-lexical-environment-operations","html":"\n      <div class=\"front\">\n        <h1><span class=\"secnum\" id=\"sec-8.1.2\"><a href=\"/sec/sec-lexical-environment-operations.html\" title=\"link to this section\">8.1.2</a></span> Lexical Environment Operations</h1>\n\n        <p>The following abstract operations are used in this specification to operate upon lexical environments:</p>\n      </div>\n\n      <section id=\"sec-getidentifierreference\">\n        <h1><span class=\"secnum\" id=\"sec-8.1.2.1\"><a href=\"/sec/sec-getidentifierreference.html\" title=\"link to this section\">8.1.2.1</a></span> GetIdentifierReference (lex, name, strict)</h1>\n\n        <p class=\"normalbefore\">The abstract operation GetIdentifierReference is called with a <a href=\"/sec/sec-lexical-environments.html\">Lexical Environment</a> <var>lex</var>, a String <var>name</var>, and a Boolean flag\n        <var>strict.</var> The value of <var>lex</var> may be <b>null</b>. When called, the following steps are performed:</p>\n\n        <ol class=\"proc\">\n          <li>If <i>lex</i> is the value <b>null</b>, then\n            <ol class=\"block\">\n              <li>Return a value of type <a href=\"/sec/sec-reference-specification-type.html\">Reference</a> whose base value is\n                  <b>undefined</b>, whose referenced name is <i>name</i>, and whose strict reference flag is <i>strict</i>.</li>\n            </ol>\n          </li>\n          <li>Let <i>envRec</i> be <i>lex</i>&#x2019;s <a href=\"/sec/sec-lexical-environments.html\">EnvironmentRecord</a>.</li>\n          <li>Let <i>exists</i> be <i>envRec</i>.HasBinding(<i>name</i>).</li>\n          <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>exists</i>).</li>\n          <li>If <i>exists</i> is <b>true</b>, then\n            <ol class=\"block\">\n              <li>Return a value of type <a href=\"/sec/sec-reference-specification-type.html\">Reference</a> whose base value is\n                  <i>envRec</i>, whose referenced name is <i>name</i>, and whose strict reference flag is <i>strict.</i></li>\n            </ol>\n          </li>\n          <li>Else\n            <ol class=\"block\">\n              <li>Let <i>outer</i> be the value of <i>lex&#x2019;s</i> <a href=\"/sec/sec-lexical-environments.html\">outer environment\n                  reference</a>.</li>\n              <li>Return GetIdentifierReference(<i>outer</i>, <i>name</i>, <i>strict</i>).</li>\n            </ol>\n          </li>\n        </ol>\n      </section>\n\n      <section id=\"sec-newdeclarativeenvironment\">\n        <h1><span class=\"secnum\" id=\"sec-8.1.2.2\"><a href=\"/sec/sec-newdeclarativeenvironment.html\" title=\"link to this section\">8.1.2.2</a></span> NewDeclarativeEnvironment (E)</h1>\n\n        <p class=\"normalbefore\">When the abstract operation NewDeclarativeEnvironment is called with a <a href=\"/sec/sec-lexical-environments.html\">Lexical Environment</a> as argument <var>E</var> the following steps are performed:</p>\n\n        <ol class=\"proc\">\n          <li>Let <i>env</i> be a new <a href=\"/sec/sec-lexical-environments.html\">Lexical Environment</a>.</li>\n          <li>Let <i>envRec</i> be a new declarative <a href=\"/sec/sec-environment-records.html\">Environment Record</a> containing no\n              bindings.</li>\n          <li>Set <i>env&#x2019;s</i> <a href=\"/sec/sec-lexical-environments.html\">EnvironmentRecord</a> to be <i>envRec</i>.</li>\n          <li>Set the <a href=\"/sec/sec-lexical-environments.html\">outer lexical environment reference</a> of <i>env</i> to <i>E</i>.</li>\n          <li>Return <i>env</i>.</li>\n        </ol>\n      </section>\n\n      <section id=\"sec-newobjectenvironment\">\n        <h1><span class=\"secnum\" id=\"sec-8.1.2.3\"><a href=\"/sec/sec-newobjectenvironment.html\" title=\"link to this section\">8.1.2.3</a></span> NewObjectEnvironment (O, E)</h1>\n\n        <p class=\"normalbefore\">When the abstract operation NewObjectEnvironment is called with an Object <var>O</var> and a <a href=\"/sec/sec-lexical-environments.html\">Lexical Environment</a> <var>E</var> as arguments, the following steps are performed:</p>\n\n        <ol class=\"proc\">\n          <li>Let <i>env</i> be a new <a href=\"/sec/sec-lexical-environments.html\">Lexical Environment</a>.</li>\n          <li>Let <i>envRec</i> be a new object <a href=\"/sec/sec-environment-records.html\">Environment Record</a> containing <i>O</i> as\n              the binding object.</li>\n          <li>Set <i>env&#x2019;s</i> <a href=\"/sec/sec-lexical-environments.html\">EnvironmentRecord</a> to <i>envRec</i>.</li>\n          <li>Set the <a href=\"/sec/sec-lexical-environments.html\">outer lexical environment reference</a> of <i>env</i> to <i>E</i>.</li>\n          <li>Return <i>env</i>.</li>\n        </ol>\n      </section>\n\n      <section id=\"sec-newfunctionenvironment\">\n        <h1><span class=\"secnum\" id=\"sec-8.1.2.4\"><a href=\"/sec/sec-newfunctionenvironment.html\" title=\"link to this section\">8.1.2.4</a></span> NewFunctionEnvironment ( F, newTarget )</h1>\n\n        <p class=\"normalbefore\">When the abstract operation NewFunctionEnvironment is called with arguments <var>F</var> and\n        <var>newTarget</var> the following steps are performed:</p>\n\n        <ol class=\"proc\">\n          <li><a href=\"/sec/sec-algorithm-conventions.html\">Assert</a>: <i>F</i> is an ECMAScript function.</li>\n          <li><a href=\"/sec/sec-algorithm-conventions.html\">Assert</a>: <a href=\"/sec/sec-ecmascript-data-types-and-values.html\">Type</a>(<i>newTarget</i>) is Undefined or Object.</li>\n          <li>Let <i>env</i> be a new <a href=\"/sec/sec-lexical-environments.html\">Lexical Environment</a>.</li>\n          <li>Let <i>envRec</i> be a new function <a href=\"/sec/sec-environment-records.html\">Environment Record</a> containing no\n              bindings.</li>\n          <li>Set <i>envRec</i>.[[FunctionObject]] to <i>F</i>.</li>\n          <li>If <i>F&#x2019;s</i> [[ThisMode]] <a href=\"/sec/sec-object-internal-methods-and-internal-slots.html\">internal slot</a> is\n              <span style=\"font-family: sans-serif\">lexical</span>, set <i>envRec</i>.[[thisBindingStatus]] to\n              <code>&quot;lexical&quot;</code>.</li>\n          <li>Else, Set <i>envRec</i>.[[thisBindingStatus]] to <code>&quot;uninitialized&quot;</code>.</li>\n          <li>Let <i>home</i> be the value of <i>F&#x2019;s</i> [[HomeObject]] <a href=\"/sec/sec-object-internal-methods-and-internal-slots.html\">internal slot</a>.</li>\n          <li>Set <i>envRec</i>.[[HomeObject]] to <i>home</i>.</li>\n          <li>Set <i>envRec</i>.[[NewTarget]] to  <i>newTarget</i>.</li>\n          <li>Set <i>env&#x2019;s</i> <a href=\"/sec/sec-lexical-environments.html\">EnvironmentRecord</a> to be <i>envRec</i>.</li>\n          <li>Set the <a href=\"/sec/sec-lexical-environments.html\">outer lexical environment reference</a> of <i>env</i> to the value of\n              <i>F&#x2019;s</i> [[Environment]] <a href=\"/sec/sec-object-internal-methods-and-internal-slots.html\">internal slot</a>.</li>\n          <li>Return <i>env</i>.</li>\n        </ol>\n      </section>\n\n      <section id=\"sec-newglobalenvironment\">\n        <h1><span class=\"secnum\" id=\"sec-8.1.2.5\"><a href=\"/sec/sec-newglobalenvironment.html\" title=\"link to this section\">8.1.2.5</a></span> NewGlobalEnvironment ( G )</h1>\n\n        <p class=\"normalbefore\">When the abstract operation NewGlobalEnvironment is called with an ECMAScript Object <var>G</var>\n        as its argument, the following steps are performed:</p>\n\n        <ol class=\"proc\">\n          <li>Let <i>env</i> be a new <a href=\"/sec/sec-lexical-environments.html\">Lexical Environment</a>.</li>\n          <li>Let <i>objRec</i> be a new object <a href=\"/sec/sec-environment-records.html\">Environment Record</a> containing <i>G</i> as\n              the binding object.</li>\n          <li>Let <i>dclRec</i> be a new declarative <a href=\"/sec/sec-environment-records.html\">Environment Record</a> containing no\n              bindings.</li>\n          <li>Let <i>globalRec</i> be a new global <a href=\"/sec/sec-environment-records.html\">Environment Record</a>.</li>\n          <li>Set <i>globalRec</i>.[[ObjectRecord]] to <i>objRec</i>.</li>\n          <li>Set <i>globalRec</i>.[[DeclarativeRecord]] to <i>dclRec</i>.</li>\n          <li>Set <i>globalRec</i>.[[VarNames]] to a new empty <a href=\"/sec/sec-list-and-record-specification-type.html\">List</a>.</li>\n          <li>Set <i>env&#x2019;s</i> <a href=\"/sec/sec-lexical-environments.html\">EnvironmentRecord</a> to <i>globalRec</i>.</li>\n          <li>Set the <a href=\"/sec/sec-lexical-environments.html\">outer lexical environment reference</a> of <i>env</i> to\n              <b>null</b></li>\n          <li>Return <i>env</i>.</li>\n        </ol>\n      </section>\n\n      <section id=\"sec-newmoduleenvironment\">\n        <h1><span class=\"secnum\" id=\"sec-8.1.2.6\"><a href=\"/sec/sec-newmoduleenvironment.html\" title=\"link to this section\">8.1.2.6</a></span> NewModuleEnvironment (E)</h1>\n\n        <p class=\"normalbefore\">When the abstract operation NewModuleEnvironment is called with a <a href=\"/sec/sec-lexical-environments.html\">Lexical Environment</a> argument <var>E</var> the following steps are performed:</p>\n\n        <ol class=\"proc\">\n          <li>Let <i>env</i> be a new <a href=\"/sec/sec-lexical-environments.html\">Lexical Environment</a>.</li>\n          <li>Let <i>envRec</i> be a new module <a href=\"/sec/sec-environment-records.html\">Environment Record</a> containing no\n              bindings.</li>\n          <li>Set <i>env&#x2019;s</i> <a href=\"/sec/sec-lexical-environments.html\">EnvironmentRecord</a> to be <i>envRec</i>.</li>\n          <li>Set the <a href=\"/sec/sec-lexical-environments.html\">outer lexical environment reference</a> of <i>env</i> to <i>E</i>.</li>\n          <li>Return <i>env</i>.</li>\n        </ol>\n      </section>\n    "}