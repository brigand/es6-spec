{"id":"sec-list-and-record-specification-type","html":"\n      <h1><span class=\"secnum\" id=\"sec-6.2.1\"><a href=\"/sec/sec-list-and-record-specification-type.html\" title=\"link to this section\">6.2.1</a></span> The List and Record Specification Type</h1>\n\n      <p>The List type is used to explain the evaluation of argument lists (<a href=\"/sec/sec-argument-lists.html\">see 12.3.6</a>) in\n      <code>new</code> expressions, in function calls, and in other algorithms where a simple ordered list of values is needed.\n      Values of the List type are simply ordered sequences of list elements containing the individual values. These sequences may\n      be of any length. The elements of a list may be randomly accessed using 0-origin indices. For notational convenience an\n      array-like syntax can be used to access List elements. For example, <i>arguments</i>[2] is shorthand for saying the\n      3<sup>rd</sup> element of the List <i>arguments</i>.</p>\n\n      <p>For notational convenience within this specification, a literal syntax can be used to express a new List value. For\n      example, &#xAB;1, 2&#xBB; defines a List value that has two elements each of which is initialized to a specific value. A\n      new empty List can be expressed as &#xAB;&#xBB;.</p>\n\n      <p>The Record type is used to describe data aggregations within the algorithms of this specification. A Record type value\n      consists of one or more named fields. The value of each field is either an ECMAScript value or an abstract value represented\n      by a name associated with the Record type. Field names are always enclosed in double brackets, for example [[value]].</p>\n\n      <p>For notational convenience within this specification, an object literal-like syntax can be used to express a Record\n      value. For example, {[[field1]]: 42, [[field2]]: <b>false</b>, [[field3]]: <b>empty</b>} defines a Record value that has\n      three fields, each of which is initialized to a specific value. Field name order is not significant. Any fields that are not\n      explicitly listed are considered to be absent.</p>\n\n      <p>In specification text and algorithms, dot notation may be used to refer to a specific field of a Record value. For\n      example, if R is the record shown in the previous paragraph then R.[[field2]] is shorthand for &#x201C;the field of R named\n      [[field2]]&#x201D;.</p>\n\n      <p>Schema for commonly used Record field combinations may be named, and that name may be used as a prefix to a literal\n      Record value to identify the specific kind of aggregations that is being described. For example:\n      PropertyDescriptor{[[Value]]: 42, [[Writable]]: <b>false</b>, [[Configurable]]: <b>true</b>}.</p>\n    "}