{"id":"sec-makeconstructor","html":"\n      <h1><span class=\"secnum\" id=\"sec-9.2.8\"><a href=\"/sec/sec-makeconstructor.html\" title=\"link to this section\">9.2.8</a></span>\n          MakeConstructor (F, writablePrototype, prototype)</h1>\n\n      <p class=\"normalbefore\">The abstract operation MakeConstructor requires a Function argument <var>F</var> and optionally, a\n      Boolean <var>writablePrototype</var> and an object <var>prototype</var>. If <var>prototype</var> is provided it is assumed\n      to already contain, if needed, a <code>&quot;constructor&quot;</code> property whose value is <var>F</var>. This operation converts\n      <var>F</var> into a constructor by performing the following steps:</p>\n\n      <ol class=\"proc\">\n        <li><a href=\"/sec/sec-algorithm-conventions.html\">Assert</a>: <i>F</i> is an <a href=\"/sec/sec-ecmascript-function-objects.html\">ECMAScript\n            function object</a>.</li>\n        <li><a href=\"/sec/sec-algorithm-conventions.html\">Assert</a>: <i>F</i> has a [[Construct]] internal method.</li>\n        <li><a href=\"/sec/sec-algorithm-conventions.html\">Assert</a>: <i>F</i> is an extensible object that does not have a\n            <code>prototype</code> own property.</li>\n        <li>If the <i>writablePrototype</i> argument was not provided, let <i>writablePrototype</i> be <b>true</b>.</li>\n        <li>If the <i>prototype</i> argument was not provided, then\n          <ol class=\"block\">\n            <li>Let <i>prototype</i> be <a href=\"/sec/sec-objectcreate.html\">ObjectCreate</a>(<span style=\"font-family:\n                sans-serif\">%ObjectPrototype%</span>).</li>\n            <li>Let <i>status</i> be <a href=\"/sec/sec-definepropertyorthrow.html\">DefinePropertyOrThrow</a>(<i>prototype</i>,\n                <code>&quot;constructor&quot;</code>, PropertyDescriptor{[[Value]]: <i>F</i>, [[Writable]]: <i>writablePrototype</i>,\n                [[Enumerable]]: <b>false</b>, [[Configurable]]: <b>true</b> }).</li>\n            <li><a href=\"/sec/sec-algorithm-conventions.html\">Assert</a>: <i>status</i> is not an <a href=\"/sec/sec-completion-record-specification-type.html\">abrupt completion</a>.</li>\n          </ol>\n        </li>\n        <li>Let <i>status</i> be <a href=\"/sec/sec-definepropertyorthrow.html\">DefinePropertyOrThrow</a>(<i>F</i>,\n            <code>&quot;prototype&quot;</code>, PropertyDescriptor{[[Value]]: <i>prototype</i>, [[Writable]]: <i>writablePrototype</i>,\n            [[Enumerable]]: <b>false</b>, [[Configurable]]: <b>false</b>}).</li>\n        <li><a href=\"/sec/sec-algorithm-conventions.html\">Assert</a>: <i>status</i> is not an <a href=\"/sec/sec-completion-record-specification-type.html\">abrupt completion</a>.</li>\n        <li>Return <a href=\"/sec/sec-normalcompletion.html\">NormalCompletion</a>(<b>undefined</b>).</li>\n      </ol>\n    "}