{"id":"sec-map-constructor","html":"\n      <div class=\"front\">\n        <h1><span class=\"secnum\" id=\"sec-23.1.1\"><a href=\"/sec/sec-map-constructor.html\" title=\"link to this section\">23.1.1</a></span> The\n            Map Constructor</h1>\n\n        <p>The Map constructor is the %Map% intrinsic object and the initial value of the <code>Map</code> property of the global\n        object. When called as a constructor it creates and initializes a new Map object. <code>Map</code> is not intended to be\n        called as a function and will throw an exception when called in that manner.</p>\n\n        <p>The <code>Map</code> constructor is designed to be subclassable. It may be used as the value in an <code>extends</code>\n        clause of a class definition. Subclass constructors that intend to inherit the specified <code>Map</code> behaviour must\n        include a <code>super</code> call to the <code>Map</code> constructor to create and initialize the subclass instance with\n        the internal state necessary to support the <code>Map.prototype</code> built-in methods.</p>\n      </div>\n\n      <section id=\"sec-map-iterable\">\n        <h1><span class=\"secnum\" id=\"sec-23.1.1.1\"><a href=\"/sec/sec-map-iterable.html\" title=\"link to this section\">23.1.1.1</a></span>\n            Map ( [ iterable ] )</h1>\n\n        <p class=\"normalbefore\">When the <code>Map</code> function is called with optional argument the following steps are\n        taken:</p>\n\n        <ol class=\"proc\">\n          <li>If NewTarget is <b>undefined</b>, throw a <b>TypeError</b> exception.</li>\n          <li>Let <i>map</i> be <a href=\"/sec/sec-ordinarycreatefromconstructor.html\">OrdinaryCreateFromConstructor</a>(NewTarget,\n              <code>&quot;%MapPrototype%&quot;</code>, &#xAB;&#x200D;[[MapData]]&#xBB; ).</li>\n          <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>map</i>).</li>\n          <li>Set <i>map&#x2019;s</i> [[MapData]] <a href=\"/sec/sec-object-internal-methods-and-internal-slots.html\">internal slot</a> to a\n              new empty <a href=\"/sec/sec-list-and-record-specification-type.html\">List</a>.</li>\n          <li>If <i>iterable</i> is not present, let <i>iterable</i> be <b>undefined</b>.</li>\n          <li>If <i>iterable</i> is either <b>undefined</b> or <b>null</b>, let <i>iter</i> be <b>undefined</b>.</li>\n          <li>Else,\n            <ol class=\"block\">\n              <li>Let <i>adder</i> be <a href=\"/sec/sec-get-o-p.html\">Get</a>(<i>map</i>, <code>&quot;set&quot;</code>)<b>.</b></li>\n              <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>adder</i>).</li>\n              <li>If <a href=\"/sec/sec-iscallable.html\">IsCallable</a>(<i>adder</i>) is <b>false</b>, throw a <b>TypeError</b>\n                  exception.</li>\n              <li>Let <i>iter</i> be <a href=\"/sec/sec-getiterator.html\">GetIterator</a>(<i>iterable</i>).</li>\n              <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>iter</i>).</li>\n            </ol>\n          </li>\n          <li>If <i>iter</i> is <b>undefined</b>, return <i>map</i>.</li>\n          <li>Repeat\n            <ol class=\"block\">\n              <li>Let <i>next</i> be <a href=\"/sec/sec-iteratorstep.html\">IteratorStep</a>(<i>iter</i>).</li>\n              <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>next</i>).</li>\n              <li>If <i>next</i> is <b>false</b>, return <i>map</i>.</li>\n              <li>Let <i>nextItem</i> be <a href=\"/sec/sec-iteratorvalue.html\">IteratorValue</a>(<i>next</i>).</li>\n              <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>nextItem</i>).</li>\n              <li>If <a href=\"/sec/sec-ecmascript-data-types-and-values.html\">Type</a>(<i>nextItem</i>) is not Object,\n                <ol class=\"block\">\n                  <li>Let <i>error</i> be <a href=\"/sec/sec-completion-record-specification-type.html\">Completion</a>{[[type]]: <span style=\"font-family: sans-serif\">throw</span>, [[value]]: a newly created <b>TypeError</b> object,\n                      [[target]]:<span style=\"font-family: sans-serif\">empty</span>}.</li>\n                  <li>Return <a href=\"/sec/sec-iteratorclose.html\">IteratorClose</a>(<i>iter</i>, <i>error</i>).</li>\n                </ol>\n              </li>\n              <li>Let <i>k</i> be <a href=\"/sec/sec-get-o-p.html\">Get</a>(<i>nextItem</i>, <code>&quot;0&quot;</code>).</li>\n              <li>If <i>k</i> is an <a href=\"/sec/sec-completion-record-specification-type.html\">abrupt completion</a>, return <a href=\"/sec/sec-iteratorclose.html\">IteratorClose</a>(<i>iter</i>, <i>k</i>).</li>\n              <li>Let <i>v</i> be <a href=\"/sec/sec-get-o-p.html\">Get</a>(<i>nextItem</i>, <code>&quot;1&quot;</code>).</li>\n              <li>If <i>v</i> is an <a href=\"/sec/sec-completion-record-specification-type.html\">abrupt completion</a>, return <a href=\"/sec/sec-iteratorclose.html\">IteratorClose</a>(<i>iter</i>, <i>v</i>).</li>\n              <li>Let <i>status</i> be <a href=\"/sec/sec-call.html\">Call</a>(<i>adder</i>, <i>map</i>, &#xAB;<i>k</i>.[[value]],\n                  <i>v</i>.[[value]]&#xBB;).</li>\n              <li>If <i>status</i> is an <a href=\"/sec/sec-completion-record-specification-type.html\">abrupt completion</a>, return <a href=\"/sec/sec-iteratorclose.html\">IteratorClose</a>(<i>iter</i>, <i>status</i>).</li>\n            </ol>\n          </li>\n        </ol>\n\n        <div class=\"note\">\n          <p><span class=\"nh\">NOTE</span> If the parameter <var>iterable</var> is present, it is expected to be an object that\n          implements an <span style=\"font-family: Times New Roman\">@@iterator</span> method that returns an iterator object that\n          produces a two element array-like object whose first element is a value that will be used as a Map key and whose second\n          element is the value to associate with that key.</p>\n        </div>\n      </section>\n    "}