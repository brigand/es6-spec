{"id":"sec-map.prototype.foreach","html":"\n        <h1><span class=\"secnum\" id=\"sec-23.1.3.5\"><a href=\"/sec/sec-map.prototype.foreach.html\" title=\"link to this section\">23.1.3.5</a></span> Map.prototype.forEach ( callbackfn [ , thisArg ] )</h1>\n\n        <p class=\"normalbefore\">When the <code>forEach</code> method is called with one or two arguments, the following steps are\n        taken:</p>\n\n        <ol class=\"proc\">\n          <li>Let <i>M</i> be the <b>this</b> value.</li>\n          <li>If <a href=\"/sec/sec-ecmascript-data-types-and-values.html\">Type</a>(<i>M</i>) is not Object, throw a <b>TypeError</b>\n              exception.</li>\n          <li>If <i>M</i> does not have a [[MapData]] <a href=\"/sec/sec-object-internal-methods-and-internal-slots.html\">internal slot</a>,\n              throw a <b>TypeError</b> exception.</li>\n          <li>If <a href=\"/sec/sec-iscallable.html\">IsCallable</a>(<i>callbackfn</i>) is <b>false</b>, throw a <b>TypeError</b>\n              exception.</li>\n          <li>If <i>thisArg</i> was supplied, let <i>T</i> be <i>thisArg</i>; else let <i>T</i> be <b>undefined</b>.</li>\n          <li>Let <i>entries</i> be the <a href=\"/sec/sec-list-and-record-specification-type.html\">List</a> that is the value of\n              <i>M</i>&#x2019;s [[MapData]] <a href=\"/sec/sec-object-internal-methods-and-internal-slots.html\">internal slot</a>.</li>\n          <li>Repeat for each Record {[[key]], [[value]]} <i>e</i> that is an element of <i>entries,</i> in original key insertion\n              order\n            <ol class=\"block\">\n              <li>If <i>e</i>.[[key]] is not <span style=\"font-family: sans-serif\">empty</span>, then\n                <ol class=\"block\">\n                  <li>Let <i>funcResult</i> be <a href=\"/sec/sec-call.html\">Call</a>(<i>callbackfn</i>, <i>T</i>,\n                      &#xAB;<i>e</i>.[[value]], <i>e</i>.[[key]], <i>M</i>&#xBB;).</li>\n                  <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>funcResult</i>).</li>\n                </ol>\n              </li>\n            </ol>\n          </li>\n          <li>Return <b>undefined</b>.</li>\n        </ol>\n\n        <p>The <code>length</code> property of the <code>forEach</code> method is <b>1</b>.</p>\n\n        <div class=\"note\">\n          <p><span class=\"nh\">NOTE</span> <var>callbackfn</var> should be a function that accepts three arguments.\n          <code>forEach</code> calls <var>callbackfn</var> once for each key/value pair present in the map object, in key\n          insertion order. <var>callbackfn</var> is called only for keys of the map which actually exist; it is not called for\n          keys that have been  deleted from the map.</p>\n\n          <p>If a <var>thisArg</var> parameter is provided, it will be used as the <b>this</b> value for each invocation of\n          <var>callbackfn</var>. If it is not provided, <b>undefined</b> is used instead.</p>\n\n          <p><var>callbackfn</var> is called with three arguments: the value of the item, the key of the item, and the Map object\n          being traversed.</p>\n\n          <p><code>forEach</code> does not directly mutate the object on which it is called but the object may be mutated by the\n          calls to <var>callbackfn</var>. Each entry of a map&#x2019;s [[MapData]] is only visited once. New keys added after the\n          call to <code>forEach</code> begins are visited. A key will be revisited if it is deleted after it has been visited and\n          then re-added before the <code>forEach</code> call completes. Keys that are deleted after the call to\n          <code>forEach</code> begins and before being visited are not visited unless the key is added again before the\n          <code>forEach</code> call completes.</p>\n        </div>\n      "}