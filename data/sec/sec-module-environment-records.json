{"id":"sec-module-environment-records","html":"\n        <div class=\"front\">\n          <h1><span class=\"secnum\" id=\"sec-8.1.1.5\"><a href=\"/sec/sec-module-environment-records.html\" title=\"link to this section\">8.1.1.5</a></span> Module Environment Records</h1>\n\n          <p>A module <a href=\"/sec/sec-environment-records.html\">Environment Record</a> is a declarative <a href=\"/sec/sec-environment-records.html\">Environment Record</a> that is used to represent the outer scope of an ECMAScript <span class=\"nt\">Module</span>. In additional to normal mutable and immutable bindings, module Environment Records also\n          provide immutable import bindings which are bindings that provide indirect access to a target binding that exists in\n          another Environment Record.</p>\n\n          <p>Module Environment Records support all of the declarative Environment Record methods listed in <a href=\"/sec/table-15.html\">Table 15</a> and share the same specifications for all of those methods except for GetBindingValue,\n          DeleteBinding, HasThisBinding and GetThisBinding. In addition, module Environment Records support the methods listed in\n          <a href=\"/sec/table-20.html\">Table 20</a>:</p>\n\n          <figure>\n            <figcaption><span id=\"table-20\">Table 20</span> &#x2014; Additional Methods of Module Environment Records</figcaption>\n            <table class=\"real-table\">\n              <tr>\n                <th>Method</th>\n                <th>Purpose</th>\n              </tr>\n              <tr>\n                <td><a href=\"/sec/sec-createimportbinding.html\">CreateImportBinding</a>(N, M, N2 )</td>\n                <td>Create an immutable indirect binding in a module <a href=\"/sec/sec-environment-records.html\">Environment Record</a>. The String value <var>N</var> is the text of the bound name. <var>M</var> is a <a href=\"/sec/sec-abstract-module-records.html\">Module Record</a> (<a href=\"/sec/sec-abstract-module-records.html\">see 15.2.1.15</a>), and <var>N2</var> is a binding that exists in M&#x2019;s module <a href=\"/sec/sec-environment-records.html\">Environment Record</a>.</td>\n              </tr>\n              <tr>\n                <td>GetThisBinding()</td>\n                <td>Return the value of this <a href=\"/sec/sec-environment-records.html\">Environment Record</a>&#x2019;s <code>this</code> binding.</td>\n              </tr>\n            </table>\n          </figure>\n\n          <p>The behaviour of the additional concrete specification methods for module Environment Records are defined by the\n          following algorithms:</p>\n        </div>\n\n        <section id=\"sec-module-environment-records-getbindingvalue-n-s\">\n          <h1><span class=\"secnum\" id=\"sec-8.1.1.5.1\"><a href=\"/sec/sec-module-environment-records-getbindingvalue-n-s.html\" title=\"link to this section\">8.1.1.5.1</a></span> GetBindingValue(N,S)</h1>\n\n          <p class=\"normalbefore\">The concrete <a href=\"/sec/sec-environment-records.html\">Environment Record</a> method GetBindingValue\n          for module Environment Records returns the value of its bound identifier whose name is the value of the argument\n          <var>N</var>. However, if the binding is an indirect binding the value of the target binding is returned. If the binding\n          exists but is uninitialized a <span class=\"value\">ReferenceError</span> is thrown, regardless of the value of <i><span style=\"font-family: Times New Roman\">S</span>.</i></p>\n\n          <ol class=\"proc\">\n            <li>Let <i>envRec</i> be the module <a href=\"/sec/sec-environment-records.html\">Environment Record</a> for which the method was\n                invoked.</li>\n            <li><a href=\"/sec/sec-algorithm-conventions.html\">Assert</a>: <i>envRec</i> has a binding for <i>N</i>.</li>\n            <li>If the binding for <i>N</i> is an indirect binding, then\n              <ol class=\"block\">\n                <li>Let <i>M</i> and <i>N2</i> be the indirection values provided when this binding for <i>N</i> was created.</li>\n                <li>Let <i>targetEnv</i> be <i>M</i>.[[Environment]].</li>\n                <li>If <i>targetEnv</i> is <b>undefined</b>, throw a <b>ReferenceError</b> exception.</li>\n                <li>Let <i>targetER</i> be <i>targetEnv</i>&#x2019;s <a href=\"/sec/sec-lexical-environments.html\">EnvironmentRecord</a>.</li>\n                <li>Return <i>targetER</i>.GetBindingValue(<i>N2</i>, <i>S</i>).</li>\n              </ol>\n            </li>\n            <li>If the binding for <i>N</i> in <i>envRec</i> is an uninitialized binding, throw a <b>ReferenceError</b>\n                exception.</li>\n            <li>Return the value currently bound to <i>N</i> in <i>envRec</i>.</li>\n          </ol>\n\n          <div class=\"note\">\n            <p><span class=\"nh\">NOTE</span> Because a <span class=\"nt\">Module</span> is always <a href=\"/sec/sec-strict-mode-code.html\">strict mode code</a>, calls to GetBindingValue should always pass <span class=\"value\">true</span> as the value of&#xA0;<var>S</var>.</p>\n          </div>\n        </section>\n\n        <section id=\"sec-module-environment-records-deletebinding-n\">\n          <h1><span class=\"secnum\" id=\"sec-8.1.1.5.2\"><a href=\"/sec/sec-module-environment-records-deletebinding-n.html\" title=\"link to this section\">8.1.1.5.2</a></span> DeleteBinding (N)</h1>\n\n          <p class=\"normalbefore\">The concrete <a href=\"/sec/sec-environment-records.html\">Environment Record</a> method DeleteBinding for\n          module Environment Records refuses to delete bindings.</p>\n\n          <ol class=\"proc\">\n            <li>Let <i>envRec</i> be the module <a href=\"/sec/sec-environment-records.html\">Environment Record</a> for which the method was\n                invoked.</li>\n            <li>If <i>envRec</i> does not have a binding for the name that is the value of <i>N</i>, return <b>true</b>.</li>\n            <li>Return <b>false</b>.</li>\n          </ol>\n\n          <div class=\"note\">\n            <p><span class=\"nh\">NOTE</span> The bindings of a module <a href=\"/sec/sec-environment-records.html\">Environment\n            Record</a> are not deletable.</p>\n          </div>\n        </section>\n\n        <section id=\"sec-module-environment-records-hasthisbinding\">\n          <h1><span class=\"secnum\" id=\"sec-8.1.1.5.3\"><a href=\"/sec/sec-module-environment-records-hasthisbinding.html\" title=\"link to this section\">8.1.1.5.3</a></span> HasThisBinding ()</h1>\n\n          <p class=\"normalbefore\">Module Environment Records provide a <code>this</code> binding.</p>\n\n          <ol class=\"proc\">\n            <li>Return <b>true</b>.</li>\n          </ol>\n        </section>\n\n        <section id=\"sec-module-environment-records-getthisbinding\">\n          <h1><span class=\"secnum\" id=\"sec-8.1.1.5.4\"><a href=\"/sec/sec-module-environment-records-getthisbinding.html\" title=\"link to this section\">8.1.1.5.4</a></span> GetThisBinding ()</h1>\n          <ol class=\"proc\">\n            <li>Return <b>undefined</b>.</li>\n          </ol>\n        </section>\n\n        <section id=\"sec-createimportbinding\">\n          <h1><span class=\"secnum\" id=\"sec-8.1.1.5.5\"><a href=\"/sec/sec-createimportbinding.html\" title=\"link to this section\">8.1.1.5.5</a></span> CreateImportBinding (N, M, N2)</h1>\n\n          <p class=\"normalbefore\">The concrete <a href=\"/sec/sec-environment-records.html\">Environment Record</a> method\n          CreateImportBinding for module Environment Records creates a new initialized immutable indirect binding for the name\n          <var>N</var>. A binding must not already exist in this <a href=\"/sec/sec-environment-records.html\">Environment Record</a> for\n          <var>N</var>. <var>M</var> is a <a href=\"/sec/sec-abstract-module-records.html\">Module Record</a> (<a href=\"/sec/sec-abstract-module-records.html\">see 15.2.1.15</a>), and <var>N2</var> is the name of a binding that exists in\n          M&#x2019;s module <a href=\"/sec/sec-environment-records.html\">Environment Record</a>. Accesses to the value of the new binding\n          will indirectly access the bound value of value of the target binding.</p>\n\n          <ol class=\"proc\">\n            <li>Let <i>envRec</i> be the module <a href=\"/sec/sec-environment-records.html\">Environment Record</a> for which the method was\n                invoked.</li>\n            <li><a href=\"/sec/sec-algorithm-conventions.html\">Assert</a>: <i>envRec</i> does not already have a binding for <i>N</i>.</li>\n            <li><a href=\"/sec/sec-algorithm-conventions.html\">Assert</a>: <i>M</i> is a <a href=\"/sec/sec-abstract-module-records.html\">Module\n                Record</a>.</li>\n            <li><a href=\"/sec/sec-algorithm-conventions.html\">Assert</a>: When <i>M</i>.[[Environment]] is instantiated it will have a\n                direct binding for <i>N2</i>.</li>\n            <li>Create an immutable indirect binding in <i>envRec</i> for <i>N</i> that references <i>M</i> and <i>N2</i> as its\n                target binding and record that the binding is initialized.</li>\n            <li>Return <a href=\"/sec/sec-normalcompletion.html\">NormalCompletion</a>(<span style=\"font-family:\n                sans-serif\">empty</span>).</li>\n          </ol>\n        </section>\n      "}