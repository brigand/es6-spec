{"id":"sec-notation","html":"\n        <h1><span class=\"secnum\" id=\"sec-21.2.2.1\"><a href=\"/sec/sec-notation.html\" title=\"link to this section\">21.2.2.1</a></span>\n            Notation</h1>\n\n        <p>The descriptions below use the following variables:</p>\n\n        <ul>\n          <li>\n            <p><span class=\"nt\">Input</span> is a <a href=\"/sec/sec-list-and-record-specification-type.html\">List</a> consisting of all of\n            the characters, in order, of the String being matched by the regular expression pattern. Each character is either a\n            code unit or a code point, depending upon the kind of pattern involved. The notation <span style=\"font-family: Times\n            New Roman\"><i>Input</i>[<i>n</i>]</span> means the <span style=\"font-family: Times New\n            Roman\"><i>n<sup>th</sup></i></span> character of <span class=\"nt\">Input</span>, where <var>n</var> can range between 0\n            (inclusive) and <span class=\"nt\">InputLength</span> (exclusive).</p>\n          </li>\n\n          <li>\n            <p><span class=\"nt\">InputLength</span> is the number of characters in <span class=\"nt\">Input</span>.</p>\n          </li>\n\n          <li>\n            <p><span class=\"nt\">NcapturingParens</span> is the total number of left capturing parentheses (i.e. the total number\n            of times the <span class=\"prod\"><span class=\"nt\">Atom</span> <span class=\"geq\">::</span> <code class=\"t\">(</code>\n            <span class=\"nt\">Disjunction</span> <code class=\"t\">)</code></span> production is expanded) in the pattern. A left\n            capturing parenthesis is any <code>(</code> pattern character that is matched by the <code>(</code> terminal of the\n            <span class=\"prod\"><span class=\"nt\">Atom</span> <span class=\"geq\">::</span> <code class=\"t\">(</code> <span class=\"nt\">Disjunction</span> <code class=\"t\">)</code></span> production.</p>\n          </li>\n\n          <li>\n            <p><span class=\"nt\">IgnoreCase</span> is <b>true</b> if the RegExp object&apos;s [[OriginalFlags]] <a href=\"/sec/sec-object-internal-methods-and-internal-slots.html\">internal slot</a> contains <code>&quot;i&quot;</code> and otherwise is\n            <b>false</b>.</p>\n          </li>\n\n          <li>\n            <p><span class=\"nt\">Multiline</span> is <b>true</b> if the RegExp object&#x2019;s [[OriginalFlags]] <a href=\"/sec/sec-object-internal-methods-and-internal-slots.html\">internal slot</a> contains <code>&quot;m&quot;</code> and otherwise is\n            <b>false</b>.</p>\n          </li>\n\n          <li>\n            <p><span class=\"nt\">Unicode</span> is <b>true</b> if the RegExp object&#x2019;s [[OriginalFlags]] <a href=\"/sec/sec-object-internal-methods-and-internal-slots.html\">internal slot</a> contains <code>&quot;u&quot;</code> and otherwise is\n            <b>false</b>.</p>\n          </li>\n        </ul>\n\n        <p class=\"normalbefore\">Furthermore, the descriptions below use the following internal data structures:</p>\n\n        <ul>\n          <li>\n            <p>A <span class=\"nt\">CharSet</span> is a mathematical set of characters, either code units or code points depending\n            up the state of the <span class=\"nt\">Unicode</span> flag. &#x201C;All characters&#x201D; means either all code unit\n            values or all code point values also depending upon the state if <span class=\"nt\">Unicode</span>.</p>\n          </li>\n\n          <li>\n            <p>A <span class=\"nt\">State</span> is an ordered pair <span style=\"font-family: Times New Roman\">(<i>endIndex</i>,\n            <i>captures</i>)</span> where <var>endIndex</var> is an integer and <var>captures</var> is a <a href=\"/sec/sec-list-and-record-specification-type.html\">List</a> of <span class=\"nt\">NcapturingParens</span> values. <span class=\"nt\">States</span> are used to represent partial match states in the regular expression matching algorithms. The\n            <var>endIndex</var> is one plus the index of the last input character matched so far by the pattern, while\n            <var>captures</var> holds the results of capturing parentheses. The <span style=\"font-family: Times New\n            Roman\"><i>n<sup>th</sup></i></span> element of <var>captures</var> is either a <a href=\"/sec/sec-list-and-record-specification-type.html\">List</a> that represents the value obtained by the <span style=\"font-family: Times New Roman\"><i>n<sup>th</sup></i></span> set of capturing parentheses or <b>undefined</b> if\n            the <span style=\"font-family: Times New Roman\"><i>n<sup>th</sup></i></span> set of capturing parentheses hasn&#x2019;t\n            been reached yet. Due to backtracking, many <span class=\"nt\">States</span> may be in use at any time during the\n            matching process.</p>\n          </li>\n\n          <li>\n            <p>A <span class=\"nt\">MatchResult</span> is either a <span class=\"nt\">State</span> or the special token <b>failure</b>\n            that indicates that the match failed.</p>\n          </li>\n\n          <li>\n            <p>A <span class=\"nt\">Continuation</span> procedure is an internal closure (i.e. an internal procedure with some\n            arguments already bound to values) that takes one <span class=\"nt\">State</span> argument and returns a <span class=\"nt\">MatchResult</span> result. If an internal closure references variables which are bound in the function that\n            creates the closure, the closure uses the values that these variables had at the time the closure was created. The\n            <span class=\"nt\">Continuation</span> attempts to match the remaining portion (specified by the closure&apos;s already-bound\n            arguments) of the pattern against <span class=\"nt\">Input</span>, starting at the intermediate state given by its <span class=\"nt\">State</span> argument. If the match succeeds, the <span class=\"nt\">Continuation</span> returns the final\n            <span class=\"nt\">State</span> that it reached; if the match fails, the <span class=\"nt\">Continuation</span> returns\n            <b>failure</b>.</p>\n          </li>\n\n          <li>\n            <p>A <span class=\"nt\">Matcher</span> procedure is an internal closure that takes two arguments &#x2014; a <span class=\"nt\">State</span> and a <span class=\"nt\">Continuation</span> &#x2014; and returns a <span class=\"nt\">MatchResult</span> result. A <span class=\"nt\">Matcher</span> attempts to match a middle subpattern\n            (specified by the closure&apos;s already-bound arguments) of the pattern against <span class=\"nt\">Input</span>, starting at\n            the intermediate state given by its <span class=\"nt\">State</span> argument. The <span class=\"nt\">Continuation</span>\n            argument should be a closure that matches the rest of the pattern. After matching the subpattern of a pattern to\n            obtain a new <span class=\"nt\">State</span>, the <span class=\"nt\">Matcher</span> then calls <span class=\"nt\">Continuation</span> on that new <span class=\"nt\">State</span> to test if the rest of the pattern can match\n            as well. If it can, the <i>Matcher</i> returns the <span class=\"nt\">State</span> returned by <span class=\"nt\">Continuation</span>; if not, the <span class=\"nt\">Matcher</span> may try different choices at its choice\n            points, repeatedly calling <span class=\"nt\">Continuation</span> until it either succeeds or all possibilities have\n            been exhausted.</p>\n          </li>\n\n          <li>\n            <p>An <span class=\"nt\">AssertionTester</span> procedure is an internal closure that takes a <span class=\"nt\">State</span> argument and returns a Boolean result. The assertion tester tests a specific condition\n            (specified by the closure&apos;s already-bound arguments) against the current place in <span class=\"nt\">Input</span> and\n            returns <b>true</b> if the condition matched or <b>false</b> if not.</p>\n          </li>\n\n          <li>\n            <p>An <span class=\"nt\">EscapeValue</span> is either a character or an integer. An <span class=\"nt\">EscapeValue</span>\n            is used to denote the interpretation of a <span class=\"nt\">DecimalEscape</span> escape sequence: a character\n            <var>ch</var> means that the escape sequence is interpreted as the character <var>ch</var>, while an integer\n            <var>n</var> means that the escape sequence is interpreted as a backreference to the <span style=\"font-family: Times\n            New Roman\"><i>n</i><sup>th</sup></span> set of capturing parentheses.</p>\n          </li>\n        </ul>\n      "}