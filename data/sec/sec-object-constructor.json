{"id":"sec-object-constructor","html":"\n      <div class=\"front\">\n        <h1><span class=\"secnum\" id=\"sec-19.1.1\"><a href=\"/sec/sec-object-constructor.html\" title=\"link to this section\">19.1.1</a></span>\n            The Object Constructor</h1>\n\n        <p>The Object constructor is the %Object% intrinsic object and the initial value of the <code>Object</code> property of\n        the global object. When called as a constructor it creates a new ordinary object. When <code>Object</code> is called as a\n        function rather than as a constructor, it performs a type conversion.</p>\n\n        <p>The <code>Object</code> constructor is designed to be subclassable. It may be used as the value of an\n        <code>extends</code> clause of a class definition.</p>\n      </div>\n\n      <section id=\"sec-object-value\">\n        <h1><span class=\"secnum\" id=\"sec-19.1.1.1\"><a href=\"/sec/sec-object-value.html\" title=\"link to this section\">19.1.1.1</a></span>\n            Object ( [ value ] )</h1>\n\n        <p class=\"normalbefore\">When <code>Object</code> function is called with optional argument <var>value</var>, the following\n        steps are taken:</p>\n\n        <ol class=\"proc\">\n          <li>If NewTarget is neither <b>undefined</b> nor the active function<i>,</i> then\n            <ol class=\"block\">\n              <li>Return <a href=\"/sec/sec-ordinarycreatefromconstructor.html\">OrdinaryCreateFromConstructor</a>(NewTarget,\n                  <code>&quot;%ObjectPrototype%&quot;</code>).</li>\n            </ol>\n          </li>\n          <li>If <i>value</i> is <b>null</b>, <b>undefined</b> or not supplied, return <a href=\"/sec/sec-objectcreate.html\">ObjectCreate</a>(%ObjectPrototype%).</li>\n          <li>Return <a href=\"/sec/sec-toobject.html\">ToObject</a>(<i>value</i>).</li>\n        </ol>\n      </section>\n    "}