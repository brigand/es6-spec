{"id":"sec-object-initializer-static-semantics-early-errors","html":"\n        <h1><span class=\"secnum\" id=\"sec-12.2.6.1\"><a href=\"/sec/sec-object-initializer-static-semantics-early-errors.html\" title=\"link to this section\">12.2.6.1</a></span> Static Semantics:  Early Errors</h1>\n        <div class=\"gp prod\"><span class=\"nt\">PropertyDefinition</span> <span class=\"geq\">:</span> <span class=\"nt\">MethodDefinition</span></div>\n        <ul>\n          <li>It is a Syntax Error if HasDirectSuper of <span class=\"nt\">MethodDefinition</span> is <span style=\"font-family:\n              Times New Roman\"><b><i>true</i></b></span>.</li>\n        </ul>\n\n        <p>In addition to describing an actual object initializer the <span class=\"nt\">ObjectLiteral</span> productions are also\n        used as a cover grammar for <span class=\"nt\">ObjectAssignmentPattern</span> (<a href=\"/sec/sec-destructuring-assignment.html\">12.14.5</a>). and may be recognized as part of a <span class=\"nt\">CoverParenthesizedExpressionAndArrowParameterList</span>. When <span class=\"nt\">ObjectLiteral</span> appears in\n        a context where <span class=\"nt\">ObjectAssignmentPattern</span> is required the following Early Error rules are <b>not</b>\n        applied. In addition, they are not applied when initially parsing a\n        <var>CoverParenthesizedExpressionAndArrowParameterList.</var></p>\n\n        <div class=\"gp prod\"><span class=\"nt\">PropertyDefinition</span> <span class=\"geq\">:</span> <span class=\"nt\">CoverInitializedName</span></div>\n        <ul>\n          <li>Always throw a Syntax Error if code matches <span style=\"font-family: Times New Roman\">this production.</span></li>\n        </ul>\n\n        <div class=\"note\">\n          <p><span class=\"nh\">NOTE</span> This production exists so that <span class=\"nt\">ObjectLiteral</span> can serve as a\n          cover grammar for <span class=\"nt\">ObjectAssignmentPattern</span> (<a href=\"/sec/sec-destructuring-assignment.html\">12.14.5</a>).\n          It cannot occur in an actual object initializer.</p>\n        </div>\n      "}