{"id":"sec-object.assign","html":"\n        <h1><span class=\"secnum\" id=\"sec-19.1.2.1\"><a href=\"/sec/sec-object.assign.html\" title=\"link to this section\">19.1.2.1</a></span>\n            Object.assign ( target, ...sources )</h1>\n\n        <p class=\"normalbefore\">The <b>assign</b> function is used to copy the values of all of the enumerable own properties from\n        one or more source objects to a <var>target</var> object. When the <b>assign</b> function is called, the following steps\n        are taken:</p>\n\n        <ol class=\"proc\">\n          <li>Let <i>to</i> be <a href=\"/sec/sec-toobject.html\">ToObject</a>(<i>target</i>).</li>\n          <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>to</i>).</li>\n          <li>If only one argument was passed, return <i>to</i>.</li>\n          <li>Let <i>sources</i> be the <a href=\"/sec/sec-list-and-record-specification-type.html\">List</a> of argument values starting\n              with the second argument.</li>\n          <li>For each element <i>nextSource</i> of <i>sources</i>, in ascending index order,\n            <ol class=\"block\">\n              <li>If <i>nextSource</i> is <b>undefined</b> or <b>null</b>, let <i>keys</i> be an empty <a href=\"/sec/sec-list-and-record-specification-type.html\">List</a>.</li>\n              <li>Else,\n                <ol class=\"block\">\n                  <li>Let <i>from</i> be <a href=\"/sec/sec-toobject.html\">ToObject</a>(<i>nextSource</i>).</li>\n                  <li>Let <i>keys</i> be <i>from</i>.[[OwnPropertyKeys]]().</li>\n                  <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>keys</i>).</li>\n                </ol>\n              </li>\n              <li>Repeat for each element <i>nextKey</i> of <i>keys</i> in <a href=\"/sec/sec-list-and-record-specification-type.html\">List</a> order,\n                <ol class=\"block\">\n                  <li>Let <i>desc</i> be <i>from</i>.[[GetOwnProperty]](<i>nextKey</i>).</li>\n                  <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>desc</i>).</li>\n                  <li>if <i>desc</i> is not <b>undefined</b> and <i>desc</i>.[[Enumerable]] is <b>true</b>, then\n                    <ol class=\"block\">\n                      <li>Let <i>propValue</i> be <a href=\"/sec/sec-get-o-p.html\">Get</a>(<i>from</i>, <i>nextKey</i>).</li>\n                      <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>propValue</i>).</li>\n                      <li>Let <i>status</i> be <a href=\"/sec/sec-set-o-p-v-throw.html\">Set</a>(<i>to</i>, <i>nextKey</i>, <i>propValue</i>,\n                          <b>true</b>).</li>\n                      <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>status</i>).</li>\n                    </ol>\n                  </li>\n                </ol>\n              </li>\n            </ol>\n          </li>\n          <li>Return <i>to</i>.</li>\n        </ol>\n\n        <p>The <code>length</code> property of the <code>assign</code> method is <b>2</b>.</p>\n      "}