{"id":"sec-object.defineproperties","html":"\n        <div class=\"front\">\n          <h1><span class=\"secnum\" id=\"sec-19.1.2.3\"><a href=\"/sec/sec-object.defineproperties.html\" title=\"link to this section\">19.1.2.3</a></span> Object.defineProperties ( O, Properties )</h1>\n\n          <p class=\"normalbefore\">The <b>defineProperties</b> function is used to add own properties and/or update the attributes\n          of existing own properties of an object. When the <b>defineProperties</b> function is called, the following steps are\n          taken:</p>\n\n          <ol class=\"proc\">\n            <li>Return <a href=\"/sec/sec-objectdefineproperties.html\">ObjectDefineProperties</a>(<i>O</i>, <i>Properties</i>).</li>\n          </ol>\n        </div>\n\n        <section id=\"sec-objectdefineproperties\">\n          <h1><span class=\"secnum\" id=\"sec-19.1.2.3.1\"><a href=\"/sec/sec-objectdefineproperties.html\" title=\"link to this section\">19.1.2.3.1</a></span> Runtime Semantics: ObjectDefineProperties ( O, Properties )</h1>\n\n          <p class=\"normalbefore\">The abstract operation ObjectDefineProperties with arguments <var>O</var> and <span class=\"nt\">Properties</span> performs the following steps:</p>\n\n          <ol class=\"proc\">\n            <li>If <a href=\"/sec/sec-ecmascript-data-types-and-values.html\">Type</a>(<i>O</i>) is not Object, throw a <b>TypeError</b>\n                exception.</li>\n            <li>Let <i>props</i> be <a href=\"/sec/sec-toobject.html\">ToObject</a>(<i>Properties</i>).</li>\n            <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>props</i>).</li>\n            <li>Let <i>keys</i> be <i>props</i>.[[OwnPropertyKeys]]().</li>\n            <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>keys</i>).</li>\n            <li>Let <i>descriptors</i> be an empty <a href=\"/sec/sec-list-and-record-specification-type.html\">List</a>.</li>\n            <li>Repeat for each element <i>nextKey</i> of <i>keys</i> in <a href=\"/sec/sec-list-and-record-specification-type.html\">List</a> order,\n              <ol class=\"block\">\n                <li>Let <i>propDesc</i> be <i>props</i>.[[GetOwnProperty]](<i>nextKey</i>).</li>\n                <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>propDesc</i>).</li>\n                <li>If <i>propDesc</i> is not <b>undefined</b> and <i>propDesc</i>.[[Enumerable]] is <b>true</b>, then\n                  <ol class=\"block\">\n                    <li>Let <i>descObj</i> be <a href=\"/sec/sec-get-o-p.html\">Get</a>( <i>props</i>, <i>nextKey</i>).</li>\n                    <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>descObj</i>).</li>\n                    <li>Let <i>desc</i> be <a href=\"/sec/sec-topropertydescriptor.html\">ToPropertyDescriptor</a>(<i>descObj</i>).</li>\n                    <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>desc</i>).</li>\n                    <li>Append the pair (a two element <a href=\"/sec/sec-list-and-record-specification-type.html\">List</a>) consisting of\n                        <i>nextKey</i> and <i>desc</i> to the end of <i>descriptors</i>.</li>\n                  </ol>\n                </li>\n              </ol>\n            </li>\n            <li>For each <i>pair</i> from <i>descriptors</i> in list order,\n              <ol class=\"block\">\n                <li>Let <i>P</i> be the first element of <i>pair</i>.</li>\n                <li>Let <i>desc</i> be the second element of <i>pair</i>.</li>\n                <li>Let <i>status</i> be <a href=\"/sec/sec-definepropertyorthrow.html\">DefinePropertyOrThrow</a>(<i>O</i>,<i>P</i>,\n                    <i>desc</i>).</li>\n                <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>status</i>).</li>\n              </ol>\n            </li>\n            <li>Return <i>O</i>.</li>\n          </ol>\n        </section>\n      "}