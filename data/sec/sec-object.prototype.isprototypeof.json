{"id":"sec-object.prototype.isprototypeof","html":"\n        <h1><span class=\"secnum\" id=\"sec-19.1.3.3\"><a href=\"/sec/sec-object.prototype.isprototypeof.html\" title=\"link to this section\">19.1.3.3</a></span> Object.prototype.isPrototypeOf ( V )</h1>\n\n        <p class=\"normalbefore\">When the <code>isPrototypeOf</code> method is called with argument <var>V</var>, the following\n        steps are taken:</p>\n\n        <ol class=\"proc\">\n          <li>If <a href=\"/sec/sec-ecmascript-data-types-and-values.html\">Type</a>(<i>V</i>) is not Object, return <b>false</b>.</li>\n          <li>Let <i>O</i> be <a href=\"/sec/sec-toobject.html\">ToObject</a>(<b>this</b> value).</li>\n          <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>O</i>).</li>\n          <li>Repeat\n            <ol class=\"block\">\n              <li>Let <i>V</i> be <i>V</i>.[[GetPrototypeOf]]().</li>\n              <li>If <i>V</i> is <b>null</b>, return <b>false</b></li>\n              <li>If <a href=\"/sec/sec-samevalue.html\">SameValue</a>(<i>O</i>, <i>V</i>) is <b>true</b>, return <b>true</b>.</li>\n            </ol>\n          </li>\n        </ol>\n\n        <div class=\"note\">\n          <p><span class=\"nh\">NOTE</span> The ordering of steps 1 and 2 preserves the behaviour specified by previous editions of\n          this specification for the case where <var>V</var> is not an object and the <b>this</b> value is <span class=\"value\">undefined</span> or <span class=\"value\">null</span>.</p>\n        </div>\n      "}