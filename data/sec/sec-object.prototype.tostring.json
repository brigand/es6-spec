{"id":"sec-object.prototype.tostring","html":"\n        <h1><span class=\"secnum\" id=\"sec-19.1.3.6\"><a href=\"/sec/sec-object.prototype.tostring.html\" title=\"link to this section\">19.1.3.6</a></span> Object.prototype.toString ( )</h1>\n\n        <p class=\"normalbefore\">When the <code>toString</code> method is called, the following steps are taken:</p>\n\n        <ol class=\"proc\">\n          <li>If the <b>this</b> value is <b>undefined</b>, return <code>&quot;[object Undefined]&quot;</code>.</li>\n          <li>If the <b>this</b> value is <b>null</b>, return <code>&quot;[object Null]&quot;</code>.</li>\n          <li>Let <i>O</i> be <a href=\"/sec/sec-toobject.html\">ToObject</a>(<b>this</b> value).</li>\n          <li>Let <i>isArray</i> be <a href=\"/sec/sec-isarray.html\">IsArray</a>(<i>O</i>).</li>\n          <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>isArray</i>).</li>\n          <li>If <i>isArray</i> is <b>true</b>, let <i>builtinTag</i> be <code>&quot;Array&quot;</code>.</li>\n          <li>Else, if <i>O</i> is an exotic String object, let <i>builtinTag</i> be <code>&quot;String&quot;</code>.</li>\n          <li>Else, if <i>O</i> has an [[ParameterMap]] <a href=\"/sec/sec-object-internal-methods-and-internal-slots.html\">internal\n              slot</a>, let <i>builtinTag</i> be <code>&quot;Arguments&quot;</code>.</li>\n          <li>Else, if <i>O</i> has a [[Call]] internal method, let <i>builtinTag</i> be <code>&quot;Function&quot;</code>.</li>\n          <li>Else, if <i>O</i> has an [[ErrorData]] <a href=\"/sec/sec-object-internal-methods-and-internal-slots.html\">internal slot</a>,\n              let <i>builtinTag</i> be <code>&quot;Error&quot;</code>.</li>\n          <li>Else, if <i>O</i> has a [[BooleanData]] <a href=\"/sec/sec-object-internal-methods-and-internal-slots.html\">internal slot</a>,\n              let <i>builtinTag</i> be <code>&quot;Boolean&quot;</code>.</li>\n          <li>Else, if <i>O</i> has a [[NumberData]] <a href=\"/sec/sec-object-internal-methods-and-internal-slots.html\">internal slot</a>,\n              let <i>builtinTag</i> be <code>&quot;Number&quot;</code>.</li>\n          <li>Else, if <i>O</i> has a [[DateValue]] <a href=\"/sec/sec-object-internal-methods-and-internal-slots.html\">internal slot</a>,\n              let <i>builtinTag</i> be <code>&quot;Date&quot;</code>.</li>\n          <li>Else, if <i>O</i> has a [[RegExpMatcher]] <a href=\"/sec/sec-object-internal-methods-and-internal-slots.html\">internal\n              slot</a>, let <i>builtinTag</i> be <code>&quot;RegExp&quot;</code>.</li>\n          <li>Else, let <i>builtinTag</i> be <code>&quot;Object&quot;</code>.</li>\n          <li>Let <i>tag</i> be Get (<i>O</i>, @@toStringTag).</li>\n          <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>tag</i>).</li>\n          <li>If <a href=\"/sec/sec-ecmascript-data-types-and-values.html\">Type</a>(<i>tag</i>) is not String, let <i>tag</i> be\n              <i>builtinTag</i>.</li>\n          <li>Return the String that is the result of concatenating <code>&quot;[object &quot;</code>, <i>tag</i>, and\n              <code>&quot;]&quot;</code>.</li>\n        </ol>\n\n        <p>This function is the %ObjProto_toString% intrinsic object.</p>\n\n        <div class=\"note\">\n          <p><span class=\"nh\">NOTE</span> Historically, this function was occasionally used to access the String value of the\n          [[Class]] <a href=\"/sec/sec-object-internal-methods-and-internal-slots.html\">internal slot</a> that was used in previous editions\n          of this specification as a nominal type tag for various built-in objects. The above definition of <code>toString</code>\n          preserves compatibility for legacy code that uses <code>toString</code> as a test for those specific kinds of built-in\n          objects. It does not provide a reliable type testing mechanism for other kinds of built-in or program defined objects.\n          In addition, programs can use @@toStringTag in ways that will invalidate the reliability of such legacy type tests.</p>\n        </div>\n      "}