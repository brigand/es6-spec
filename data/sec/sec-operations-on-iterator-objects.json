{"id":"sec-operations-on-iterator-objects","html":"\n    <div class=\"front\">\n      <h1><span class=\"secnum\" id=\"sec-7.4\"><a href=\"/sec/sec-operations-on-iterator-objects.html\" title=\"link to this section\">7.4</a></span> Operations on Iterator Objects</h1>\n\n      <p>See Common Iteration Interfaces (<a href=\"/sec/sec-iteration.html\">25.1</a>).</p>\n    </div>\n\n    <section id=\"sec-getiterator\">\n      <h1><span class=\"secnum\" id=\"sec-7.4.1\"><a href=\"/sec/sec-getiterator.html\" title=\"link to this section\">7.4.1</a></span> GetIterator\n          ( obj, method )</h1>\n\n      <p class=\"normalbefore\">The abstract operation GetIterator with argument <span style=\"font-family: Times New\n      Roman\"><i>obj</i> and</span> optional argument <var>method</var> performs the following steps:</p>\n\n      <ol class=\"proc\">\n        <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>obj</i>).</li>\n        <li>If <i>method</i> was not passed, then\n          <ol class=\"block\">\n            <li>Let <i>method</i> be <a href=\"/sec/sec-getmethod.html\">GetMethod</a>(<i>obj</i>, @@iterator).</li>\n            <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>method</i>).</li>\n          </ol>\n        </li>\n        <li>Let <i>iterator</i> be <a href=\"/sec/sec-call.html\">Call</a>(<i>method</i>,<i>obj</i>).</li>\n        <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>iterator</i>)<i>.</i></li>\n        <li>If <a href=\"/sec/sec-ecmascript-data-types-and-values.html\">Type</a>(<i>iterator</i>) is not Object, throw a <b>TypeError</b>\n            exception.</li>\n        <li>Return <i>iterator</i>.</li>\n      </ol>\n    </section>\n\n    <section id=\"sec-iteratornext\">\n      <h1><span class=\"secnum\" id=\"sec-7.4.2\"><a href=\"/sec/sec-iteratornext.html\" title=\"link to this section\">7.4.2</a></span>\n          IteratorNext ( iterator, value )</h1>\n\n      <p class=\"normalbefore\">The abstract operation IteratorNext with argument <var>iterator</var> and optional argument\n      <var>value</var> performs the following steps:</p>\n\n      <ol class=\"proc\">\n        <li>If <i>value</i> was not passed, then\n          <ol class=\"block\">\n            <li>Let <i>result</i> be <a href=\"/sec/sec-invoke.html\">Invoke</a>(<i>iterator</i>, <code>&quot;next&quot;</code>, &#xAB;&#x200D;\n                &#xBB;).</li>\n          </ol>\n        </li>\n        <li>Else,\n          <ol class=\"block\">\n            <li>Let <i>result</i> be <a href=\"/sec/sec-invoke.html\">Invoke</a>(<i>iterator</i>, <code>&quot;next&quot;</code>,\n                &#xAB;&#x200D;<i>value</i>&#xBB;).</li>\n          </ol>\n        </li>\n        <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>result</i>).</li>\n        <li>If <a href=\"/sec/sec-ecmascript-data-types-and-values.html\">Type</a>(<i>result</i>) is not Object, throw a <b>TypeError</b>\n            exception.</li>\n        <li>Return <i>result</i>.</li>\n      </ol>\n    </section>\n\n    <section id=\"sec-iteratorcomplete\">\n      <h1><span class=\"secnum\" id=\"sec-7.4.3\"><a href=\"/sec/sec-iteratorcomplete.html\" title=\"link to this section\">7.4.3</a></span>\n          IteratorComplete ( iterResult )</h1>\n\n      <p class=\"normalbefore\">The abstract operation IteratorComplete with argument <var>iterResult</var> performs the following\n      steps:</p>\n\n      <ol class=\"proc\">\n        <li><a href=\"/sec/sec-algorithm-conventions.html\">Assert</a>: <a href=\"/sec/sec-ecmascript-data-types-and-values.html\">Type</a>(<i>iterResult</i>) is Object.</li>\n        <li>Return <a href=\"/sec/sec-toboolean.html\">ToBoolean</a>(<a href=\"/sec/sec-get-o-p.html\">Get</a>(<i>iterResult</i>,\n            <code>&quot;done&quot;</code>)).</li>\n      </ol>\n    </section>\n\n    <section id=\"sec-iteratorvalue\">\n      <h1><span class=\"secnum\" id=\"sec-7.4.4\"><a href=\"/sec/sec-iteratorvalue.html\" title=\"link to this section\">7.4.4</a></span>\n          IteratorValue ( iterResult )</h1>\n\n      <p class=\"normalbefore\">The abstract operation IteratorValue with argument <var>iterResult</var> performs the following\n      steps:</p>\n\n      <ol class=\"proc\">\n        <li><a href=\"/sec/sec-algorithm-conventions.html\">Assert</a>: <a href=\"/sec/sec-ecmascript-data-types-and-values.html\">Type</a>(<i>iterResult</i>) is Object.</li>\n        <li>Return <a href=\"/sec/sec-get-o-p.html\">Get</a>(<i>iterResult</i>, <code>&quot;value&quot;</code>).</li>\n      </ol>\n    </section>\n\n    <section id=\"sec-iteratorstep\">\n      <h1><span class=\"secnum\" id=\"sec-7.4.5\"><a href=\"/sec/sec-iteratorstep.html\" title=\"link to this section\">7.4.5</a></span>\n          IteratorStep ( iterator )</h1>\n\n      <p class=\"normalbefore\">The abstract operation IteratorStep with argument <var>iterator</var> requests the next value from\n      <var>iterator</var> and returns either <span class=\"value\">false</span> indicating that the iterator has reached its end or\n      the IteratorResult object if a next value is available. IteratorStep performs the following steps:</p>\n\n      <ol class=\"proc\">\n        <li>Let <i>result</i> be <a href=\"/sec/sec-iteratornext.html\">IteratorNext</a>(<i>iterator</i>).</li>\n        <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>result</i>).</li>\n        <li>Let <i>done</i> be <a href=\"/sec/sec-iteratorcomplete.html\">IteratorComplete</a>(<i>result</i>).</li>\n        <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>done</i>).</li>\n        <li>If <i>done</i> is <b>true</b>, return <b>false</b>.</li>\n        <li>Return <i>result</i>.</li>\n      </ol>\n    </section>\n\n    <section id=\"sec-iteratorclose\">\n      <h1><span class=\"secnum\" id=\"sec-7.4.6\"><a href=\"/sec/sec-iteratorclose.html\" title=\"link to this section\">7.4.6</a></span>\n          IteratorClose( iterator, completion )</h1>\n\n      <p class=\"normalbefore\">The abstract operation IteratorClose with arguments <var>iterator</var> and <var>completion</var> is\n      used to notify an iterator that it should perform any actions it would normally perform when it has reached its completed\n      state:</p>\n\n      <ol class=\"proc\">\n        <li><a href=\"/sec/sec-algorithm-conventions.html\">Assert</a>:  <a href=\"/sec/sec-ecmascript-data-types-and-values.html\">Type</a>(<i>iterator</i>) is Object.</li>\n        <li><a href=\"/sec/sec-algorithm-conventions.html\">Assert</a>:  <i>completion</i> is a <a href=\"/sec/sec-completion-record-specification-type.html\">Completion Record</a>.</li>\n        <li>Let <i>return</i> be <a href=\"/sec/sec-getmethod.html\">GetMethod</a>(<i>iterator</i>, <code>&quot;return&quot;</code>).</li>\n        <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>return</i>).</li>\n        <li>If <i>return</i> is <b>undefined</b>, return <a href=\"/sec/sec-completion-record-specification-type.html\">Completion</a>(<i>completion</i>).</li>\n        <li>Let <i>innerResult</i> be <a href=\"/sec/sec-call.html\">Call</a>(<i>return</i>, <i>iterator</i>, &#xAB;&#x200D; &#xBB;).</li>\n        <li>If <i>completion</i>.[[type]] is <span style=\"font-family: sans-serif\">throw</span>, return <a href=\"/sec/sec-completion-record-specification-type.html\">Completion</a>(<i>completion</i>).</li>\n        <li>If <i>innerResult</i>.[[type]] is <span style=\"font-family: sans-serif\">throw</span>, return <a href=\"/sec/sec-completion-record-specification-type.html\">Completion</a>(<i>innerResult</i>).</li>\n        <li>If <a href=\"/sec/sec-ecmascript-data-types-and-values.html\">Type</a>(<i>innerResult</i>.[[value]]) is not Object<i>,</i> throw\n            a <b>TypeError</b> exception.</li>\n        <li>Return <a href=\"/sec/sec-completion-record-specification-type.html\">Completion</a>(<i>completion</i>).</li>\n      </ol>\n    </section>\n\n    <section id=\"sec-createiterresultobject\">\n      <h1><span class=\"secnum\" id=\"sec-7.4.7\"><a href=\"/sec/sec-createiterresultobject.html\" title=\"link to this section\">7.4.7</a></span>\n          CreateIterResultObject ( value, done )</h1>\n\n      <p class=\"normalbefore\">The abstract operation CreateIterResultObject with arguments <var>value</var> and <var>done</var>\n      creates an object that supports the IteratorResult interface by performing the following steps:</p>\n\n      <ol class=\"proc\">\n        <li><a href=\"/sec/sec-algorithm-conventions.html\">Assert</a>: <a href=\"/sec/sec-ecmascript-data-types-and-values.html\">Type</a>(<i>done</i>)\n            is Boolean.</li>\n        <li>Let <i>obj</i> be <a href=\"/sec/sec-objectcreate.html\">ObjectCreate</a>(<span style=\"font-family:\n            sans-serif\">%ObjectPrototype%</span>).</li>\n        <li>Perform <a href=\"/sec/sec-createdataproperty.html\">CreateDataProperty</a>(<i>obj</i>, <code>&quot;value&quot;</code>, <i>value</i>).</li>\n        <li>Perform <a href=\"/sec/sec-createdataproperty.html\">CreateDataProperty</a>(<i>obj</i>, <code>&quot;done&quot;</code>, <i>done</i>).</li>\n        <li>Return <i>obj</i>.</li>\n      </ol>\n    </section>\n\n    <section id=\"sec-createlistiterator\">\n      <div class=\"front\">\n        <h1><span class=\"secnum\" id=\"sec-7.4.8\"><a href=\"/sec/sec-createlistiterator.html\" title=\"link to this section\">7.4.8</a></span>\n            CreateListIterator ( list )</h1>\n\n        <p class=\"normalbefore\">The abstract operation CreateListIterator with argument <var>list</var>  creates an Iterator (<a href=\"/sec/sec-iterator-interface.html\">25.1.1.2</a>) object whose next method returns the successive elements of <var>list</var>.\n        It performs the following steps:</p>\n\n        <ol class=\"proc\">\n          <li>Let <i>iterator</i> be <a href=\"/sec/sec-objectcreate.html\">ObjectCreate</a>(%IteratorPrototype%, &#xAB;[[IteratorNext]],\n              [[IteratedList]], [[ListIteratorNextIndex]]&#xBB;).</li>\n          <li>Set <i>iterator&#x2019;s</i> [[IteratedList]] <a href=\"/sec/sec-object-internal-methods-and-internal-slots.html\">internal\n              slot</a> to <i>list</i>.</li>\n          <li>Set <i>iterator&#x2019;s</i> [[ListIteratorNextIndex]] <a href=\"/sec/sec-object-internal-methods-and-internal-slots.html\">internal slot</a> to 0.</li>\n          <li>Let <i>next</i> be a new built-in function object as defined in ListIterator <code>next</code> (<a href=\"/sec/sec-listiterator-next.html\">7.4.8.1</a>).</li>\n          <li>Set <i>iterator&#x2019;s</i> [[IteratorNext]] <a href=\"/sec/sec-object-internal-methods-and-internal-slots.html\">internal\n              slot</a> to <i>next</i>.</li>\n          <li>Perform <a href=\"/sec/sec-createmethodproperty.html\">CreateMethodProperty</a>(<i>iterator</i>, <code>&quot;next&quot;</code>,\n              <i>next</i>).</li>\n          <li>Return <i>iterator</i>.</li>\n        </ol>\n      </div>\n\n      <section id=\"sec-listiterator-next\">\n        <h1><span class=\"secnum\" id=\"sec-7.4.8.1\"><a href=\"/sec/sec-listiterator-next.html\" title=\"link to this section\">7.4.8.1</a></span>\n            ListIterator next( )</h1>\n\n        <p class=\"normalbefore\">The ListIterator <code>next</code> method is a standard built-in function object (<a href=\"/sec/sec-ecmascript-standard-built-in-objects.html\">clause 17</a>) that performs the following steps:</p>\n\n        <ol class=\"proc\">\n          <li>Let <i>O</i> be the <b>this</b> value.</li>\n          <li>Let <i>f</i> be the active function object.</li>\n          <li>If <i>O</i> does not have a [[IteratorNext]] <a href=\"/sec/sec-object-internal-methods-and-internal-slots.html\">internal\n              slot</a>, throw a <b>TypeError</b> exception.</li>\n          <li>Let <i>next</i> be the value of the [[IteratorNext]] <a href=\"/sec/sec-object-internal-methods-and-internal-slots.html\">internal slot</a> of <i>O</i>.</li>\n          <li>If <a href=\"/sec/sec-samevalue.html\">SameValue</a>(<i>f</i>, <i>next</i>) is <b>false</b>, throw a <b>TypeError</b>\n              exception.</li>\n          <li>If <i>O</i> does not have a [[IteratedList]] <a href=\"/sec/sec-object-internal-methods-and-internal-slots.html\">internal\n              slot</a>, throw a <b>TypeError</b> exception.</li>\n          <li>Let <i>list</i> be the value of the [[IteratedList]] <a href=\"/sec/sec-object-internal-methods-and-internal-slots.html\">internal slot</a> of <i>O</i>.</li>\n          <li>Let <i>index</i> be the value of the [[ListIteratorNextIndex]] <a href=\"/sec/sec-object-internal-methods-and-internal-slots.html\">internal slot</a> of <i>O</i>.</li>\n          <li>Let <i>len</i> be the number of elements of <i>list</i>.</li>\n          <li>If <i>index</i> &#x2265; <i>len</i>, then\n            <ol class=\"block\">\n              <li>Return <a href=\"/sec/sec-createiterresultobject.html\">CreateIterResultObject</a>(<b>undefined</b>, <b>true</b>).</li>\n            </ol>\n          </li>\n          <li>Set the value of the [[ListIteratorNextIndex]] <a href=\"/sec/sec-object-internal-methods-and-internal-slots.html\">internal\n              slot</a> of <i>O</i> to <i>index</i>+1.</li>\n          <li>Return <a href=\"/sec/sec-createiterresultobject.html\">CreateIterResultObject</a>(<i>list</i>[<i>index</i>],\n              <b>false</b>).</li>\n        </ol>\n\n        <div class=\"note\">\n          <p><span class=\"nh\">NOTE</span> A ListIterator <code>next</code> method will throw an exception if applied to any object\n          other than the one with which it was originally associated.</p>\n        </div>\n      </section>\n    </section>\n  "}