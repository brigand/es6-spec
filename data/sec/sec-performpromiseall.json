{"id":"sec-performpromiseall","html":"\n          <h1><span class=\"secnum\" id=\"sec-25.4.4.1.1\"><a href=\"/sec/sec-performpromiseall.html\" title=\"link to this section\">25.4.4.1.1</a></span> Runtime Semantics: PerformPromiseAll( iteratorRecord,\n              constructor, resultCapability)</h1>\n\n          <p class=\"normalbefore\">When the PerformPromiseAll abstract operation is called with arguments <var>iteratorRecord,\n          constructor,</var> and <var>resultCapability</var> the following steps are taken:</p>\n\n          <ol class=\"proc\">\n            <li><a href=\"/sec/sec-algorithm-conventions.html\">Assert</a>: <i>constructor</i> is a constructor function.</li>\n            <li><a href=\"/sec/sec-algorithm-conventions.html\">Assert</a>: <i>resultCapability</i> is a PromiseCapability record.</li>\n            <li>Let <i>values</i> be a new empty <a href=\"/sec/sec-list-and-record-specification-type.html\">List</a>.</li>\n            <li>Let <i>remainingElementsCount</i> be a new Record { [[value]]: 1 }.</li>\n            <li>Let <i>index</i> be 0.</li>\n            <li>Repeat\n              <ol class=\"block\">\n                <li>Let <i>next</i> be <a href=\"/sec/sec-iteratorstep.html\">IteratorStep</a>(<i>iteratorRecord</i>.[[iterator]]).</li>\n                <li>If <i>next</i> is an <a href=\"/sec/sec-completion-record-specification-type.html\">abrupt completion</a>, set\n                    <i>iteratorRecord</i>.[[done]] to <b>true</b>.</li>\n                <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>next</i>).</li>\n                <li>If <i>next</i> is <b>false</b>,\n                  <ol class=\"block\">\n                    <li>Set <i>iteratorRecord</i>.[[done]] to <b>true</b>.</li>\n                    <li>Set <i>remainingElementsCount</i>.[[value]] to <i>remainingElementsCount</i>.[[value]] &#x2212; 1.</li>\n                    <li>If <i>remainingElementsCount</i>.[[value]] is 0,\n                      <ol class=\"block\">\n                        <li>Let <i>valuesArray</i> be <a href=\"/sec/sec-createarrayfromlist.html\">CreateArrayFromList</a>(<i>values</i>).</li>\n                        <li>Let <i>resolveResult</i> be <a href=\"/sec/sec-call.html\">Call</a>(<i>resultCapability</i>.[[Resolve]],\n                            <b>undefined</b>, &#xAB;<i>valuesArray</i>&#xBB;).</li>\n                        <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>resolveResult</i>)</li>\n                      </ol>\n                    </li>\n                    <li>Return <i>resultCapability</i>.[[Promise]].</li>\n                  </ol>\n                </li>\n                <li>Let <i>nextValue</i> be <a href=\"/sec/sec-iteratorvalue.html\">IteratorValue</a>(<i>next</i>).</li>\n                <li>If <i>nextValue</i> is an <a href=\"/sec/sec-completion-record-specification-type.html\">abrupt completion</a>, set\n                    <i>iteratorRecord</i>.[[done]] to <b>true</b>.</li>\n                <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>nextValue</i>).</li>\n                <li>Append <b>undefined</b> to <i>values</i>.</li>\n                <li>Let <i>nextPromise</i> be <a href=\"/sec/sec-invoke.html\">Invoke</a>(<i>constructor</i>, <code>&quot;resolve&quot;</code>,\n                    &#xAB;&#x200D;<i>nextValue</i>&#xBB;).</li>\n                <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>nextPromise</i> ).</li>\n                <li>Let <i>resolveElement</i> be a new built-in function object as defined in <a href=\"/sec/sec-promise.all.html\">Promise.all</a> Resolve Element Functions.</li>\n                <li>Set the [[AlreadyCalled]] <a href=\"/sec/sec-object-internal-methods-and-internal-slots.html\">internal slot</a> of\n                    <i>resolveElement</i> to a new Record {[[value]]: <b>false</b> }.</li>\n                <li>Set the [[Index]] <a href=\"/sec/sec-object-internal-methods-and-internal-slots.html\">internal slot</a> of\n                    <i>resolveElement</i> to <i>index</i>.</li>\n                <li>Set the [[Values]] <a href=\"/sec/sec-object-internal-methods-and-internal-slots.html\">internal slot</a> of\n                    <i>resolveElement</i> to <i>values</i>.</li>\n                <li>Set the [[Capabilities]] <a href=\"/sec/sec-object-internal-methods-and-internal-slots.html\">internal slot</a> of\n                    <i>resolveElement</i> to <i>resultCapability</i>.</li>\n                <li>Set the [[RemainingElements]] <a href=\"/sec/sec-object-internal-methods-and-internal-slots.html\">internal slot</a> of\n                    <i>resolveElement</i> to <i>remainingElementsCount</i>.</li>\n                <li>Set <i>remainingElementsCount</i>.[[value]] to <i>remainingElementsCount</i>.[[value]] + 1.</li>\n                <li>Let <i>result</i> be <a href=\"/sec/sec-invoke.html\">Invoke</a>(<i>nextPromise</i>, <code>&quot;then&quot;</code>,\n                    &#xAB;&#x200D;<i>resolveElement</i>, <i>resultCapability</i>.[[Reject]]&#xBB;).</li>\n                <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>result</i>).</li>\n                <li>Set <i>index</i> to <i>index</i> + 1.</li>\n              </ol>\n            </li>\n          </ol>\n        "}