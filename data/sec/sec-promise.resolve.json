{"id":"sec-promise.resolve","html":"\n        <h1><span class=\"secnum\" id=\"sec-25.4.4.5\"><a href=\"/sec/sec-promise.resolve.html\" title=\"link to this section\">25.4.4.5</a></span>\n            Promise.resolve ( x )</h1>\n\n        <p class=\"normalbefore\">The <code>resolve</code> function returns either a new promise resolved with the passed argument,\n        or the argument itself if the argument is a promise produced by this constructor.</p>\n\n        <ol class=\"proc\">\n          <li>Let <i>C</i> be the <b>this</b> value.</li>\n          <li>If <a href=\"/sec/sec-ecmascript-data-types-and-values.html\">Type</a>(<i>C</i>) is not Object, throw a <b>TypeError</b>\n              exception.</li>\n          <li>If <a href=\"/sec/sec-ispromise.html\">IsPromise</a>(<i>x</i>) is <b>true</b>,\n            <ol class=\"block\">\n              <li>Let <i>xConstructor</i> be <a href=\"/sec/sec-get-o-p.html\">Get</a>(<i>x</i>, <code>&quot;constructor&quot;</code>).</li>\n              <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>xConstructor</i>).</li>\n              <li>If <a href=\"/sec/sec-samevalue.html\">SameValue</a>(<i>xConstructor</i>, <i>C</i>) is <b>true</b>, return <i>x</i>.</li>\n            </ol>\n          </li>\n          <li>Let <i>promiseCapability</i> be <a href=\"/sec/sec-newpromisecapability.html\">NewPromiseCapability</a>(<i>C</i>).</li>\n          <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>promiseCapability</i>).</li>\n          <li>Let <i>resolveResult</i> be <a href=\"/sec/sec-call.html\">Call</a>(<i>promiseCapability</i>.[[Resolve]], <b>undefined</b>,\n              &#xAB;<i>x</i>&#xBB;).</li>\n          <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>resolveResult</i>).</li>\n          <li>Return <i>promiseCapability</i>.[[Promise]].</li>\n        </ol>\n\n        <div class=\"note\">\n          <p><span class=\"nh\">NOTE</span>  The <code>resolve</code> function expects its <b>this</b> value to be a constructor\n          function that supports the parameter conventions of the <code>Promise</code> constructor.</p>\n        </div>\n      "}