{"id":"sec-promisecapability-records","html":"\n        <div class=\"front\">\n          <h1><span class=\"secnum\" id=\"sec-25.4.1.1\"><a href=\"/sec/sec-promisecapability-records.html\" title=\"link to this section\">25.4.1.1</a></span> PromiseCapability Records</h1>\n\n          <p>A PromiseCapability is a Record value used to encapsulate a promise object along with the functions that are capable\n          of resolving or rejecting that promise object. PromiseCapability records are produced by the <a href=\"/sec/sec-newpromisecapability.html\">NewPromiseCapability</a> abstract operation.</p>\n\n          <p>PromiseCapability Records have the fields listed in <a href=\"/sec/table-57.html\">Table 57</a>.</p>\n\n          <figure>\n            <figcaption><span id=\"table-57\">Table 57</span> &#x2014; PromiseCapability Record Fields</figcaption>\n            <table class=\"real-table\">\n              <tr>\n                <th>Field Name</th>\n                <th>Value</th>\n                <th>Meaning</th>\n              </tr>\n              <tr>\n                <td>[[Promise]]</td>\n                <td>An object</td>\n                <td>An object that is usable as a promise.</td>\n              </tr>\n              <tr>\n                <td>[[Resolve]]</td>\n                <td>A function object</td>\n                <td>The function that is used to resolve the given promise object.</td>\n              </tr>\n              <tr>\n                <td>[[Reject]]</td>\n                <td>A function object</td>\n                <td>The function that is used to reject the given promise object.</td>\n              </tr>\n            </table>\n          </figure>\n        </div>\n\n        <section id=\"sec-ifabruptrejectpromise\">\n          <h1><span class=\"secnum\" id=\"sec-25.4.1.1.1\"><a href=\"/sec/sec-ifabruptrejectpromise.html\" title=\"link to this section\">25.4.1.1.1</a></span> IfAbruptRejectPromise ( value, capability )</h1>\n\n          <p class=\"normalbefore\">IfAbruptRejectPromise is a short hand for a sequence of algorithm steps that use a\n          PromiseCapability record. An algorithm step of the form:</p>\n\n          <ol class=\"proc\">\n            <li>IfAbruptRejectPromise(<i>value</i>, <i>capability</i>).</li>\n          </ol>\n\n          <p>means the same thing as:</p>\n\n          <ol class=\"proc\">\n            <li>If <i>value</i> is an <a href=\"/sec/sec-completion-record-specification-type.html\">abrupt completion</a>,\n              <ol class=\"block\">\n                <li>Let <i>rejectResult</i> be <a href=\"/sec/sec-call.html\">Call</a>(<i>capability</i>.[[Reject]], <b>undefined</b>,\n                    &#xAB;<i>value</i>.[[value]]&#xBB;).</li>\n                <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>rejectResult</i>).</li>\n                <li>Return <i>capability</i>.[[Promise]].</li>\n              </ol>\n            </li>\n            <li>Else if <i>value</i> is a <a href=\"/sec/sec-completion-record-specification-type.html\">Completion Record</a>, let\n                <i>value</i> be <i>value</i>.[[value]].</li>\n          </ol>\n        </section>\n      "}