{"id":"sec-promiseresolvethenablejob","html":"\n        <h1><span class=\"secnum\" id=\"sec-25.4.2.2\"><a href=\"/sec/sec-promiseresolvethenablejob.html\" title=\"link to this section\">25.4.2.2</a></span> PromiseResolveThenableJob ( promiseToResolve, thenable, then)</h1>\n\n        <p class=\"normalbefore\">The job PromiseResolveThenableJob with parameters <var>promiseToResolve</var>,\n        <var>thenable</var>, and <var>then</var> performs the following steps:</p>\n\n        <ol class=\"proc\">\n          <li>Let <i>resolvingFunctions</i> be <a href=\"/sec/sec-createresolvingfunctions.html\">CreateResolvingFunctions</a>(<i>promiseToResolve</i>).</li>\n          <li>Let <i>thenCallResult</i> be <a href=\"/sec/sec-call.html\">Call</a>(<i>then</i>, <i>thenable</i>,\n              &#xAB;<i>resolvingFunctions</i>.[[Resolve]], <i>resolvingFunctions</i>.[[Reject]]&#xBB;).</li>\n          <li>If <i>thenCallResult</i> is an <a href=\"/sec/sec-completion-record-specification-type.html\">abrupt completion</a>,\n            <ol class=\"block\">\n              <li>Let <i>status</i> be <a href=\"/sec/sec-call.html\">Call</a>(<i>resolvingFunctions</i>.[[Reject]], <b>undefined</b>,\n                  &#xAB;<i>thenCallResult</i>.[[value]]&#xBB;)<i>.</i></li>\n              <li>NextJob <a href=\"/sec/sec-completion-record-specification-type.html\">Completion</a>(<i>status</i>)<i>.</i></li>\n            </ol>\n          </li>\n          <li>NextJob <a href=\"/sec/sec-completion-record-specification-type.html\">Completion</a>(<i>thenCallResult</i>).</li>\n        </ol>\n\n        <div class=\"note\">\n          <p><span class=\"nh\">NOTE</span> This Job uses the supplied thenable and its <code>then</code> method to resolve the\n          given promise. This process must take place as a Job to ensure that the evaluation of the <code>then</code> method\n          occurs after evaluation of any surrounding code has completed.</p>\n        </div>\n      "}