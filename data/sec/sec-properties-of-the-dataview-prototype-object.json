{"id":"sec-properties-of-the-dataview-prototype-object","html":"\n      <div class=\"front\">\n        <h1><span class=\"secnum\" id=\"sec-24.2.4\"><a href=\"/sec/sec-properties-of-the-dataview-prototype-object.html\" title=\"link to this section\">24.2.4</a></span> Properties of the DataView Prototype Object</h1>\n\n        <p>The DataView prototype object is the intrinsic object %DataViewPrototype%. The value of the [[Prototype]] <a href=\"/sec/sec-object-internal-methods-and-internal-slots.html\">internal slot</a> of the DataView prototype object is the intrinsic\n        object %ObjectPrototype% (<a href=\"/sec/sec-properties-of-the-object-prototype-object.html\">19.1.3</a>). The DataView prototype\n        object is an ordinary object. It does not have a [[DataView]], [[ViewedArrayBuffer]], [[ByteLength]], or [[ByteOffset]] <a href=\"/sec/sec-object-internal-methods-and-internal-slots.html\">internal slot</a>.</p>\n      </div>\n\n      <section id=\"sec-get-dataview.prototype.buffer\">\n        <h1><span class=\"secnum\" id=\"sec-24.2.4.1\"><a href=\"/sec/sec-get-dataview.prototype.buffer.html\" title=\"link to this section\">24.2.4.1</a></span> get DataView.prototype.buffer</h1>\n\n        <p class=\"normalbefore\"><code>DataView.prototype.buffer</code> is an accessor property whose set accessor function is\n        <span class=\"value\">undefined</span>. Its get accessor function performs the following steps:</p>\n\n        <ol class=\"proc\">\n          <li>Let <i>O</i> be the <b>this</b> value.</li>\n          <li>If <a href=\"/sec/sec-ecmascript-data-types-and-values.html\">Type</a>(<i>O</i>) is not Object, throw a <b>TypeError</b>\n              exception.</li>\n          <li>If <i>O</i> does not have a [[ViewedArrayBuffer]] <a href=\"/sec/sec-object-internal-methods-and-internal-slots.html\">internal\n              slot</a>, throw a <b>TypeError</b> exception.</li>\n          <li>Let <i>buffer</i> be the value of <i>O</i>&#x2019;s [[ViewedArrayBuffer]] <a href=\"/sec/sec-object-internal-methods-and-internal-slots.html\">internal slot</a>.</li>\n          <li>Return <i>buffer</i>.</li>\n        </ol>\n      </section>\n\n      <section id=\"sec-get-dataview.prototype.bytelength\">\n        <h1><span class=\"secnum\" id=\"sec-24.2.4.2\"><a href=\"/sec/sec-get-dataview.prototype.bytelength.html\" title=\"link to this section\">24.2.4.2</a></span> get DataView.prototype.byteLength</h1>\n\n        <p class=\"normalbefore\"><code>DataView</code>.<code>prototype.byteLength</code> is an accessor property whose set accessor\n        function is <span class=\"value\">undefined</span>. Its get accessor function performs the following steps:</p>\n\n        <ol class=\"proc\">\n          <li>Let <i>O</i> be the <b>this</b> value.</li>\n          <li>If <a href=\"/sec/sec-ecmascript-data-types-and-values.html\">Type</a>(<i>O</i>) is not Object, throw a <b>TypeError</b>\n              exception.</li>\n          <li>If <i>O</i> does not have a [[ViewedArrayBuffer]] <a href=\"/sec/sec-object-internal-methods-and-internal-slots.html\">internal\n              slot</a>, throw a <b>TypeError</b> exception.</li>\n          <li>Let <i>buffer</i> be the value of <i>O</i>&#x2019;s [[ViewedArrayBuffer]] <a href=\"/sec/sec-object-internal-methods-and-internal-slots.html\">internal slot</a>.</li>\n          <li>If <a href=\"/sec/sec-isdetachedbuffer.html\">IsDetachedBuffer</a>(<i>buffer</i>) is <b>true</b>, throw a <b>TypeError</b>\n              exception.</li>\n          <li>Let <i>size</i> be the value of <i>O</i>&#x2019;s [[ByteLength]] <a href=\"/sec/sec-object-internal-methods-and-internal-slots.html\">internal slot</a>.</li>\n          <li>Return <i>size</i>.</li>\n        </ol>\n      </section>\n\n      <section id=\"sec-get-dataview.prototype.byteoffset\">\n        <h1><span class=\"secnum\" id=\"sec-24.2.4.3\"><a href=\"/sec/sec-get-dataview.prototype.byteoffset.html\" title=\"link to this section\">24.2.4.3</a></span> get DataView.prototype.byteOffset</h1>\n\n        <p class=\"normalbefore\"><code>DataView</code>.<code>prototype.byteOffset</code> is an accessor property whose set accessor\n        function is <span class=\"value\">undefined</span>. Its get accessor function performs the following steps:</p>\n\n        <ol class=\"proc\">\n          <li>Let <i>O</i> be the <b>this</b> value.</li>\n          <li>If <a href=\"/sec/sec-ecmascript-data-types-and-values.html\">Type</a>(<i>O</i>) is not Object, throw a <b>TypeError</b>\n              exception.</li>\n          <li>If <i>O</i> does not have a [[ViewedArrayBuffer]] <a href=\"/sec/sec-object-internal-methods-and-internal-slots.html\">internal\n              slot</a>, throw a <b>TypeError</b> exception.</li>\n          <li>Let <i>buffer</i> be the value of <i>O</i>&#x2019;s [[ViewedArrayBuffer]] <a href=\"/sec/sec-object-internal-methods-and-internal-slots.html\">internal slot</a>.</li>\n          <li>If <a href=\"/sec/sec-isdetachedbuffer.html\">IsDetachedBuffer</a>(<i>buffer</i>) is <b>true</b>, throw a <b>TypeError</b>\n              exception.</li>\n          <li>Let <i>offset</i> be the value of <i>O</i>&#x2019;s [[ByteOffset]] <a href=\"/sec/sec-object-internal-methods-and-internal-slots.html\">internal slot</a>.</li>\n          <li>Return <i>offset</i>.</li>\n        </ol>\n      </section>\n\n      <section id=\"sec-dataview.prototype.constructor\">\n        <h1><span class=\"secnum\" id=\"sec-24.2.4.4\"><a href=\"/sec/sec-dataview.prototype.constructor.html\" title=\"link to this section\">24.2.4.4</a></span> DataView.prototype.constructor</h1>\n\n        <p>The initial value of <code>DataView.prototype.constructor</code> is the intrinsic object %DataView%.</p>\n      </section>\n\n      <section id=\"sec-dataview.prototype.getfloat32\">\n        <h1><span class=\"secnum\" id=\"sec-24.2.4.5\"><a href=\"/sec/sec-dataview.prototype.getfloat32.html\" title=\"link to this section\">24.2.4.5</a></span> DataView.prototype.getFloat32 ( byteOffset [ , littleEndian ] )</h1>\n\n        <p class=\"normalbefore\">When the <code>getFloat32</code> method is called with argument <var>byteOffset</var> and optional\n        argument <i>littleEndian</i> the following steps are taken:</p>\n\n        <ol class=\"proc\">\n          <li>Let <i>v</i> be the <b>this</b> value.</li>\n          <li>If <i>littleEndian</i> is not present, let <i>littleEndian</i> be <b>false</b>.</li>\n          <li>Return <a href=\"/sec/sec-getviewvalue.html\">GetViewValue</a>(<i>v</i>, <i>byteOffset</i>, <i>littleEndian</i>,\n              <code>&quot;Float32&quot;</code>).</li>\n        </ol>\n      </section>\n\n      <section id=\"sec-dataview.prototype.getfloat64\">\n        <h1><span class=\"secnum\" id=\"sec-24.2.4.6\"><a href=\"/sec/sec-dataview.prototype.getfloat64.html\" title=\"link to this section\">24.2.4.6</a></span> DataView.prototype.getFloat64 ( byteOffset [ , littleEndian ] )</h1>\n\n        <p class=\"normalbefore\">When the <code>getFloat64</code> method is called with argument <var>byteOffset</var> and optional\n        argument <i>littleEndian</i> the following steps are taken:</p>\n\n        <ol class=\"proc\">\n          <li>Let <i>v</i> be the <b>this</b> value.</li>\n          <li>If <i>littleEndian</i> is not present, let <i>littleEndian</i> be <b>false</b>.</li>\n          <li>Return <a href=\"/sec/sec-getviewvalue.html\">GetViewValue</a>(<i>v</i>, <i>byteOffset</i>, <i>littleEndian</i>,\n              <code>&quot;Float64&quot;</code>).</li>\n        </ol>\n      </section>\n\n      <section id=\"sec-dataview.prototype.getint8\">\n        <h1><span class=\"secnum\" id=\"sec-24.2.4.7\"><a href=\"/sec/sec-dataview.prototype.getint8.html\" title=\"link to this section\">24.2.4.7</a></span> DataView.prototype.getInt8 ( byteOffset )</h1>\n\n        <p class=\"normalbefore\">When the <code>getInt8</code> method is called with argument <var>byteOffset</var> the following\n        steps are taken:</p>\n\n        <ol class=\"proc\">\n          <li>Let <i>v</i> be the <b>this</b> value.</li>\n          <li>Return <a href=\"/sec/sec-getviewvalue.html\">GetViewValue</a>(<i>v</i>, <i>byteOffset</i>, <b>true</b>,\n              <code>&quot;Int8&quot;</code>).</li>\n        </ol>\n      </section>\n\n      <section id=\"sec-dataview.prototype.getint16\">\n        <h1><span class=\"secnum\" id=\"sec-24.2.4.8\"><a href=\"/sec/sec-dataview.prototype.getint16.html\" title=\"link to this section\">24.2.4.8</a></span> DataView.prototype.getInt16 ( byteOffset [ , littleEndian ] )</h1>\n\n        <p class=\"normalbefore\">When the <code>getInt16</code> method is called with argument <var>byteOffset</var> and optional\n        argument <i>littleEndian</i> the following steps are taken:</p>\n\n        <ol class=\"proc\">\n          <li>Let <i>v</i> be the <b>this</b> value.</li>\n          <li>If <i>littleEndian</i> is not present, let <i>littleEndian</i> be <b>false</b>.</li>\n          <li>Return <a href=\"/sec/sec-getviewvalue.html\">GetViewValue</a>(<i>v</i>, <i>byteOffset</i>, <i>littleEndian</i>,\n              <code>&quot;Int16&quot;</code>).</li>\n        </ol>\n      </section>\n\n      <section id=\"sec-dataview.prototype.getint32\">\n        <h1><span class=\"secnum\" id=\"sec-24.2.4.9\"><a href=\"/sec/sec-dataview.prototype.getint32.html\" title=\"link to this section\">24.2.4.9</a></span> DataView.prototype.getInt32 ( byteOffset [ , littleEndian ] )</h1>\n\n        <p class=\"normalbefore\">When the <code>getInt32</code> method is called with argument <var>byteOffset</var> and optional\n        argument <i>littleEndian</i> the following steps are taken:</p>\n\n        <ol class=\"proc\">\n          <li>Let <i>v</i> be the <b>this</b> value.</li>\n          <li>If <i>littleEndian</i> is not present, let <i>littleEndian</i> be <b>undefined</b>.</li>\n          <li>Return <a href=\"/sec/sec-getviewvalue.html\">GetViewValue</a>(<i>v</i>, <i>byteOffset</i>, <i>littleEndian</i>,\n              <code>&quot;Int32&quot;</code>).</li>\n        </ol>\n      </section>\n\n      <section id=\"sec-dataview.prototype.getuint8\">\n        <h1><span class=\"secnum\" id=\"sec-24.2.4.10\"><a href=\"/sec/sec-dataview.prototype.getuint8.html\" title=\"link to this section\">24.2.4.10</a></span> DataView.prototype.getUint8 ( byteOffset )</h1>\n\n        <p class=\"normalbefore\">When the <code>getUint8</code> method is called with argument <var>byteOffset</var> the following\n        steps are taken:</p>\n\n        <ol class=\"proc\">\n          <li>Let <i>v</i> be the <b>this</b> value.</li>\n          <li>Return <a href=\"/sec/sec-getviewvalue.html\">GetViewValue</a>(<i>v</i>, <i>byteOffset</i>, <b>true</b>,\n              <code>&quot;Uint8&quot;</code>).</li>\n        </ol>\n      </section>\n\n      <section id=\"sec-dataview.prototype.getuint16\">\n        <h1><span class=\"secnum\" id=\"sec-24.2.4.11\"><a href=\"/sec/sec-dataview.prototype.getuint16.html\" title=\"link to this section\">24.2.4.11</a></span> DataView.prototype.getUint16 ( byteOffset [ , littleEndian ] )</h1>\n\n        <p class=\"normalbefore\">When the <code>getUint16</code> method is called with argument <var>byteOffset</var> and optional\n        argument <i>littleEndian</i> the following steps are taken:</p>\n\n        <ol class=\"proc\">\n          <li>Let <i>v</i> be the <b>this</b> value.</li>\n          <li>If <i>littleEndian</i> is not present, let <i>littleEndian</i> be <b>false</b>.</li>\n          <li>Return <a href=\"/sec/sec-getviewvalue.html\">GetViewValue</a>(<i>v</i>, <i>byteOffset</i>, <i>littleEndian</i>,\n              <code>&quot;Uint16&quot;</code>).</li>\n        </ol>\n      </section>\n\n      <section id=\"sec-dataview.prototype.getuint32\">\n        <h1><span class=\"secnum\" id=\"sec-24.2.4.12\"><a href=\"/sec/sec-dataview.prototype.getuint32.html\" title=\"link to this section\">24.2.4.12</a></span> DataView.prototype.getUint32 ( byteOffset [ , littleEndian ] )</h1>\n\n        <p class=\"normalbefore\">When the <code>getUint32</code> method is called with argument <var>byteOffset</var> and optional\n        argument <i>littleEndian</i> the following steps are taken:</p>\n\n        <ol class=\"proc\">\n          <li>Let <i>v</i> be the <b>this</b> value.</li>\n          <li>If <i>littleEndian</i> is not present, let <i>littleEndian</i> be <b>false</b>.</li>\n          <li>Return <a href=\"/sec/sec-getviewvalue.html\">GetViewValue</a>(<i>v</i>, <i>byteOffset</i>, <i>littleEndian</i>,\n              <code>&quot;Uint32&quot;</code>).</li>\n        </ol>\n      </section>\n\n      <section id=\"sec-dataview.prototype.setfloat32\">\n        <h1><span class=\"secnum\" id=\"sec-24.2.4.13\"><a href=\"/sec/sec-dataview.prototype.setfloat32.html\" title=\"link to this section\">24.2.4.13</a></span> DataView.prototype.setFloat32 ( byteOffset, value [ , littleEndian ]\n            )</h1>\n\n        <p class=\"normalbefore\">When the <code>setFloat32</code> method is called with arguments <var>byteOffset</var> and\n        <var>value</var> and optional argument <i>littleEndian</i> the following steps are taken:</p>\n\n        <ol class=\"proc\">\n          <li>Let <i>v</i> be the <b>this</b> value.</li>\n          <li>If <i>littleEndian</i> is not present, let <i>littleEndian</i> be <b>false</b>.</li>\n          <li>Return <a href=\"/sec/sec-setviewvalue.html\">SetViewValue</a>(<i>v</i>, <i>byteOffset</i>, <i>littleEndian</i>,\n              <code>&quot;Float32&quot;</code>, <i>value</i>).</li>\n        </ol>\n      </section>\n\n      <section id=\"sec-dataview.prototype.setfloat64\">\n        <h1><span class=\"secnum\" id=\"sec-24.2.4.14\"><a href=\"/sec/sec-dataview.prototype.setfloat64.html\" title=\"link to this section\">24.2.4.14</a></span> DataView.prototype.setFloat64 ( byteOffset, value [ , littleEndian ]\n            )</h1>\n\n        <p class=\"normalbefore\">When the <code>setFloat64</code> method is called with arguments <var>byteOffset</var> and\n        <var>value</var> and optional argument <i>littleEndian</i> the following steps are taken:</p>\n\n        <ol class=\"proc\">\n          <li>Let <i>v</i> be the <b>this</b> value.</li>\n          <li>If <i>littleEndian</i> is not present, let <i>littleEndian</i> be <b>false</b>.</li>\n          <li>Return <a href=\"/sec/sec-setviewvalue.html\">SetViewValue</a>(<i>v</i>, <i>byteOffset</i>, <i>littleEndian</i>,\n              <code>&quot;Float64&quot;</code>, <i>value</i>).</li>\n        </ol>\n      </section>\n\n      <section id=\"sec-dataview.prototype.setint8\">\n        <h1><span class=\"secnum\" id=\"sec-24.2.4.15\"><a href=\"/sec/sec-dataview.prototype.setint8.html\" title=\"link to this section\">24.2.4.15</a></span> DataView.prototype.setInt8 ( byteOffset, value )</h1>\n\n        <p class=\"normalbefore\">When the <code>setInt8</code> method is called with arguments <var>byteOffset</var> and\n        <var>value</var> the following steps are taken:</p>\n\n        <ol class=\"proc\">\n          <li>Let <i>v</i> be the <b>this</b> value.</li>\n          <li>Return <a href=\"/sec/sec-setviewvalue.html\">SetViewValue</a>(<i>v</i>, <i>byteOffset</i>, <b>true</b>, <code>&quot;Int8&quot;</code>,\n              <i>value</i>).</li>\n        </ol>\n      </section>\n\n      <section id=\"sec-dataview.prototype.setint16\">\n        <h1><span class=\"secnum\" id=\"sec-24.2.4.16\"><a href=\"/sec/sec-dataview.prototype.setint16.html\" title=\"link to this section\">24.2.4.16</a></span> DataView.prototype.setInt16 ( byteOffset, value [ , littleEndian ]\n            )</h1>\n\n        <p class=\"normalbefore\">When the <code>setInt16</code> method is called with arguments <var>byteOffset</var> and\n        <var>value</var> and optional argument <i>littleEndian</i> the following steps are taken:</p>\n\n        <ol class=\"proc\">\n          <li>Let <i>v</i> be the <b>this</b> value.</li>\n          <li>If <i>littleEndian</i> is not present, let <i>littleEndian</i> be <b>false</b>.</li>\n          <li>Return <a href=\"/sec/sec-setviewvalue.html\">SetViewValue</a>(<i>v</i>, <i>byteOffset</i>, <i>littleEndian</i>,\n              <code>&quot;Int16&quot;</code>, <i>value</i>).</li>\n        </ol>\n      </section>\n\n      <section id=\"sec-dataview.prototype.setint32\">\n        <h1><span class=\"secnum\" id=\"sec-24.2.4.17\"><a href=\"/sec/sec-dataview.prototype.setint32.html\" title=\"link to this section\">24.2.4.17</a></span> DataView.prototype.setInt32 ( byteOffset, value [ , littleEndian ]\n            )</h1>\n\n        <p class=\"normalbefore\">When the <code>setInt32</code> method is called with arguments <var>byteOffset</var> and\n        <var>value</var> and optional argument <i>littleEndian</i> the following steps are taken:</p>\n\n        <ol class=\"proc\">\n          <li>Let <i>v</i> be the <b>this</b> value.</li>\n          <li>If <i>littleEndian</i> is not present, let <i>littleEndian</i> be <b>false</b>.</li>\n          <li>Return <a href=\"/sec/sec-setviewvalue.html\">SetViewValue</a>(<i>v</i>, <i>byteOffset</i>, <i>littleEndian</i>,\n              <code>&quot;Int32&quot;</code>, <i>value</i>).</li>\n        </ol>\n      </section>\n\n      <section id=\"sec-dataview.prototype.setuint8\">\n        <h1><span class=\"secnum\" id=\"sec-24.2.4.18\"><a href=\"/sec/sec-dataview.prototype.setuint8.html\" title=\"link to this section\">24.2.4.18</a></span> DataView.prototype.setUint8 ( byteOffset, value )</h1>\n\n        <p class=\"normalbefore\">When the <code>setUint8</code> method is called with arguments <var>byteOffset</var> and\n        <var>value</var> the following steps are taken:</p>\n\n        <ol class=\"proc\">\n          <li>Let <i>v</i> be the <b>this</b> value.</li>\n          <li>Return <a href=\"/sec/sec-setviewvalue.html\">SetViewValue</a>(<i>v</i>, <i>byteOffset</i>, <b>true</b>, <code>&quot;Uint8&quot;</code>,\n              <i>value</i>).</li>\n        </ol>\n      </section>\n\n      <section id=\"sec-dataview.prototype.setuint16\">\n        <h1><span class=\"secnum\" id=\"sec-24.2.4.19\"><a href=\"/sec/sec-dataview.prototype.setuint16.html\" title=\"link to this section\">24.2.4.19</a></span> DataView.prototype.setUint16 ( byteOffset, value [ , littleEndian ]\n            )</h1>\n\n        <p class=\"normalbefore\">When the <code>setUint16</code> method is called with arguments <var>byteOffset</var> and\n        <var>value</var> and optional argument <i>littleEndian</i> the following steps are taken:</p>\n\n        <ol class=\"proc\">\n          <li>Let <i>v</i> be the <b>this</b> value.</li>\n          <li>If <i>littleEndian</i> is not present, let <i>littleEndian</i> be <b>false</b>.</li>\n          <li>Return <a href=\"/sec/sec-setviewvalue.html\">SetViewValue</a>(<i>v</i>, <i>byteOffset</i>, <i>littleEndian</i>,\n              <code>&quot;Uint16&quot;</code>, <i>value</i>).</li>\n        </ol>\n      </section>\n\n      <section id=\"sec-dataview.prototype.setuint32\">\n        <h1><span class=\"secnum\" id=\"sec-24.2.4.20\"><a href=\"/sec/sec-dataview.prototype.setuint32.html\" title=\"link to this section\">24.2.4.20</a></span> DataView.prototype.setUint32 ( byteOffset, value [ , littleEndian ]\n            )</h1>\n\n        <p class=\"normalbefore\">When the <code>setUint32</code> method is called with arguments <var>byteOffset</var> and\n        <var>value</var> and optional argument <i>littleEndian</i> the following steps are taken:</p>\n\n        <ol class=\"proc\">\n          <li>Let <i>v</i> be the <b>this</b> value.</li>\n          <li>If <i>littleEndian</i> is not present, let <i>littleEndian</i> be <b>false</b>.</li>\n          <li>Return <a href=\"/sec/sec-setviewvalue.html\">SetViewValue</a>(<i>v</i>, <i>byteOffset</i>, <i>littleEndian</i>,\n              <code>&quot;Uint32&quot;</code>, <i>value</i>).</li>\n        </ol>\n      </section>\n\n      <section id=\"sec-dataview.prototype-@@tostringtag\">\n        <h1><span class=\"secnum\" id=\"sec-24.2.4.21\"><a href=\"/sec/sec-dataview.prototype-@@tostringtag.html\" title=\"link to this section\">24.2.4.21</a></span> DataView.prototype[ @@toStringTag ]</h1>\n\n        <p>The initial value of the @@toStringTag property is the String value <code>&quot;DataView&quot;</code>.</p>\n\n        <p>This property has the attributes { [[Writable]]: <span class=\"value\">false</span>, [[Enumerable]]: <span class=\"value\">false</span>, [[Configurable]]: <span class=\"value\">true</span> }.</p>\n      </section>\n    "}