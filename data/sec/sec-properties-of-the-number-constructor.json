{"id":"sec-properties-of-the-number-constructor","html":"\n      <div class=\"front\">\n        <h1><span class=\"secnum\" id=\"sec-20.1.2\"><a href=\"/sec/sec-properties-of-the-number-constructor.html\" title=\"link to this section\">20.1.2</a></span> Properties of the Number Constructor</h1>\n\n        <p>The value of the [[Prototype]] <a href=\"/sec/sec-object-internal-methods-and-internal-slots.html\">internal slot</a> of the\n        Number constructor is the intrinsic object %FunctionPrototype% (<a href=\"/sec/sec-properties-of-the-function-prototype-object.html\">19.2.3</a>).</p>\n\n        <p>Besides the <code>length</code> property (whose value is <b>1</b>), the Number constructor has the following\n        properties:</p>\n      </div>\n\n      <section id=\"sec-number.epsilon\">\n        <h1><span class=\"secnum\" id=\"sec-20.1.2.1\"><a href=\"/sec/sec-number.epsilon.html\" title=\"link to this section\">20.1.2.1</a></span>\n            Number.EPSILON</h1>\n\n        <p>The value of Number.EPSILON is the difference between 1 and the smallest value greater than 1 that is representable as\n        a Number value, which is approximately 2.2204460492503130808472633361816 x 10&#x200D;<sup>&#x2212;&#x200D;16</sup>.</p>\n\n        <p>This property has the attributes { [[Writable]]: <b>false</b>, [[Enumerable]]: <b>false</b>, [[Configurable]]:\n        <b>false</b> }.</p>\n      </section>\n\n      <section id=\"sec-number.isfinite\">\n        <h1><span class=\"secnum\" id=\"sec-20.1.2.2\"><a href=\"/sec/sec-number.isfinite.html\" title=\"link to this section\">20.1.2.2</a></span>\n            Number.isFinite ( number )</h1>\n\n        <p class=\"normalbefore\">When the <code>Number.isFinite</code> is called with one argument <var>number</var>, the following\n        steps are taken:</p>\n\n        <ol class=\"proc\">\n          <li>If <a href=\"/sec/sec-ecmascript-data-types-and-values.html\">Type</a>(<i>number</i>) is not Number, return <b>false</b>.</li>\n          <li>If <i>number</i> is <b>NaN</b>, <b>+&#x221E;</b>, or <b>&#x2212;&#x221E;</b>, return <b>false</b>.</li>\n          <li>Otherwise, return <b>true</b>.</li>\n        </ol>\n      </section>\n\n      <section id=\"sec-number.isinteger\">\n        <h1><span class=\"secnum\" id=\"sec-20.1.2.3\"><a href=\"/sec/sec-number.isinteger.html\" title=\"link to this section\">20.1.2.3</a></span> Number.isInteger ( number )</h1>\n\n        <p class=\"normalbefore\">When the <code>Number.isInteger</code> is called with one argument <var>number</var>, the\n        following steps are taken:</p>\n\n        <ol class=\"proc\">\n          <li>If <a href=\"/sec/sec-ecmascript-data-types-and-values.html\">Type</a>(<i>number</i>) is not Number, return <b>false</b>.</li>\n          <li>If <i>number</i> is <b>NaN</b>, <b>+&#x221E;</b>, or <b>&#x2212;&#x221E;</b>, return <b>false</b>.</li>\n          <li>Let <i>integer</i> be <a href=\"/sec/sec-tointeger.html\">ToInteger</a>(<i>number</i>).</li>\n          <li>If <i>integer</i> is not equal to <i>number</i>, return <b>false</b>.</li>\n          <li>Otherwise, return <b>true</b>.</li>\n        </ol>\n      </section>\n\n      <section id=\"sec-number.isnan\">\n        <h1><span class=\"secnum\" id=\"sec-20.1.2.4\"><a href=\"/sec/sec-number.isnan.html\" title=\"link to this section\">20.1.2.4</a></span>\n            Number.isNaN ( number )</h1>\n\n        <p class=\"normalbefore\">When the <code>Number.isNaN</code> is called with one argument <var>number</var>, the following\n        steps are taken:</p>\n\n        <ol class=\"proc\">\n          <li>If <a href=\"/sec/sec-ecmascript-data-types-and-values.html\">Type</a>(<i>number</i>) is not Number, return <b>false</b>.</li>\n          <li>If <i>number</i> is <b>NaN</b>, return <b>true</b>.</li>\n          <li>Otherwise, return <b>false</b>.</li>\n        </ol>\n\n        <div class=\"note\">\n          <p><span class=\"nh\">NOTE</span> This function differs from the global isNaN function (<a href=\"/sec/sec-isnan-number.html\">18.2.3</a>) is that it does not convert its argument to a Number before determining whether it\n          is NaN.</p>\n        </div>\n      </section>\n\n      <section id=\"sec-number.issafeinteger\">\n        <h1><span class=\"secnum\" id=\"sec-20.1.2.5\"><a href=\"/sec/sec-number.issafeinteger.html\" title=\"link to this section\">20.1.2.5</a></span> Number.isSafeInteger ( number )</h1>\n\n        <p class=\"normalbefore\">When the <code>Number.isSafeInteger</code> is called with one argument <var>number</var>, the\n        following steps are taken:</p>\n\n        <ol class=\"proc\">\n          <li>If <a href=\"/sec/sec-ecmascript-data-types-and-values.html\">Type</a>(<i>number</i>) is not Number, return <b>false</b>.</li>\n          <li>If <i>number</i> is <b>NaN</b>, <b>+&#x221E;</b>, or <b>&#x2212;&#x221E;</b>, return <b>false</b>.</li>\n          <li>Let <i>integer</i> be <a href=\"/sec/sec-tointeger.html\">ToInteger</a>(<i>number</i>).</li>\n          <li>If <i>integer</i> is not equal to <i>number</i>, return <b>false</b>.</li>\n          <li>If <a href=\"/sec/sec-algorithm-conventions.html\">abs</a>(<i>integer</i>) &#x2264; 2<sup>53</sup>&#x2212;1, return\n              <b>true</b>.</li>\n          <li>Otherwise, return <b>false</b>.</li>\n        </ol>\n      </section>\n\n      <section id=\"sec-number.max_safe_integer\">\n        <h1><span class=\"secnum\" id=\"sec-20.1.2.6\"><a href=\"/sec/sec-number.max_safe_integer.html\" title=\"link to this section\">20.1.2.6</a></span> Number.MAX_SAFE_INTEGER</h1>\n\n        <div class=\"note\">\n          <p><span class=\"nh\">NOTE</span>   The value of <code>Number.MAX_SAFE_INTEGER</code> is the largest integer n such that n\n          and n + 1 are both exactly representable as a Number value.</p>\n        </div>\n\n        <p>The value of Number.MAX_SAFE_INTEGER is 9007199254740991 (2<sup>53</sup>&#x2212;1).</p>\n\n        <p><br>This property has the attributes { [[Writable]]: <b>false</b>, [[Enumerable]]: <b>false</b>, [[Configurable]]:\n        <b>false</b> }.</p>\n      </section>\n\n      <section id=\"sec-number.max_value\">\n        <h1><span class=\"secnum\" id=\"sec-20.1.2.7\"><a href=\"/sec/sec-number.max_value.html\" title=\"link to this section\">20.1.2.7</a></span> Number.MAX_VALUE</h1>\n\n        <p>The value of <code>Number.MAX_VALUE</code> is the largest positive finite value of the Number type, which is\n        approximately <span style=\"font-family: Times New Roman\">1.7976931348623157&#xA0;&#xD7;&#xA0;10<sup>308</sup></span>.</p>\n\n        <p>This property has the attributes { [[Writable]]: <b>false</b>, [[Enumerable]]: <b>false</b>, [[Configurable]]:\n        <b>false</b> }.</p>\n      </section>\n\n      <section id=\"sec-number.min_safe_integer\">\n        <h1><span class=\"secnum\" id=\"sec-20.1.2.8\"><a href=\"/sec/sec-number.min_safe_integer.html\" title=\"link to this section\">20.1.2.8</a></span> Number.MIN_SAFE_INTEGER</h1>\n\n        <div class=\"note\">\n          <p><span class=\"nh\">NOTE</span>   The value of <code>Number.MIN_SAFE_INTEGER</code> is the smallest integer n such that\n          n and n &#x2212; 1 are both exactly representable as a Number value.</p>\n        </div>\n\n        <p>The value of Number.MIN_SAFE_INTEGER is &#x2212;9007199254740991 (&#x2212;(2<sup>53</sup>&#x2212;1)).</p>\n\n        <p>This property has the attributes { [[Writable]]: <b>false</b>, [[Enumerable]]: <b>false</b>, [[Configurable]]:\n        <b>false</b> }.</p>\n      </section>\n\n      <section id=\"sec-number.min_value\">\n        <h1><span class=\"secnum\" id=\"sec-20.1.2.9\"><a href=\"/sec/sec-number.min_value.html\" title=\"link to this section\">20.1.2.9</a></span> Number.MIN_VALUE</h1>\n\n        <p>The value of <code>Number.MIN_VALUE</code> is the smallest positive value of the Number type, which is approximately\n        <span style=\"font-family: Times New Roman\">5&#xA0;&#xD7;&#xA0;10<sup>&#x2212;324</sup></span>.</p>\n\n        <p>In the IEEE 754-2008 double precision binary representation, the smallest possible value is a denormalized number. If\n        an implementation does not support denormalized values, the value of <code>Number.MIN_VALUE</code> must be the smallest\n        non-zero positive value that can actually be represented by the implementation.</p>\n\n        <p>This property has the attributes { [[Writable]]: <b>false</b>, [[Enumerable]]: <b>false</b>, [[Configurable]]:\n        <b>false</b> }.</p>\n      </section>\n\n      <section id=\"sec-number.nan\">\n        <h1><span class=\"secnum\" id=\"sec-20.1.2.10\"><a href=\"/sec/sec-number.nan.html\" title=\"link to this section\">20.1.2.10</a></span>\n            Number.NaN</h1>\n\n        <p>The value of <code>Number.NaN</code> is <b>NaN</b>.</p>\n\n        <p>This property has the attributes { [[Writable]]: <b>false</b>, [[Enumerable]]: <b>false</b>, [[Configurable]]:\n        <b>false</b> }.</p>\n      </section>\n\n      <section id=\"sec-number.negative_infinity\">\n        <h1><span class=\"secnum\" id=\"sec-20.1.2.11\"><a href=\"/sec/sec-number.negative_infinity.html\" title=\"link to this section\">20.1.2.11</a></span> Number.NEGATIVE_INFINITY</h1>\n\n        <p>The value of Number.NEGATIVE_INFINITY is &#x2212;&#x221E;.</p>\n\n        <p>This property has the attributes { [[Writable]]: <b>false</b>, [[Enumerable]]: <b>false</b>, [[Configurable]]:\n        <b>false</b> }.</p>\n      </section>\n\n      <section id=\"sec-number.parsefloat\">\n        <h1><span class=\"secnum\" id=\"sec-20.1.2.12\"><a href=\"/sec/sec-number.parsefloat.html\" title=\"link to this section\">20.1.2.12</a></span> Number.parseFloat ( string )</h1>\n\n        <p>The value of the <code>Number.parseFloat</code> data property is the same built-in function object that is the value of\n        the <code>parseFloat</code> property of the global object defined in <a href=\"/sec/sec-parsefloat-string.html\">18.2.4</a>.</p>\n      </section>\n\n      <section id=\"sec-number.parseint\">\n        <h1><span class=\"secnum\" id=\"sec-20.1.2.13\"><a href=\"/sec/sec-number.parseint.html\" title=\"link to this section\">20.1.2.13</a></span> Number.parseInt ( string, radix )</h1>\n\n        <p>The value of the <code>Number.parseInt</code> data property is the same built-in function object that is the value of\n        the <code>parseInt</code> property of the global object defined in <a href=\"/sec/sec-parseint-string-radix.html\">18.2.5</a>.</p>\n      </section>\n\n      <section id=\"sec-number.positive_infinity\">\n        <h1><span class=\"secnum\" id=\"sec-20.1.2.14\"><a href=\"/sec/sec-number.positive_infinity.html\" title=\"link to this section\">20.1.2.14</a></span> Number.POSITIVE_INFINITY</h1>\n\n        <p>The value of Number.POSITIVE_INFINITY is +&#x221E;.</p>\n\n        <p>This property has the attributes { [[Writable]]: <b>false</b>, [[Enumerable]]: <b>false</b>, [[Configurable]]:\n        <b>false</b> }.</p>\n      </section>\n\n      <section id=\"sec-number.prototype\">\n        <h1><span class=\"secnum\" id=\"sec-20.1.2.15\"><a href=\"/sec/sec-number.prototype.html\" title=\"link to this section\">20.1.2.15</a></span> Number.prototype</h1>\n\n        <p>The initial value of <code>Number.prototype</code> is the intrinsic object %NumberPrototype% (<a href=\"/sec/sec-properties-of-the-number-prototype-object.html\">20.1.3</a>).</p>\n\n        <p>This property has the attributes { [[Writable]]: <b>false</b>, [[Enumerable]]: <b>false</b>, [[Configurable]]:\n        <b>false</b> }.</p>\n      </section>\n    "}