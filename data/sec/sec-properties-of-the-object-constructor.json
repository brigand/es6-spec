{"id":"sec-properties-of-the-object-constructor","html":"\n      <div class=\"front\">\n        <h1><span class=\"secnum\" id=\"sec-19.1.2\"><a href=\"/sec/sec-properties-of-the-object-constructor.html\" title=\"link to this section\">19.1.2</a></span> Properties of the Object Constructor</h1>\n\n        <p>The value of the [[Prototype]] <a href=\"/sec/sec-object-internal-methods-and-internal-slots.html\">internal slot</a> of the\n        Object constructor is the intrinsic object %FunctionPrototype%.</p>\n\n        <p>Besides the <code>length</code> property (whose value is <b>1</b>), the Object constructor has the following\n        properties:</p>\n      </div>\n\n      <section id=\"sec-object.assign\">\n        <h1><span class=\"secnum\" id=\"sec-19.1.2.1\"><a href=\"/sec/sec-object.assign.html\" title=\"link to this section\">19.1.2.1</a></span>\n            Object.assign ( target, ...sources )</h1>\n\n        <p class=\"normalbefore\">The <b>assign</b> function is used to copy the values of all of the enumerable own properties from\n        one or more source objects to a <var>target</var> object. When the <b>assign</b> function is called, the following steps\n        are taken:</p>\n\n        <ol class=\"proc\">\n          <li>Let <i>to</i> be <a href=\"/sec/sec-toobject.html\">ToObject</a>(<i>target</i>).</li>\n          <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>to</i>).</li>\n          <li>If only one argument was passed, return <i>to</i>.</li>\n          <li>Let <i>sources</i> be the <a href=\"/sec/sec-list-and-record-specification-type.html\">List</a> of argument values starting\n              with the second argument.</li>\n          <li>For each element <i>nextSource</i> of <i>sources</i>, in ascending index order,\n            <ol class=\"block\">\n              <li>If <i>nextSource</i> is <b>undefined</b> or <b>null</b>, let <i>keys</i> be an empty <a href=\"/sec/sec-list-and-record-specification-type.html\">List</a>.</li>\n              <li>Else,\n                <ol class=\"block\">\n                  <li>Let <i>from</i> be <a href=\"/sec/sec-toobject.html\">ToObject</a>(<i>nextSource</i>).</li>\n                  <li>Let <i>keys</i> be <i>from</i>.[[OwnPropertyKeys]]().</li>\n                  <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>keys</i>).</li>\n                </ol>\n              </li>\n              <li>Repeat for each element <i>nextKey</i> of <i>keys</i> in <a href=\"/sec/sec-list-and-record-specification-type.html\">List</a> order,\n                <ol class=\"block\">\n                  <li>Let <i>desc</i> be <i>from</i>.[[GetOwnProperty]](<i>nextKey</i>).</li>\n                  <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>desc</i>).</li>\n                  <li>if <i>desc</i> is not <b>undefined</b> and <i>desc</i>.[[Enumerable]] is <b>true</b>, then\n                    <ol class=\"block\">\n                      <li>Let <i>propValue</i> be <a href=\"/sec/sec-get-o-p.html\">Get</a>(<i>from</i>, <i>nextKey</i>).</li>\n                      <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>propValue</i>).</li>\n                      <li>Let <i>status</i> be <a href=\"/sec/sec-set-o-p-v-throw.html\">Set</a>(<i>to</i>, <i>nextKey</i>, <i>propValue</i>,\n                          <b>true</b>).</li>\n                      <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>status</i>).</li>\n                    </ol>\n                  </li>\n                </ol>\n              </li>\n            </ol>\n          </li>\n          <li>Return <i>to</i>.</li>\n        </ol>\n\n        <p>The <code>length</code> property of the <code>assign</code> method is <b>2</b>.</p>\n      </section>\n\n      <section id=\"sec-object.create\">\n        <h1><span class=\"secnum\" id=\"sec-19.1.2.2\"><a href=\"/sec/sec-object.create.html\" title=\"link to this section\">19.1.2.2</a></span>\n            Object.create ( O [ , Properties ] )</h1>\n\n        <p class=\"normalbefore\">The <b>create</b> function creates a new object with a specified prototype. When the <b>create</b>\n        function is called, the following steps are taken:</p>\n\n        <ol class=\"proc\">\n          <li>If <a href=\"/sec/sec-ecmascript-data-types-and-values.html\">Type</a>(<i>O</i>) is neither Object nor Null, throw a\n              <b>TypeError</b> exception.</li>\n          <li>Let <i>obj</i> be <a href=\"/sec/sec-objectcreate.html\">ObjectCreate</a>(<i>O</i>).</li>\n          <li>If the argument <i>Properties</i> is present and not <b>undefined</b>, then\n            <ol class=\"block\">\n              <li>Return <a href=\"/sec/sec-objectdefineproperties.html\">ObjectDefineProperties</a>(<i>obj</i>, <i>Properties</i>).</li>\n            </ol>\n          </li>\n          <li>Return <i>obj</i>.</li>\n        </ol>\n      </section>\n\n      <section id=\"sec-object.defineproperties\">\n        <div class=\"front\">\n          <h1><span class=\"secnum\" id=\"sec-19.1.2.3\"><a href=\"/sec/sec-object.defineproperties.html\" title=\"link to this section\">19.1.2.3</a></span> Object.defineProperties ( O, Properties )</h1>\n\n          <p class=\"normalbefore\">The <b>defineProperties</b> function is used to add own properties and/or update the attributes\n          of existing own properties of an object. When the <b>defineProperties</b> function is called, the following steps are\n          taken:</p>\n\n          <ol class=\"proc\">\n            <li>Return <a href=\"/sec/sec-objectdefineproperties.html\">ObjectDefineProperties</a>(<i>O</i>, <i>Properties</i>).</li>\n          </ol>\n        </div>\n\n        <section id=\"sec-objectdefineproperties\">\n          <h1><span class=\"secnum\" id=\"sec-19.1.2.3.1\"><a href=\"/sec/sec-objectdefineproperties.html\" title=\"link to this section\">19.1.2.3.1</a></span> Runtime Semantics: ObjectDefineProperties ( O, Properties )</h1>\n\n          <p class=\"normalbefore\">The abstract operation ObjectDefineProperties with arguments <var>O</var> and <span class=\"nt\">Properties</span> performs the following steps:</p>\n\n          <ol class=\"proc\">\n            <li>If <a href=\"/sec/sec-ecmascript-data-types-and-values.html\">Type</a>(<i>O</i>) is not Object, throw a <b>TypeError</b>\n                exception.</li>\n            <li>Let <i>props</i> be <a href=\"/sec/sec-toobject.html\">ToObject</a>(<i>Properties</i>).</li>\n            <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>props</i>).</li>\n            <li>Let <i>keys</i> be <i>props</i>.[[OwnPropertyKeys]]().</li>\n            <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>keys</i>).</li>\n            <li>Let <i>descriptors</i> be an empty <a href=\"/sec/sec-list-and-record-specification-type.html\">List</a>.</li>\n            <li>Repeat for each element <i>nextKey</i> of <i>keys</i> in <a href=\"/sec/sec-list-and-record-specification-type.html\">List</a> order,\n              <ol class=\"block\">\n                <li>Let <i>propDesc</i> be <i>props</i>.[[GetOwnProperty]](<i>nextKey</i>).</li>\n                <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>propDesc</i>).</li>\n                <li>If <i>propDesc</i> is not <b>undefined</b> and <i>propDesc</i>.[[Enumerable]] is <b>true</b>, then\n                  <ol class=\"block\">\n                    <li>Let <i>descObj</i> be <a href=\"/sec/sec-get-o-p.html\">Get</a>( <i>props</i>, <i>nextKey</i>).</li>\n                    <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>descObj</i>).</li>\n                    <li>Let <i>desc</i> be <a href=\"/sec/sec-topropertydescriptor.html\">ToPropertyDescriptor</a>(<i>descObj</i>).</li>\n                    <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>desc</i>).</li>\n                    <li>Append the pair (a two element <a href=\"/sec/sec-list-and-record-specification-type.html\">List</a>) consisting of\n                        <i>nextKey</i> and <i>desc</i> to the end of <i>descriptors</i>.</li>\n                  </ol>\n                </li>\n              </ol>\n            </li>\n            <li>For each <i>pair</i> from <i>descriptors</i> in list order,\n              <ol class=\"block\">\n                <li>Let <i>P</i> be the first element of <i>pair</i>.</li>\n                <li>Let <i>desc</i> be the second element of <i>pair</i>.</li>\n                <li>Let <i>status</i> be <a href=\"/sec/sec-definepropertyorthrow.html\">DefinePropertyOrThrow</a>(<i>O</i>,<i>P</i>,\n                    <i>desc</i>).</li>\n                <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>status</i>).</li>\n              </ol>\n            </li>\n            <li>Return <i>O</i>.</li>\n          </ol>\n        </section>\n      </section>\n\n      <section id=\"sec-object.defineproperty\">\n        <h1><span class=\"secnum\" id=\"sec-19.1.2.4\"><a href=\"/sec/sec-object.defineproperty.html\" title=\"link to this section\">19.1.2.4</a></span> Object.defineProperty ( O, P, Attributes )</h1>\n\n        <p class=\"normalbefore\">The <b>defineProperty</b> function is used to add an own property and/or update the attributes of\n        an existing own property of an object. When the <b>defineProperty</b> function is called, the following steps are\n        taken:</p>\n\n        <ol class=\"proc\">\n          <li>If <a href=\"/sec/sec-ecmascript-data-types-and-values.html\">Type</a>(<i>O</i>) is not Object, throw a <b>TypeError</b>\n              exception.</li>\n          <li>Let <i>key</i> be <a href=\"/sec/sec-topropertykey.html\">ToPropertyKey</a>(<i>P</i>).</li>\n          <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>key</i>).</li>\n          <li>Let <i>desc</i> be <a href=\"/sec/sec-topropertydescriptor.html\">ToPropertyDescriptor</a>(<i>Attributes</i>).</li>\n          <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>desc</i>).</li>\n          <li>Let <i>success</i> be <a href=\"/sec/sec-definepropertyorthrow.html\">DefinePropertyOrThrow</a>(<i>O,key</i>,\n              <i>desc</i>).</li>\n          <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>success</i>).</li>\n          <li>Return <i>O</i>.</li>\n        </ol>\n      </section>\n\n      <section id=\"sec-object.freeze\">\n        <h1><span class=\"secnum\" id=\"sec-19.1.2.5\"><a href=\"/sec/sec-object.freeze.html\" title=\"link to this section\">19.1.2.5</a></span>\n            Object.freeze ( O )</h1>\n\n        <p class=\"normalbefore\">When the <b>freeze</b> function is called, the following steps are taken:</p>\n\n        <ol class=\"proc\">\n          <li>If <a href=\"/sec/sec-ecmascript-data-types-and-values.html\">Type</a>(<i>O</i>) is not Object, return <i>O</i>.</li>\n          <li>Let <i>status</i> be <a href=\"/sec/sec-setintegritylevel.html\">SetIntegrityLevel</a>( <i>O</i>, &quot;<code>frozen</code>&quot;).</li>\n          <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>status</i>).</li>\n          <li>If <i>status</i> is <b>false</b>, throw a <b>TypeError</b> exception.</li>\n          <li>Return <i>O</i>.</li>\n        </ol>\n      </section>\n\n      <section id=\"sec-object.getownpropertydescriptor\">\n        <h1><span class=\"secnum\" id=\"sec-19.1.2.6\"><a href=\"/sec/sec-object.getownpropertydescriptor.html\" title=\"link to this section\">19.1.2.6</a></span> Object.getOwnPropertyDescriptor ( O, P )</h1>\n\n        <p class=\"normalbefore\">When the <code>getOwnPropertyDescriptor</code> function is called, the following steps are\n        taken:</p>\n\n        <ol class=\"proc\">\n          <li>Let <i>obj</i> be <a href=\"/sec/sec-toobject.html\">ToObject</a>(<i>O</i>).</li>\n          <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>obj</i>).</li>\n          <li>Let <i>key</i> be <a href=\"/sec/sec-topropertykey.html\">ToPropertyKey</a>(<i>P</i>).</li>\n          <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>key</i>).</li>\n          <li>Let <i>desc</i> be <i>obj.</i>[[GetOwnProperty]](<i>key</i>).</li>\n          <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>desc</i>).</li>\n          <li>Return <a href=\"/sec/sec-frompropertydescriptor.html\">FromPropertyDescriptor</a>(<i>desc</i>).</li>\n        </ol>\n      </section>\n\n      <section id=\"sec-object.getownpropertynames\">\n        <h1><span class=\"secnum\" id=\"sec-19.1.2.7\"><a href=\"/sec/sec-object.getownpropertynames.html\" title=\"link to this section\">19.1.2.7</a></span> Object.getOwnPropertyNames ( O )</h1>\n\n        <p class=\"normalbefore\">When the <b>getOwnPropertyNames</b> function is called, the following steps are taken:</p>\n\n        <ol class=\"proc\">\n          <li>Return <a href=\"/sec/sec-getownpropertykeys.html\">GetOwnPropertyKeys</a>(<i>O</i>, String).</li>\n        </ol>\n      </section>\n\n      <section id=\"sec-object.getownpropertysymbols\">\n        <div class=\"front\">\n          <h1><span class=\"secnum\" id=\"sec-19.1.2.8\"><a href=\"/sec/sec-object.getownpropertysymbols.html\" title=\"link to this section\">19.1.2.8</a></span> Object.getOwnPropertySymbols ( O )</h1>\n\n          <p class=\"normalbefore\">When the <b>getOwnPropertySymbols</b> function is called with argument <var>O</var>, the\n          following steps are taken:</p>\n\n          <ol class=\"proc\">\n            <li>Return <a href=\"/sec/sec-getownpropertykeys.html\">GetOwnPropertyKeys</a>(<i>O</i>, Symbol).</li>\n          </ol>\n        </div>\n\n        <section id=\"sec-getownpropertykeys\">\n          <h1><span class=\"secnum\" id=\"sec-19.1.2.8.1\"><a href=\"/sec/sec-getownpropertykeys.html\" title=\"link to this section\">19.1.2.8.1</a></span> Runtime Semantics:  GetOwnPropertyKeys ( O, Type )</h1>\n\n          <p class=\"normalbefore\">The abstract operation GetOwnPropertyKeys is called with arguments <var>O</var> and <span class=\"nt\">Type</span> where <var>O</var> is an Object and <span class=\"nt\">Type</span> is one of the ECMAScript\n          specification types String or Symbol. The following steps are taken:</p>\n\n          <ol class=\"proc\">\n            <li>Let <i>obj</i> be <a href=\"/sec/sec-toobject.html\">ToObject</a>(<i>O</i>).</li>\n            <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>obj</i>).</li>\n            <li>Let <i>keys</i> be <i>obj.</i>[[OwnPropertyKeys]]().</li>\n            <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>keys</i>).</li>\n            <li>Let <i>nameList</i> be a new empty <a href=\"/sec/sec-list-and-record-specification-type.html\">List</a>.</li>\n            <li>Repeat for each element <i>nextKey</i> of <i>keys</i> in <a href=\"/sec/sec-list-and-record-specification-type.html\">List</a> order,\n              <ol class=\"block\">\n                <li>If <a href=\"/sec/sec-ecmascript-data-types-and-values.html\">Type</a>(<i>nextKey</i>) is <i>Type</i>, then\n                  <ol class=\"block\">\n                    <li>Append <i>nextKey</i> as the last element of <i>nameList</i>.</li>\n                  </ol>\n                </li>\n              </ol>\n            </li>\n            <li>Return <a href=\"/sec/sec-createarrayfromlist.html\">CreateArrayFromList</a>(<i>nameList</i>).</li>\n          </ol>\n        </section>\n      </section>\n\n      <section id=\"sec-object.getprototypeof\">\n        <h1><span class=\"secnum\" id=\"sec-19.1.2.9\"><a href=\"/sec/sec-object.getprototypeof.html\" title=\"link to this section\">19.1.2.9</a></span> Object.getPrototypeOf ( O )</h1>\n\n        <p class=\"normalbefore\">When the <code>getPrototypeOf</code> function is called with argument <var>O</var>, the following\n        steps are taken:</p>\n\n        <ol class=\"proc\">\n          <li>Let <i>obj</i> be <a href=\"/sec/sec-toobject.html\">ToObject</a>(<i>O</i>).</li>\n          <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>obj</i>).</li>\n          <li>Return <i>obj.</i>[[GetPrototypeOf]]().</li>\n        </ol>\n      </section>\n\n      <section id=\"sec-object.is\">\n        <h1><span class=\"secnum\" id=\"sec-19.1.2.10\"><a href=\"/sec/sec-object.is.html\" title=\"link to this section\">19.1.2.10</a></span>\n            Object.is ( value1, value2 )</h1>\n\n        <p class=\"normalbefore\">When the <b>is</b> function is called with arguments <var>value1</var> and <var>value2</var> the\n        following steps are taken:</p>\n\n        <ol class=\"proc\">\n          <li>Return <a href=\"/sec/sec-samevalue.html\">SameValue</a>(<i>value1</i>, <i>value2</i>).</li>\n        </ol>\n      </section>\n\n      <section id=\"sec-object.isextensible\">\n        <h1><span class=\"secnum\" id=\"sec-19.1.2.11\"><a href=\"/sec/sec-object.isextensible.html\" title=\"link to this section\">19.1.2.11</a></span> Object.isExtensible ( O )</h1>\n\n        <p class=\"normalbefore\">When the <b>isExtensible</b> function is called with argument <var>O</var>, the following steps\n        are taken:</p>\n\n        <ol class=\"proc\">\n          <li>If <a href=\"/sec/sec-ecmascript-data-types-and-values.html\">Type</a>(<i>O</i>) is not Object, return <b>false</b>.</li>\n          <li>Return <a href=\"/sec/sec-isextensible-o.html\">IsExtensible</a>(<i>O</i>).</li>\n        </ol>\n      </section>\n\n      <section id=\"sec-object.isfrozen\">\n        <h1><span class=\"secnum\" id=\"sec-19.1.2.12\"><a href=\"/sec/sec-object.isfrozen.html\" title=\"link to this section\">19.1.2.12</a></span> Object.isFrozen ( O )</h1>\n\n        <p class=\"normalbefore\">When the <b>isFrozen</b> function is called with argument <var>O</var>, the following steps are\n        taken:</p>\n\n        <ol class=\"proc\">\n          <li>If <a href=\"/sec/sec-ecmascript-data-types-and-values.html\">Type</a>(<i>O</i>) is not Object, return <b>true</b>.</li>\n          <li>Return <a href=\"/sec/sec-testintegritylevel.html\">TestIntegrityLevel</a>(<i>O</i>, &quot;<code>frozen</code>&quot;).</li>\n        </ol>\n      </section>\n\n      <section id=\"sec-object.issealed\">\n        <h1><span class=\"secnum\" id=\"sec-19.1.2.13\"><a href=\"/sec/sec-object.issealed.html\" title=\"link to this section\">19.1.2.13</a></span> Object.isSealed ( O )</h1>\n\n        <p class=\"normalbefore\">When the <b>isSealed</b> function is called with argument <var>O</var>, the following steps are\n        taken:</p>\n\n        <ol class=\"proc\">\n          <li>If <a href=\"/sec/sec-ecmascript-data-types-and-values.html\">Type</a>(<i>O</i>) is not Object, return <b>true</b>.</li>\n          <li>Return <a href=\"/sec/sec-testintegritylevel.html\">TestIntegrityLevel</a>(<i>O</i>, &quot;<code>sealed</code>&quot;).</li>\n        </ol>\n      </section>\n\n      <section id=\"sec-object.keys\">\n        <h1><span class=\"secnum\" id=\"sec-19.1.2.14\"><a href=\"/sec/sec-object.keys.html\" title=\"link to this section\">19.1.2.14</a></span>\n            Object.keys ( O )</h1>\n\n        <p class=\"normalbefore\">When the <b>keys</b> function is called with argument <var>O</var>, the following steps are\n        taken:</p>\n\n        <ol class=\"proc\">\n          <li>Let <i>obj</i> be <a href=\"/sec/sec-toobject.html\">ToObject</a>(<i>O</i>).</li>\n          <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>obj</i>).</li>\n          <li>Let <i>nameList</i> be <a href=\"/sec/sec-enumerableownnames.html\">EnumerableOwnNames</a>(<i>obj</i>).</li>\n          <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>nameList</i>).</li>\n          <li>Return <a href=\"/sec/sec-createarrayfromlist.html\">CreateArrayFromList</a>(<i>nameList</i>).</li>\n        </ol>\n\n        <p>If an implementation defines a specific order of enumeration for the for-in statement, the same order must be used for\n        the elements of the array returned in step 4.</p>\n      </section>\n\n      <section id=\"sec-object.preventextensions\">\n        <h1><span class=\"secnum\" id=\"sec-19.1.2.15\"><a href=\"/sec/sec-object.preventextensions.html\" title=\"link to this section\">19.1.2.15</a></span> Object.preventExtensions ( O )</h1>\n\n        <p class=\"normalbefore\">When the <b>preventExtensions</b> function is called, the following steps are taken:</p>\n\n        <ol class=\"proc\">\n          <li>If <a href=\"/sec/sec-ecmascript-data-types-and-values.html\">Type</a>(<i>O</i>) is not Object, return <i>O</i>.</li>\n          <li>Let <i>status</i> be <i>O</i>.[[PreventExtensions]]().</li>\n          <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>status</i>).</li>\n          <li>If <i>status</i> is <b>false</b>, throw a <b>TypeError</b> exception.</li>\n          <li>Return <i>O</i>.</li>\n        </ol>\n      </section>\n\n      <section id=\"sec-object.prototype\">\n        <h1><span class=\"secnum\" id=\"sec-19.1.2.16\"><a href=\"/sec/sec-object.prototype.html\" title=\"link to this section\">19.1.2.16</a></span> Object.prototype</h1>\n\n        <p>The initial value of <code>Object.prototype</code> is the intrinsic object %ObjectPrototype% (<a href=\"/sec/sec-properties-of-the-object-prototype-object.html\">19.1.3</a>).</p>\n\n        <p>This property has the attributes {[[Writable]]: <b>false</b>, [[Enumerable]]: <b>false</b>, [[Configurable]]:\n        <b>false</b> }.</p>\n      </section>\n\n      <section id=\"sec-object.seal\">\n        <h1><span class=\"secnum\" id=\"sec-19.1.2.17\"><a href=\"/sec/sec-object.seal.html\" title=\"link to this section\">19.1.2.17</a></span>\n            Object.seal ( O )</h1>\n\n        <p class=\"normalbefore\">When the <b>seal</b> function is called, the following steps are taken:</p>\n\n        <ol class=\"proc\">\n          <li>If <a href=\"/sec/sec-ecmascript-data-types-and-values.html\">Type</a>(<i>O</i>) is not Object, return <i>O</i>.</li>\n          <li>Let <i>status</i> be <a href=\"/sec/sec-setintegritylevel.html\">SetIntegrityLevel</a>( <i>O</i>,  &quot;<code>sealed</code>&quot;).</li>\n          <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>status</i>).</li>\n          <li>If <i>status</i> is <b>false</b>, throw a <b>TypeError</b> exception.</li>\n          <li>Return <i>O</i>.</li>\n        </ol>\n      </section>\n\n      <section id=\"sec-object.setprototypeof\">\n        <h1><span class=\"secnum\" id=\"sec-19.1.2.18\"><a href=\"/sec/sec-object.setprototypeof.html\" title=\"link to this section\">19.1.2.18</a></span> Object.setPrototypeOf ( O, proto )</h1>\n\n        <p class=\"normalbefore\">When the <code>setPrototypeOf</code> function is called with arguments <span style=\"font-family:\n        Times New Roman\"><i>O</i> and</span> proto, the following steps are taken:</p>\n\n        <ol class=\"proc\">\n          <li>Let <i>O</i> be <a href=\"/sec/sec-requireobjectcoercible.html\">RequireObjectCoercible</a>(<i>O</i>)<i>.</i></li>\n          <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>O</i>).</li>\n          <li>If <a href=\"/sec/sec-ecmascript-data-types-and-values.html\">Type</a>(<i>proto</i>) is neither Object nor Null, throw a\n              <b>TypeError</b> exception.</li>\n          <li>If <a href=\"/sec/sec-ecmascript-data-types-and-values.html\">Type</a>(<i>O</i>) is not Object, return <i>O</i>.</li>\n          <li>Let <i>status</i> be <i>O</i>.[[SetPrototypeOf]](<i>proto</i>).</li>\n          <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>status</i>).</li>\n          <li>If <i>status</i> is <b>false</b>, throw a <b>TypeError</b> exception.</li>\n          <li>Return <i>O</i>.</li>\n        </ol>\n      </section>\n    "}