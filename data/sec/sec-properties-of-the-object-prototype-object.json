{"id":"sec-properties-of-the-object-prototype-object","html":"\n      <div class=\"front\">\n        <h1><span class=\"secnum\" id=\"sec-19.1.3\"><a href=\"/sec/sec-properties-of-the-object-prototype-object.html\" title=\"link to this section\">19.1.3</a></span> Properties of the Object Prototype Object</h1>\n\n        <p>The Object prototype object is the intrinsic object %ObjectPrototype%. The Object prototype object is an ordinary\n        object.</p>\n\n        <p>The value of the [[Prototype]] <a href=\"/sec/sec-object-internal-methods-and-internal-slots.html\">internal slot</a> of the\n        Object prototype object is <span class=\"value\">null</span> and the initial value of the [[Extensible]] <a href=\"/sec/sec-object-internal-methods-and-internal-slots.html\">internal slot</a> is <span class=\"value\">true</span>.</p>\n      </div>\n\n      <section id=\"sec-object.prototype.constructor\">\n        <h1><span class=\"secnum\" id=\"sec-19.1.3.1\"><a href=\"/sec/sec-object.prototype.constructor.html\" title=\"link to this section\">19.1.3.1</a></span> Object.prototype.constructor</h1>\n\n        <p>The initial value of <code>Object.prototype.constructor</code> is the intrinsic object %Object%.</p>\n      </section>\n\n      <section id=\"sec-object.prototype.hasownproperty\">\n        <h1><span class=\"secnum\" id=\"sec-19.1.3.2\"><a href=\"/sec/sec-object.prototype.hasownproperty.html\" title=\"link to this section\">19.1.3.2</a></span> Object.prototype.hasOwnProperty ( V )</h1>\n\n        <p class=\"normalbefore\">When the <code>hasOwnProperty</code> method is called with argument <var>V</var>, the following\n        steps are taken:</p>\n\n        <ol class=\"proc\">\n          <li>Let <i>P</i> be <a href=\"/sec/sec-topropertykey.html\">ToPropertyKey</a>(<i>V</i>).</li>\n          <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>P</i>).</li>\n          <li>Let <i>O</i> be <a href=\"/sec/sec-toobject.html\">ToObject</a>(<b>this</b> value).</li>\n          <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>O</i>).</li>\n          <li>Return <a href=\"/sec/sec-hasownproperty.html\">HasOwnProperty</a>(<i>O</i>, <i>P</i>).</li>\n        </ol>\n\n        <div class=\"note\">\n          <p><span class=\"nh\">NOTE</span> The ordering of steps 1 and 3 is chosen to ensure that any exception that would have\n          been thrown by step 1 in previous editions of this specification will continue to be thrown even if the <b>this</b>\n          value is <span class=\"value\">undefined</span> or <span class=\"value\">null</span>.</p>\n        </div>\n      </section>\n\n      <section id=\"sec-object.prototype.isprototypeof\">\n        <h1><span class=\"secnum\" id=\"sec-19.1.3.3\"><a href=\"/sec/sec-object.prototype.isprototypeof.html\" title=\"link to this section\">19.1.3.3</a></span> Object.prototype.isPrototypeOf ( V )</h1>\n\n        <p class=\"normalbefore\">When the <code>isPrototypeOf</code> method is called with argument <var>V</var>, the following\n        steps are taken:</p>\n\n        <ol class=\"proc\">\n          <li>If <a href=\"/sec/sec-ecmascript-data-types-and-values.html\">Type</a>(<i>V</i>) is not Object, return <b>false</b>.</li>\n          <li>Let <i>O</i> be <a href=\"/sec/sec-toobject.html\">ToObject</a>(<b>this</b> value).</li>\n          <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>O</i>).</li>\n          <li>Repeat\n            <ol class=\"block\">\n              <li>Let <i>V</i> be <i>V</i>.[[GetPrototypeOf]]().</li>\n              <li>If <i>V</i> is <b>null</b>, return <b>false</b></li>\n              <li>If <a href=\"/sec/sec-samevalue.html\">SameValue</a>(<i>O</i>, <i>V</i>) is <b>true</b>, return <b>true</b>.</li>\n            </ol>\n          </li>\n        </ol>\n\n        <div class=\"note\">\n          <p><span class=\"nh\">NOTE</span> The ordering of steps 1 and 2 preserves the behaviour specified by previous editions of\n          this specification for the case where <var>V</var> is not an object and the <b>this</b> value is <span class=\"value\">undefined</span> or <span class=\"value\">null</span>.</p>\n        </div>\n      </section>\n\n      <section id=\"sec-object.prototype.propertyisenumerable\">\n        <h1><span class=\"secnum\" id=\"sec-19.1.3.4\"><a href=\"/sec/sec-object.prototype.propertyisenumerable.html\" title=\"link to this section\">19.1.3.4</a></span> Object.prototype.propertyIsEnumerable ( V )</h1>\n\n        <p class=\"normalbefore\">When the <code>propertyIsEnumerable</code> method is called with argument <var>V</var>, the\n        following steps are taken:</p>\n\n        <ol class=\"proc\">\n          <li>Let <i>P</i> be <a href=\"/sec/sec-topropertykey.html\">ToPropertyKey</a>(<i>V</i>).</li>\n          <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>P</i>).</li>\n          <li>Let <i>O</i> be <a href=\"/sec/sec-toobject.html\">ToObject</a>(<b>this</b> value).</li>\n          <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>O</i>).</li>\n          <li>Let <i>desc</i> be <i>O</i>.[[GetOwnProperty]](<i>P</i>).</li>\n          <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>desc</i>).</li>\n          <li>If <i>desc</i> is <b>undefined</b>, return <b>false</b>.</li>\n          <li>Return the value of <i>desc</i>.[[Enumerable]].</li>\n        </ol>\n\n        <div class=\"note\">\n          <p><span class=\"nh\">NOTE 1</span> This method does not consider objects in the prototype chain.</p>\n        </div>\n\n        <div class=\"note\">\n          <p><span class=\"nh\">NOTE 2</span> The ordering of steps 1 and 3 is chosen to ensure that any exception that would have\n          been thrown by step 1 in previous editions of this specification will continue to be thrown even if the <b>this</b>\n          value is <span class=\"value\">undefined</span> or <span class=\"value\">null</span>.</p>\n        </div>\n      </section>\n\n      <section id=\"sec-object.prototype.tolocalestring\">\n        <h1><span class=\"secnum\" id=\"sec-19.1.3.5\"><a href=\"/sec/sec-object.prototype.tolocalestring.html\" title=\"link to this section\">19.1.3.5</a></span> Object.prototype.toLocaleString ( [ reserved1 [ , reserved2 ] ]\n            )</h1>\n\n        <p class=\"normalbefore\">When the <b>toLocaleString</b> method is called, the following steps are taken:</p>\n\n        <ol class=\"proc\">\n          <li>Let <i>O</i> be the <b>this</b> value.</li>\n          <li>Return <a href=\"/sec/sec-invoke.html\">Invoke</a>(<i>O</i>, <code>&quot;toString&quot;</code>).</li>\n        </ol>\n\n        <p>The optional parameters to this function are not used but are intended to correspond to the parameter pattern used by\n        ECMA-402 <code>toLocalString</code> functions. Implementations that do not include ECMA-402 support must not use those\n        parameter positions for other purposes.</p>\n\n        <p>The <code>length</code> property of the <code>toLocaleString</code> method is <b>0</b>.</p>\n\n        <div class=\"note\">\n          <p><span class=\"nh\">NOTE 1</span> This function provides a generic <code>toLocaleString</code> implementation for\n          objects that have no locale-specific <code>toString</code> behaviour. <code>Array</code>, <code>Number</code>,\n          <code>Date</code>, and <code>Typed Arrays</code> provide their own locale-sensitive <code>toLocaleString</code>\n          methods.</p>\n        </div>\n\n        <div class=\"note\">\n          <p><span class=\"nh\">NOTE 2</span> ECMA-402 intentionally does not provide an alternative to this default\n          implementation.</p>\n        </div>\n      </section>\n\n      <section id=\"sec-object.prototype.tostring\">\n        <h1><span class=\"secnum\" id=\"sec-19.1.3.6\"><a href=\"/sec/sec-object.prototype.tostring.html\" title=\"link to this section\">19.1.3.6</a></span> Object.prototype.toString ( )</h1>\n\n        <p class=\"normalbefore\">When the <code>toString</code> method is called, the following steps are taken:</p>\n\n        <ol class=\"proc\">\n          <li>If the <b>this</b> value is <b>undefined</b>, return <code>&quot;[object Undefined]&quot;</code>.</li>\n          <li>If the <b>this</b> value is <b>null</b>, return <code>&quot;[object Null]&quot;</code>.</li>\n          <li>Let <i>O</i> be <a href=\"/sec/sec-toobject.html\">ToObject</a>(<b>this</b> value).</li>\n          <li>Let <i>isArray</i> be <a href=\"/sec/sec-isarray.html\">IsArray</a>(<i>O</i>).</li>\n          <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>isArray</i>).</li>\n          <li>If <i>isArray</i> is <b>true</b>, let <i>builtinTag</i> be <code>&quot;Array&quot;</code>.</li>\n          <li>Else, if <i>O</i> is an exotic String object, let <i>builtinTag</i> be <code>&quot;String&quot;</code>.</li>\n          <li>Else, if <i>O</i> has an [[ParameterMap]] <a href=\"/sec/sec-object-internal-methods-and-internal-slots.html\">internal\n              slot</a>, let <i>builtinTag</i> be <code>&quot;Arguments&quot;</code>.</li>\n          <li>Else, if <i>O</i> has a [[Call]] internal method, let <i>builtinTag</i> be <code>&quot;Function&quot;</code>.</li>\n          <li>Else, if <i>O</i> has an [[ErrorData]] <a href=\"/sec/sec-object-internal-methods-and-internal-slots.html\">internal slot</a>,\n              let <i>builtinTag</i> be <code>&quot;Error&quot;</code>.</li>\n          <li>Else, if <i>O</i> has a [[BooleanData]] <a href=\"/sec/sec-object-internal-methods-and-internal-slots.html\">internal slot</a>,\n              let <i>builtinTag</i> be <code>&quot;Boolean&quot;</code>.</li>\n          <li>Else, if <i>O</i> has a [[NumberData]] <a href=\"/sec/sec-object-internal-methods-and-internal-slots.html\">internal slot</a>,\n              let <i>builtinTag</i> be <code>&quot;Number&quot;</code>.</li>\n          <li>Else, if <i>O</i> has a [[DateValue]] <a href=\"/sec/sec-object-internal-methods-and-internal-slots.html\">internal slot</a>,\n              let <i>builtinTag</i> be <code>&quot;Date&quot;</code>.</li>\n          <li>Else, if <i>O</i> has a [[RegExpMatcher]] <a href=\"/sec/sec-object-internal-methods-and-internal-slots.html\">internal\n              slot</a>, let <i>builtinTag</i> be <code>&quot;RegExp&quot;</code>.</li>\n          <li>Else, let <i>builtinTag</i> be <code>&quot;Object&quot;</code>.</li>\n          <li>Let <i>tag</i> be Get (<i>O</i>, @@toStringTag).</li>\n          <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>tag</i>).</li>\n          <li>If <a href=\"/sec/sec-ecmascript-data-types-and-values.html\">Type</a>(<i>tag</i>) is not String, let <i>tag</i> be\n              <i>builtinTag</i>.</li>\n          <li>Return the String that is the result of concatenating <code>&quot;[object &quot;</code>, <i>tag</i>, and\n              <code>&quot;]&quot;</code>.</li>\n        </ol>\n\n        <p>This function is the %ObjProto_toString% intrinsic object.</p>\n\n        <div class=\"note\">\n          <p><span class=\"nh\">NOTE</span> Historically, this function was occasionally used to access the String value of the\n          [[Class]] <a href=\"/sec/sec-object-internal-methods-and-internal-slots.html\">internal slot</a> that was used in previous editions\n          of this specification as a nominal type tag for various built-in objects. The above definition of <code>toString</code>\n          preserves compatibility for legacy code that uses <code>toString</code> as a test for those specific kinds of built-in\n          objects. It does not provide a reliable type testing mechanism for other kinds of built-in or program defined objects.\n          In addition, programs can use @@toStringTag in ways that will invalidate the reliability of such legacy type tests.</p>\n        </div>\n      </section>\n\n      <section id=\"sec-object.prototype.valueof\">\n        <h1><span class=\"secnum\" id=\"sec-19.1.3.7\"><a href=\"/sec/sec-object.prototype.valueof.html\" title=\"link to this section\">19.1.3.7</a></span> Object.prototype.valueOf ( )</h1>\n\n        <p class=\"normalbefore\">When the <b>valueOf</b> method is called, the following steps are taken:</p>\n\n        <ol class=\"proc\">\n          <li>Return <a href=\"/sec/sec-toobject.html\">ToObject</a>(<b>this</b> value).</li>\n        </ol>\n      </section>\n    "}