{"id":"sec-properties-of-the-promise-prototype-object","html":"\n      <div class=\"front\">\n        <h1><span class=\"secnum\" id=\"sec-25.4.5\"><a href=\"/sec/sec-properties-of-the-promise-prototype-object.html\" title=\"link to this section\">25.4.5</a></span> Properties of the Promise Prototype Object</h1>\n\n        <p>The Promise prototype object is the intrinsic object %PromisePrototype%. The value of the [[Prototype]] <a href=\"/sec/sec-object-internal-methods-and-internal-slots.html\">internal slot</a> of the Promise prototype object is the intrinsic\n        object %ObjectPrototype% (<a href=\"/sec/sec-properties-of-the-object-prototype-object.html\">19.1.3</a>). The Promise prototype\n        object is an ordinary object. It does not have a [[PromiseState]] <a href=\"/sec/sec-object-internal-methods-and-internal-slots.html\">internal slot</a> or any of the other internal slots of Promise\n        instances.</p>\n      </div>\n\n      <section id=\"sec-promise.prototype.catch\">\n        <h1><span class=\"secnum\" id=\"sec-25.4.5.1\"><a href=\"/sec/sec-promise.prototype.catch.html\" title=\"link to this section\">25.4.5.1</a></span> Promise.prototype.catch ( onRejected )</h1>\n\n        <p class=\"normalbefore\">When the <code>catch</code> method is called with argument <var>onRejected</var> the following\n        steps are taken:</p>\n\n        <ol class=\"proc\">\n          <li>Let <i>promise</i> be the <b>this</b> value.</li>\n          <li>Return <a href=\"/sec/sec-invoke.html\">Invoke</a>(<i>promise</i>, <code>&quot;then&quot;</code>, &#xAB;&#x200D;<b>undefined</b>,\n              <i>onRejected</i>&#xBB;).</li>\n        </ol>\n      </section>\n\n      <section id=\"sec-promise.prototype.constructor\">\n        <h1><span class=\"secnum\" id=\"sec-25.4.5.2\"><a href=\"/sec/sec-promise.prototype.constructor.html\" title=\"link to this section\">25.4.5.2</a></span> Promise.prototype.constructor</h1>\n\n        <p>The initial value of <code>Promise.prototype.constructor</code> is the intrinsic object %Promise%.</p>\n      </section>\n\n      <section id=\"sec-promise.prototype.then\">\n        <div class=\"front\">\n          <h1><span class=\"secnum\" id=\"sec-25.4.5.3\"><a href=\"/sec/sec-promise.prototype.then.html\" title=\"link to this section\">25.4.5.3</a></span> Promise.prototype.then ( onFulfilled , onRejected )</h1>\n\n          <p class=\"normalbefore\">When the <code>then</code> method is called with arguments <var>onFulfilled</var> and\n          <var>onRejected</var> the following steps are taken:</p>\n\n          <ol class=\"proc\">\n            <li>Let <i>promise</i> be the <b>this</b> value.</li>\n            <li>If <a href=\"/sec/sec-ispromise.html\">IsPromise</a>(<i>promise</i>) is <b>false</b>, throw a <b>TypeError</b>\n                exception.</li>\n            <li>Let <i>C</i> be <a href=\"/sec/sec-speciesconstructor.html\">SpeciesConstructor</a>(<i>promise</i>, %Promise%).</li>\n            <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>C</i>).</li>\n            <li>Let <i>resultCapability</i> be <a href=\"/sec/sec-newpromisecapability.html\">NewPromiseCapability</a>(<i>C</i>).</li>\n            <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>resultCapability</i>).</li>\n            <li>Return <a href=\"/sec/sec-performpromisethen.html\">PerformPromiseThen</a>(<i>promise</i>, <i>onFulfilled</i>,\n                <i>onRejected</i>, <i>resultCapability</i>).</li>\n          </ol>\n        </div>\n\n        <section id=\"sec-performpromisethen\">\n          <h1><span class=\"secnum\" id=\"sec-25.4.5.3.1\"><a href=\"/sec/sec-performpromisethen.html\" title=\"link to this section\">25.4.5.3.1</a></span> PerformPromiseThen ( promise, onFulfilled, onRejected,\n              resultCapability )</h1>\n\n          <p class=\"normalbefore\">The abstract operation PerformPromiseThen performs the &#x201C;then&#x201D; operation on\n          <var>promise</var> using <var>onFulfilled</var> and <var>onRejected</var> as its settlement actions. The result is\n          <var>resultCapability</var>&#x2019;s promise.</p>\n\n          <ol class=\"proc\">\n            <li><a href=\"/sec/sec-algorithm-conventions.html\">Assert</a>: <a href=\"/sec/sec-ispromise.html\">IsPromise</a>(<i>promise</i>) is\n                <b>true</b>.</li>\n            <li><a href=\"/sec/sec-algorithm-conventions.html\">Assert</a>: <i>resultCapability</i> is a PromiseCapability record.</li>\n            <li>If <a href=\"/sec/sec-iscallable.html\">IsCallable</a>(<i>onFulfilled</i>) is <b>false</b>, then\n              <ol class=\"block\">\n                <li>Let <i>onFulfilled</i> be <code>&quot;Identity&quot;</code>.</li>\n              </ol>\n            </li>\n            <li>If <a href=\"/sec/sec-iscallable.html\">IsCallable</a>(<i>onRejected</i>) is <b>false</b>, then\n              <ol class=\"block\">\n                <li>Let <i>onRejected</i> be <code>&quot;Thrower&quot;</code>.</li>\n              </ol>\n            </li>\n            <li>Let <i>fulfillReaction</i> be the PromiseReaction { [[Capabilities]]: <i>resultCapability</i>, [[Handler]]:\n                <i>onFulfilled</i> }.</li>\n            <li>Let <i>rejectReaction</i> be the PromiseReaction { [[Capabilities]]: <i>resultCapability</i>, [[Handler]]:\n                <i>onRejected</i>}.</li>\n            <li>If the value of <i>promise</i>&apos;s [[PromiseState]] <a href=\"/sec/sec-object-internal-methods-and-internal-slots.html\">internal slot</a> is <code>&quot;pending&quot;</code>,\n              <ol class=\"block\">\n                <li>Append <i>fulfillReaction</i> as the last element of the <a href=\"/sec/sec-list-and-record-specification-type.html\">List</a> that is the value of <i>promise</i>&apos;s\n                    [[PromiseFulfillReactions]] <a href=\"/sec/sec-object-internal-methods-and-internal-slots.html\">internal slot</a>.</li>\n                <li>Append <i>rejectReaction</i> as the last element of the <a href=\"/sec/sec-list-and-record-specification-type.html\">List</a> that is the value of <i>promise</i>&apos;s\n                    [[PromiseRejectReactions]] <a href=\"/sec/sec-object-internal-methods-and-internal-slots.html\">internal slot</a>.</li>\n              </ol>\n            </li>\n            <li>Else if the value of <i>promise</i>&apos;s [[PromiseState]] <a href=\"/sec/sec-object-internal-methods-and-internal-slots.html\">internal slot</a> is <code>&quot;fulfilled&quot;</code>,\n              <ol class=\"block\">\n                <li>Let <i>value</i> be the value of <i>promise</i>&apos;s [[PromiseResult]] <a href=\"/sec/sec-object-internal-methods-and-internal-slots.html\">internal slot</a>.</li>\n                <li>Perform <a href=\"/sec/sec-enqueuejob.html\">EnqueueJob</a>(<code>&quot;PromiseJobs&quot;</code>, <a href=\"/sec/sec-promisereactionjob.html\">PromiseReactionJob</a>, &#xAB;&#x200D;<i>fulfillReaction</i>,\n                    <i>value</i>&#xBB;).</li>\n              </ol>\n            </li>\n            <li>Else if the value of <i>promise</i>&apos;s [[PromiseState]] <a href=\"/sec/sec-object-internal-methods-and-internal-slots.html\">internal slot</a> is <code>&quot;rejected&quot;</code>,\n              <ol class=\"block\">\n                <li>Let <i>reason</i> be the value of <i>promise</i>&apos;s [[PromiseResult]] <a href=\"/sec/sec-object-internal-methods-and-internal-slots.html\">internal slot</a>.</li>\n                <li>Perform <a href=\"/sec/sec-enqueuejob.html\">EnqueueJob</a>(<code>&quot;PromiseJobs&quot;</code>, <a href=\"/sec/sec-promisereactionjob.html\">PromiseReactionJob</a>, &#xAB;&#x200D;<i>rejectReaction</i>,\n                    <i>reason</i>&#xBB;).</li>\n              </ol>\n            </li>\n            <li>Return <i>resultCapability</i>.[[Promise]].</li>\n          </ol>\n        </section>\n      </section>\n\n      <section id=\"sec-promise.prototype-@@tostringtag\">\n        <h1><span class=\"secnum\" id=\"sec-25.4.5.4\"><a href=\"/sec/sec-promise.prototype-@@tostringtag.html\" title=\"link to this section\">25.4.5.4</a></span> Promise.prototype [ @@toStringTag ]</h1>\n\n        <p>The initial value of the @@toStringTag property is the String value <code>&quot;Promise&quot;</code>.</p>\n\n        <p>This property has the attributes { [[Writable]]: <span class=\"value\">false</span>, [[Enumerable]]: <span class=\"value\">false</span>, [[Configurable]]: <span class=\"value\">true</span> }.</p>\n      </section>\n    "}