{"id":"sec-property-descriptor-specification-type","html":"\n      <div class=\"front\">\n        <h1><span class=\"secnum\" id=\"sec-6.2.4\"><a href=\"/sec/sec-property-descriptor-specification-type.html\" title=\"link to this section\">6.2.4</a></span> The Property Descriptor Specification Type</h1>\n\n        <p>The Property Descriptor type is used to explain the manipulation and reification of Object property attributes. Values\n        of the Property Descriptor type are Records. Each field&#x2019;s name is an attribute name and its value is a corresponding\n        attribute value as specified in <a href=\"/sec/sec-property-attributes.html\">6.1.7.1</a>. In addition, any field may be present or\n        absent. The schema name used within this specification to tag literal descriptions of Property Descriptor records is\n        &#x201C;PropertyDescriptor&#x201D;.</p>\n\n        <p>Property Descriptor values may be further classified as data Property Descriptors and accessor Property Descriptors\n        based upon the existence or use of certain fields. A data Property Descriptor is one that includes any fields named either\n        [[Value]] or [[Writable]]. An accessor Property Descriptor is one that includes any fields named either [[Get]] or\n        [[Set]]. Any Property Descriptor may have fields named [[Enumerable]] and [[Configurable]]. A Property Descriptor value\n        may not be both a data Property Descriptor and an accessor Property Descriptor; however, it may be neither. A generic\n        Property Descriptor is a Property Descriptor value that is neither a data Property Descriptor nor an accessor Property\n        Descriptor. A fully populated Property Descriptor is one that is either an accessor Property Descriptor or a data Property\n        Descriptor and that has all of the fields that correspond to the property attributes defined in either  <a href=\"/sec/table-2.html\">Table 2</a> or <a href=\"/sec/table-3.html\">Table 3</a>.</p>\n\n        <p>The following abstract operations are used in this specification to operate upon Property Descriptor values:</p>\n      </div>\n\n      <section id=\"sec-isaccessordescriptor\">\n        <h1><span class=\"secnum\" id=\"sec-6.2.4.1\"><a href=\"/sec/sec-isaccessordescriptor.html\" title=\"link to this section\">6.2.4.1</a></span> IsAccessorDescriptor ( Desc )</h1>\n\n        <p class=\"normalbefore\">When the abstract operation IsAccessorDescriptor is called with <a href=\"/sec/sec-property-descriptor-specification-type.html\">Property Descriptor</a> <span class=\"nt\">Desc</span>, the following\n        steps are taken:</p>\n\n        <ol class=\"proc\">\n          <li>If <i>Desc</i> is <b>undefined</b>, return <b>false</b>.</li>\n          <li>If both <i>Desc</i>.[[Get]] and <i>Desc</i>.[[Set]] are absent, return <b>false</b>.</li>\n          <li>Return <b>true</b>.</li>\n        </ol>\n      </section>\n\n      <section id=\"sec-isdatadescriptor\">\n        <h1><span class=\"secnum\" id=\"sec-6.2.4.2\"><a href=\"/sec/sec-isdatadescriptor.html\" title=\"link to this section\">6.2.4.2</a></span>\n            IsDataDescriptor ( Desc )</h1>\n\n        <p class=\"normalbefore\">When the abstract operation IsDataDescriptor is called with <a href=\"/sec/sec-property-descriptor-specification-type.html\">Property Descriptor</a> <span class=\"nt\">Desc</span>, the following\n        steps are taken:</p>\n\n        <ol class=\"proc\">\n          <li>If <i>Desc</i> is <b>undefined</b>, return <b>false</b>.</li>\n          <li>If both <i>Desc</i>.[[Value]] and <i>Desc</i>.[[Writable]] are absent, return <b>false</b>.</li>\n          <li>Return <b>true</b>.</li>\n        </ol>\n      </section>\n\n      <section id=\"sec-isgenericdescriptor\">\n        <h1><span class=\"secnum\" id=\"sec-6.2.4.3\"><a href=\"/sec/sec-isgenericdescriptor.html\" title=\"link to this section\">6.2.4.3</a></span> IsGenericDescriptor ( Desc )</h1>\n\n        <p class=\"normalbefore\">When the abstract operation IsGenericDescriptor is called with <a href=\"/sec/sec-property-descriptor-specification-type.html\">Property Descriptor</a> <span class=\"nt\">Desc</span>, the following\n        steps are taken:</p>\n\n        <ol class=\"proc\">\n          <li>If <i>Desc</i> is <b>undefined</b>, return <b>false</b>.</li>\n          <li>If <a href=\"/sec/sec-isaccessordescriptor.html\">IsAccessorDescriptor</a>(<i>Desc</i>) and <a href=\"/sec/sec-isdatadescriptor.html\">IsDataDescriptor</a>(<i>Desc</i>) are both <b>false</b>, return <b>true</b>.</li>\n          <li>Return <b>false</b>.</li>\n        </ol>\n      </section>\n\n      <section id=\"sec-frompropertydescriptor\">\n        <h1><span class=\"secnum\" id=\"sec-6.2.4.4\"><a href=\"/sec/sec-frompropertydescriptor.html\" title=\"link to this section\">6.2.4.4</a></span> FromPropertyDescriptor ( Desc )</h1>\n\n        <p class=\"normalbefore\">When the abstract operation FromPropertyDescriptor is called with <a href=\"/sec/sec-property-descriptor-specification-type.html\">Property Descriptor</a> <span class=\"nt\">Desc</span>, the following\n        steps are taken:</p>\n\n        <ol class=\"proc\">\n          <li>If <i>Desc</i> is <b>undefined</b>, return <b>undefined</b>.</li>\n          <li>Let <i>obj</i> be <a href=\"/sec/sec-objectcreate.html\">ObjectCreate</a>(<span style=\"font-family:\n              sans-serif\">%ObjectPrototype%</span>).</li>\n          <li><a href=\"/sec/sec-algorithm-conventions.html\">Assert</a>: <i>obj</i> is an extensible ordinary object with no own\n              properties.</li>\n          <li>If <i>Desc</i> has a [[Value]] field, then\n            <ol class=\"block\">\n              <li>Perform <a href=\"/sec/sec-createdataproperty.html\">CreateDataProperty</a>(<i>obj</i>, <code>&quot;value&quot;</code>,\n                  <i>Desc</i>.[[Value]]).</li>\n            </ol>\n          </li>\n          <li>If <i>Desc</i> has a [[Writable]] field, then\n            <ol class=\"block\">\n              <li>Perform <a href=\"/sec/sec-createdataproperty.html\">CreateDataProperty</a>(<i>obj</i>, <code>&quot;writable&quot;</code>,\n                  <i>Desc</i>.[[Writable]]).</li>\n            </ol>\n          </li>\n          <li>If <i>Desc</i> has a [[Get]] field, then\n            <ol class=\"block\">\n              <li>Perform <a href=\"/sec/sec-createdataproperty.html\">CreateDataProperty</a>(<i>obj</i>, <code>&quot;get&quot;</code>,\n                  <i>Desc</i>.[[Get]]).</li>\n            </ol>\n          </li>\n          <li>If <i>Desc</i> has a [[Set]] field, then\n            <ol class=\"block\">\n              <li>Perform <a href=\"/sec/sec-createdataproperty.html\">CreateDataProperty</a>(<i>obj</i>, <code>&quot;set&quot;</code>,\n                  <i>Desc</i>.[[Set]])</li>\n            </ol>\n          </li>\n          <li>If <i>Desc</i> has an [[Enumerable]] field, then\n            <ol class=\"block\">\n              <li>Perform <a href=\"/sec/sec-createdataproperty.html\">CreateDataProperty</a>(<i>obj</i>, <code>&quot;enumerable&quot;</code>,\n                  <i>Desc</i>.[[Enumerable]]).</li>\n            </ol>\n          </li>\n          <li>If <i>Desc</i> has a [[Configurable]] field, then\n            <ol class=\"block\">\n              <li>Perform <a href=\"/sec/sec-createdataproperty.html\">CreateDataProperty</a>(<i>obj</i> , <code>&quot;configurable&quot;</code>,\n                  <i>Desc</i>.[[Configurable]]).</li>\n            </ol>\n          </li>\n          <li><a href=\"/sec/sec-algorithm-conventions.html\">Assert</a>: all of the above <a href=\"/sec/sec-createdataproperty.html\">CreateDataProperty</a> operations return <b>true</b>.</li>\n          <li>Return <i>obj</i>.</li>\n        </ol>\n      </section>\n\n      <section id=\"sec-topropertydescriptor\">\n        <h1><span class=\"secnum\" id=\"sec-6.2.4.5\"><a href=\"/sec/sec-topropertydescriptor.html\" title=\"link to this section\">6.2.4.5</a></span> ToPropertyDescriptor ( Obj )</h1>\n\n        <p class=\"normalbefore\">When the abstract operation ToPropertyDescriptor is called with object <span class=\"nt\">Obj</span>, the following steps are taken:</p>\n\n        <ol class=\"proc\">\n          <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>Obj</i>).</li>\n          <li>If <a href=\"/sec/sec-ecmascript-data-types-and-values.html\">Type</a>(<i>Obj</i>) is not Object, throw a <b>TypeError</b>\n              exception.</li>\n          <li>Let <i>desc</i> be a new <a href=\"/sec/sec-property-descriptor-specification-type.html\">Property Descriptor</a> that\n              initially has no fields.</li>\n          <li>Let <i>hasEnumerable</i> be <a href=\"/sec/sec-hasproperty.html\">HasProperty</a>(<i>Obj</i>, <code>&quot;enumerable&quot;</code>).</li>\n          <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>hasEnumerable</i>).</li>\n          <li>If <i>hasEnumerable</i> is <b>true</b>, then\n            <ol class=\"block\">\n              <li>Let <i>enum</i> be <a href=\"/sec/sec-toboolean.html\">ToBoolean</a>(<a href=\"/sec/sec-get-o-p.html\">Get</a>(<i>Obj</i>,\n                  <code>&quot;enumerable&quot;</code>)).</li>\n              <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>enum</i>).</li>\n              <li>Set the [[Enumerable]] field of <i>desc</i> to <i>enum</i>.</li>\n            </ol>\n          </li>\n          <li>Let <i>hasConfigurable</i> be <a href=\"/sec/sec-hasproperty.html\">HasProperty</a>(<i>Obj</i>,\n              <code>&quot;configurable&quot;</code>).</li>\n          <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>hasConfigurable</i>).</li>\n          <li>If <i>hasConfigurable</i> is <b>true</b>, then\n            <ol class=\"block\">\n              <li>Let <i>conf</i>  be <a href=\"/sec/sec-toboolean.html\">ToBoolean</a>(<a href=\"/sec/sec-get-o-p.html\">Get</a>(<i>Obj</i>,\n                  <code>&quot;configurable&quot;</code>)).</li>\n              <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>conf</i>).</li>\n              <li>Set the [[Configurable]] field of <i>desc</i> to <i>conf</i>.</li>\n            </ol>\n          </li>\n          <li>Let <i>hasValue</i> be <a href=\"/sec/sec-hasproperty.html\">HasProperty</a>(<i>Obj</i>, <code>&quot;value&quot;</code>).</li>\n          <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>hasValue</i>).</li>\n          <li>If <i>hasValue</i> is <b>true</b>, then\n            <ol class=\"block\">\n              <li>Let <i>value</i> be <a href=\"/sec/sec-get-o-p.html\">Get</a>(<i>Obj</i>, <code>&quot;value&quot;</code>).</li>\n              <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>value</i>).</li>\n              <li>Set the [[Value]] field of <i>desc</i> to <i>value</i>.</li>\n            </ol>\n          </li>\n          <li>Let <i>hasWritable</i> be <a href=\"/sec/sec-hasproperty.html\">HasProperty</a>(<i>Obj</i>, <code>&quot;writable&quot;</code>).</li>\n          <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>hasWritable</i>).</li>\n          <li>If <i>hasWritable</i> is <b>true</b>, then\n            <ol class=\"block\">\n              <li>Let <i>writable</i> be <a href=\"/sec/sec-toboolean.html\">ToBoolean</a>(<a href=\"/sec/sec-get-o-p.html\">Get</a>(<i>Obj</i>,\n                  <code>&quot;writable&quot;</code>)).</li>\n              <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>writable</i>).</li>\n              <li>Set the [[Writable]] field of <i>desc</i> to <i>writable</i>.</li>\n            </ol>\n          </li>\n          <li>Let <i>hasGet</i> be <a href=\"/sec/sec-hasproperty.html\">HasProperty</a>(<i>Obj</i>, <code>&quot;get&quot;</code>).</li>\n          <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>hasGet</i>).</li>\n          <li>If <i>hasGet</i> is <b>true</b>, then\n            <ol class=\"block\">\n              <li>Let <i>getter</i> be <a href=\"/sec/sec-get-o-p.html\">Get</a>(<i>Obj</i>, <code>&quot;get&quot;</code>).</li>\n              <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>getter</i>).</li>\n              <li>If <a href=\"/sec/sec-iscallable.html\">IsCallable</a>(<i>getter</i>) is <b>false</b> and <i>getter</i> is not\n                  <b>undefined</b>, throw a <b>TypeError</b> exception.</li>\n              <li>Set the [[Get]] field of <i>desc</i> to <i>getter</i>.</li>\n            </ol>\n          </li>\n          <li>Let <i>hasSet</i> be <a href=\"/sec/sec-hasproperty.html\">HasProperty</a>(<i>Obj</i>, <code>&quot;set&quot;</code>).</li>\n          <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>hasSet</i>).</li>\n          <li>If <i>hasSet</i> is <b>true</b>, then\n            <ol class=\"block\">\n              <li>Let <i>setter</i> be <a href=\"/sec/sec-get-o-p.html\">Get</a>(<i>Obj</i>, <code>&quot;set&quot;</code>).</li>\n              <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>setter</i>).</li>\n              <li>If <a href=\"/sec/sec-iscallable.html\">IsCallable</a>(<i>setter</i>) is <b>false</b> and <i>setter</i> is not\n                  <b>undefined</b>, throw a <b>TypeError</b> exception.</li>\n              <li>Set the [[Set]] field of <i>desc</i> to <i>setter</i>.</li>\n            </ol>\n          </li>\n          <li>If either <i>desc</i>.[[Get]] or <i>desc</i>.[[Set]] is present, then\n            <ol class=\"block\">\n              <li>If either <i>desc</i>.[[Value]] or <i>desc</i>.[[Writable]] is present, throw a <b>TypeError</b> exception.</li>\n            </ol>\n          </li>\n          <li>Return <i>desc</i>.</li>\n        </ol>\n      </section>\n\n      <section id=\"sec-completepropertydescriptor\">\n        <h1><span class=\"secnum\" id=\"sec-6.2.4.6\"><a href=\"/sec/sec-completepropertydescriptor.html\" title=\"link to this section\">6.2.4.6</a></span> CompletePropertyDescriptor ( Desc  )</h1>\n\n        <p class=\"normalbefore\">When the abstract operation CompletePropertyDescriptor is called with <a href=\"/sec/sec-property-descriptor-specification-type.html\">Property Descriptor</a> <span class=\"nt\">Desc</span> the following\n        steps are taken:</p>\n\n        <ol class=\"proc\">\n          <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>Desc</i>).</li>\n          <li><a href=\"/sec/sec-algorithm-conventions.html\">Assert</a>: <i>Desc</i> is a <a href=\"/sec/sec-property-descriptor-specification-type.html\">Property Descriptor</a></li>\n          <li>Let <i>like</i> be Record{[[Value]]: <b>undefined</b>, [[Writable]]: <b>false</b>, [[Get]]: <b>undefined</b>,\n              [[Set]]: <b>undefined</b>, [[Enumerable]]: <b>false</b>, [[Configurable]]: <b>false</b>}.</li>\n          <li>If either <a href=\"/sec/sec-isgenericdescriptor.html\">IsGenericDescriptor</a>(<i>Desc</i>) or <a href=\"/sec/sec-isdatadescriptor.html\">IsDataDescriptor</a>(<i>Desc</i>) is <b>true</b>, then\n            <ol class=\"block\">\n              <li>If <i>Desc</i> does not have a [[Value]] field, set <i>Desc</i>.[[Value]] to <i>like</i>.[[Value]].</li>\n              <li>If <i>Desc</i> does not have a [[Writable]] field, set <i>Desc</i>.[[Writable]] to\n                  <i>like</i>.[[Writable]].</li>\n            </ol>\n          </li>\n          <li>Else,\n            <ol class=\"block\">\n              <li>If <i>Desc</i> does not have a [[Get]] field, set <i>Desc</i>.[[Get]] to <i>like</i>.[[Get]].</li>\n              <li>If <i>Desc</i> does not have a [[Set]] field, set <i>Desc</i>.[[Set]] to <i>like</i>.[[Set]].</li>\n            </ol>\n          </li>\n          <li>If <i>Desc</i> does not have an [[Enumerable]] field, set <i>Desc</i>.[[Enumerable]] to\n              <i>like</i>.[[Enumerable]].</li>\n          <li>If <i>Desc</i> does not have a [[Configurable]] field, set <i>Desc</i>.[[Configurable]] to\n              <i>like</i>.[[Configurable]].</li>\n          <li>Return <i>Desc</i>.</li>\n        </ol>\n      </section>\n    "}