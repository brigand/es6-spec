{"id":"sec-proxy-object-internal-methods-and-internal-slots-getownproperty-p","html":"\n      <h1><span class=\"secnum\" id=\"sec-9.5.5\"><a href=\"/sec/sec-proxy-object-internal-methods-and-internal-slots-getownproperty-p.html\" title=\"link to this section\">9.5.5</a></span> [[GetOwnProperty]] (P)</h1>\n\n      <p class=\"normalbefore\">When the [[GetOwnProperty]] internal method of a Proxy exotic object <var>O</var> is called with <a href=\"/sec/sec-object-type.html\">property key</a> <var>P</var>, the following steps are taken:</p>\n\n      <ol class=\"proc\">\n        <li><a href=\"/sec/sec-algorithm-conventions.html\">Assert</a>: <a href=\"/sec/sec-ispropertykey.html\">IsPropertyKey</a>(<i>P</i>) is\n            <b>true</b>.</li>\n        <li>Let <i>handler</i> be the value of the [[ProxyHandler]] <a href=\"/sec/sec-object-internal-methods-and-internal-slots.html\">internal slot</a> of <i>O</i>.</li>\n        <li>If <i>handler</i> is <b>null</b>, throw a <b>TypeError</b> exception.</li>\n        <li><a href=\"/sec/sec-algorithm-conventions.html\">Assert</a>: <a href=\"/sec/sec-ecmascript-data-types-and-values.html\">Type</a>(<i>handler</i>) is Object.</li>\n        <li>Let <i>target</i> be the value of the [[ProxyTarget]] <a href=\"/sec/sec-object-internal-methods-and-internal-slots.html\">internal slot</a> of <i>O</i>.</li>\n        <li>Let <i>trap</i> be <a href=\"/sec/sec-getmethod.html\">GetMethod</a>(<i>handler</i>,\n            <code>&quot;getOwnPropertyDescriptor&quot;</code>).</li>\n        <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>trap</i>).</li>\n        <li>If <i>trap</i> is <b>undefined</b>, then\n          <ol class=\"block\">\n            <li>Return <i>target</i>.[[GetOwnProperty]](<i>P</i>).</li>\n          </ol>\n        </li>\n        <li>Let <i>trapResultObj</i> be <a href=\"/sec/sec-call.html\">Call</a>(<i>trap</i>, <i>handler</i>, &#xAB;<i>target</i>,\n            <i>P</i>&#xBB;).</li>\n        <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>trapResultObj</i>).</li>\n        <li>If <a href=\"/sec/sec-ecmascript-data-types-and-values.html\">Type</a>(<i>trapResultObj</i>) is neither Object nor Undefined,\n            throw a <b>TypeError</b> exception.</li>\n        <li>Let <i>targetDesc</i> be <i>target</i>.[[GetOwnProperty]](<i>P</i>).</li>\n        <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>targetDesc</i>).</li>\n        <li>If <i>trapResultObj</i> is <b>undefined</b>, then\n          <ol class=\"block\">\n            <li>If <i>targetDesc</i> is <b>undefined</b>, return <b>undefined</b>.</li>\n            <li>If <i>targetDesc</i>.[[Configurable]] is <b>false</b>, throw a <b>TypeError</b> exception.</li>\n            <li>Let <i>extensibleTarget</i> be <a href=\"/sec/sec-isextensible-o.html\">IsExtensible</a>(<i>target</i>).</li>\n            <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>extensibleTarget</i>).</li>\n            <li><a href=\"/sec/sec-algorithm-conventions.html\">Assert</a>: <a href=\"/sec/sec-ecmascript-data-types-and-values.html\">Type</a>(<i>extensibleTarget</i>) is Boolean.</li>\n            <li>If <i>extensibleTarget</i> is <b>false</b>, throw a <b>TypeError</b> exception.</li>\n            <li>Return <b>undefined</b>.</li>\n          </ol>\n        </li>\n        <li>Let <i>extensibleTarget</i> be <a href=\"/sec/sec-isextensible-o.html\">IsExtensible</a>(<i>target</i>).</li>\n        <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>extensibleTarget</i>).</li>\n        <li>Let <i>resultDesc</i> be <a href=\"/sec/sec-topropertydescriptor.html\">ToPropertyDescriptor</a>(<i>trapResultObj</i>).</li>\n        <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>resultDesc</i>).</li>\n        <li><a href=\"/sec/sec-call.html\">Call</a> <a href=\"/sec/sec-completepropertydescriptor.html\">CompletePropertyDescriptor</a>(<i>resultDesc</i>).</li>\n        <li>Let <i>valid</i> be <a href=\"/sec/sec-iscompatiblepropertydescriptor.html\">IsCompatiblePropertyDescriptor</a>\n            (<i>extensibleTarget</i>, <i>resultDesc</i>, <i>targetDesc</i>).</li>\n        <li>If <i>valid</i> is <b>false</b>, throw a <b>TypeError</b> exception.</li>\n        <li>If <i>resultDesc</i>.[[Configurable]] is <b>false</b>, then\n          <ol class=\"block\">\n            <li>If <i>targetDesc</i> is <b>undefined</b> or <i>targetDesc</i>.[[Configurable]] is <b>true</b><i>,</i> then\n              <ol class=\"block\">\n                <li>Throw a <b>TypeError</b> exception.</li>\n              </ol>\n            </li>\n          </ol>\n        </li>\n        <li>Return <i>resultDesc</i>.</li>\n      </ol>\n\n      <div class=\"note\">\n        <p><span class=\"nh\">NOTE</span> [[GetOwnProperty]] for proxy objects enforces the following invariants:</p>\n\n        <ul>\n          <li>\n            <p>The result of [[GetOwnProperty]] must be either an Object or <b>undefined</b>.</p>\n          </li>\n\n          <li>\n            <p>A property cannot be reported as non-existent, if it exists as a non-configurable own property of the target\n            object.</p>\n          </li>\n\n          <li>\n            <p>A property cannot be reported as non-existent, if it exists as an own property of the target object and the target\n            object is not extensible.</p>\n          </li>\n\n          <li>\n            <p>A property cannot be reported as existent, if it does not exists as an own property of the target object and the\n            target object is not extensible.</p>\n          </li>\n\n          <li>\n            <p>A property cannot be reported as non-configurable, if it does not exists as an own property of the target object or\n            if it exists as a configurable own property of the target object.</p>\n          </li>\n        </ul>\n      </div>\n    "}