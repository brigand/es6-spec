{"id":"sec-reflect.construct","html":"\n      <h1><span class=\"secnum\" id=\"sec-26.1.2\"><a href=\"/sec/sec-reflect.construct.html\" title=\"link to this section\">26.1.2</a></span>\n          Reflect.construct ( target, argumentsList [, newTarget] )</h1>\n\n      <p class=\"normalbefore\">When the <code>construct</code> function is called with arguments <var>target</var>,\n      <var>argumentsList</var>, and <var>newTarget</var> the following steps are taken:</p>\n\n      <ol class=\"proc\">\n        <li>If <a href=\"/sec/sec-isconstructor.html\">IsConstructor</a>(<i>target</i>) is <b>false</b>, throw a <b>TypeError</b>\n            exception.</li>\n        <li>If <i>newTarget</i> is not present, let <i>newTarget</i> be <i>target</i>.</li>\n        <li>Else, if <a href=\"/sec/sec-isconstructor.html\">IsConstructor</a>(<i>newTarget</i>) is <b>false</b>, throw a <b>TypeError</b>\n            exception.</li>\n        <li>Let <i>args</i> be <a href=\"/sec/sec-createlistfromarraylike.html\">CreateListFromArrayLike</a>(<i>argumentsList</i>).</li>\n        <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>args</i>).</li>\n        <li>Return <a href=\"/sec/sec-construct.html\">Construct</a>(<i>target</i>, <i>args</i>, <i>newTarget</i>).</li>\n      </ol>\n\n      <p>The <code>length</code> property of the <code>construct</code> function is <b>2</b>.</p>\n    "}