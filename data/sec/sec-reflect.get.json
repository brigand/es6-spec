{"id":"sec-reflect.get","html":"\n      <h1><span class=\"secnum\" id=\"sec-26.1.6\"><a href=\"/sec/sec-reflect.get.html\" title=\"link to this section\">26.1.6</a></span>\n          Reflect.get ( target, propertyKey [ , receiver ])</h1>\n\n      <p class=\"normalbefore\">When the <code>get</code> function is called with arguments <span style=\"font-family: Times New\n      Roman\"><i>target</i>, <i>propertyKey</i></span>, and <var>receiver</var> the following steps are taken:</p>\n\n      <ol class=\"proc\">\n        <li>If <a href=\"/sec/sec-ecmascript-data-types-and-values.html\">Type</a>(<i>target</i>) is not Object, throw a <b>TypeError</b>\n            exception.</li>\n        <li>Let <i>key</i> be <a href=\"/sec/sec-topropertykey.html\">ToPropertyKey</a>(<i>propertyKey</i>).</li>\n        <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>key</i>).</li>\n        <li>If <i>receiver</i> is not present, then\n          <ol class=\"block\">\n            <li>Let <i>receiver</i> be <i>target</i>.</li>\n          </ol>\n        </li>\n        <li>Return <i>target.</i>[[Get]](<i>key</i>, <i>receiver</i>).</li>\n      </ol>\n\n      <p>The <code>length</code> property of the <code>get</code> function is <b>2</b>.</p>\n    "}