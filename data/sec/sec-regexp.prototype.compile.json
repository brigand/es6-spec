{"id":"sec-regexp.prototype.compile","html":"\n        <h1><span class=\"secnum\" id=\"sec-B.2.5.1\"><a href=\"/sec/sec-regexp.prototype.compile.html\" title=\"link to this section\">B.2.5.1</a></span> RegExp.prototype.compile (pattern, flags )</h1>\n\n        <p class=\"normalbefore\">When the <b>compile</b> method is called with arguments <i>pattern</i> and <i>flags</i>, the\n        following steps are taken:</p>\n\n        <ol class=\"proc\">\n          <li>Let <i>O</i> be the <b>this</b> value.</li>\n          <li>If <a href=\"/sec/sec-ecmascript-data-types-and-values.html\">Type</a>(<i>O</i>) is not Object or <a href=\"/sec/sec-ecmascript-data-types-and-values.html\">Type</a>(<i>O</i>) is Object and <i>O</i> does not have a\n              [[RegExpMatcher]] <a href=\"/sec/sec-object-internal-methods-and-internal-slots.html\">internal slot</a>, then\n            <ol class=\"block\">\n              <li>Throw a <b>TypeError</b> exception.</li>\n            </ol>\n          </li>\n          <li>If <a href=\"/sec/sec-ecmascript-data-types-and-values.html\">Type</a>(<i>pattern</i>) is Object and <i>pattern</i> has a\n              [[RegExpMatcher]] <a href=\"/sec/sec-object-internal-methods-and-internal-slots.html\">internal slot</a>, then\n            <ol class=\"block\">\n              <li>If <i>flags</i> is not <b>undefined</b>, throw a <b>TypeError</b> exception.</li>\n              <li>Let <i>P</i> be the value of <i>pattern&#x2019;s</i> [[OriginalSource]] <a href=\"/sec/sec-object-internal-methods-and-internal-slots.html\">internal slot</a>.</li>\n              <li>Let <i>F</i> be the value of <i>pattern&#x2019;s</i> [[OriginalFlags]] <a href=\"/sec/sec-object-internal-methods-and-internal-slots.html\">internal slot</a>.</li>\n            </ol>\n          </li>\n          <li>Else,\n            <ol class=\"block\">\n              <li>Let <i>P</i> be <i>pattern</i>.</li>\n              <li>Let <i>F</i> be <i>flags</i>.</li>\n            </ol>\n          </li>\n          <li>Return <a href=\"/sec/sec-regexpinitialize.html\">RegExpInitialize</a>(<i>O,</i> <i>P</i>, <i>F</i>).</li>\n        </ol>\n\n        <div class=\"note\">\n          <p><span class=\"nh\">NOTE</span> The <code>compile</code> method completely reinitializes the <b>this</b> object RegExp\n          with a new pattern and flags. An implementation may interpret use of this method as an assertion that the resulting\n          RegExp object will be used multiple times and hence is a candidate for extra optimization.</p>\n        </div>\n      "}