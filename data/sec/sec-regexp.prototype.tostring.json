{"id":"sec-regexp.prototype.tostring","html":"\n        <h1><span class=\"secnum\" id=\"sec-21.2.5.14\"><a href=\"/sec/sec-regexp.prototype.tostring.html\" title=\"link to this section\">21.2.5.14</a></span> RegExp.prototype.toString ( )</h1>\n        <ol class=\"proc\">\n          <li>Let <i>R</i> be the <b>this</b> value.</li>\n          <li>If <a href=\"/sec/sec-ecmascript-data-types-and-values.html\">Type</a>(<i>R</i>) is not Object, throw a <b>TypeError</b>\n              exception.</li>\n          <li>Let <i>pattern</i> be <a href=\"/sec/sec-tostring.html\">ToString</a>(<a href=\"/sec/sec-get-o-p.html\">Get</a>(<i>R</i>,\n              <code>&quot;source&quot;</code>)).</li>\n          <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>pattern</i>).</li>\n          <li>Let <i>flags</i> be <a href=\"/sec/sec-tostring.html\">ToString</a>(<a href=\"/sec/sec-get-o-p.html\">Get</a>(<i>R</i>,\n              <code>&quot;flags&quot;</code>)).</li>\n          <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>flags</i>).</li>\n          <li>Let <i>result</i> be the String value formed by concatenating <code>&quot;<b>/</b>&quot;</code>, <i>pattern</i>, and\n              <code>&quot;<b>/</b>&quot;</code>, and <i>flags</i>.</li>\n        </ol>\n\n        <div class=\"note\">\n          <p><span class=\"nh\">NOTE</span> The returned String has the form of a <span class=\"nt\">RegularExpressionLiteral</span>\n          that evaluates to another RegExp object with the same behaviour as this object.</p>\n        </div>\n      "}