{"id":"sec-regexpexec","html":"\n          <h1><span class=\"secnum\" id=\"sec-21.2.5.2.1\"><a href=\"/sec/sec-regexpexec.html\" title=\"link to this section\">21.2.5.2.1</a></span> Runtime Semantics: RegExpExec ( R, S )</h1>\n\n          <p class=\"normalbefore\">The abstract operation RegExpExec with arguments <var>R</var> and <var>S</var> performs the\n          following steps:</p>\n\n          <ol class=\"proc\">\n            <li><a href=\"/sec/sec-algorithm-conventions.html\">Assert</a>: <a href=\"/sec/sec-ecmascript-data-types-and-values.html\">Type</a>(<i>R</i>) is Object.</li>\n            <li><a href=\"/sec/sec-algorithm-conventions.html\">Assert</a>: <a href=\"/sec/sec-ecmascript-data-types-and-values.html\">Type</a>(<i>S</i>) is String.</li>\n            <li>Let <i>exec</i> be <a href=\"/sec/sec-get-o-p.html\">Get</a>(<i>R</i>, <code>&quot;<b>exec&quot;</b></code>).</li>\n            <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>exec</i>).</li>\n            <li>If <a href=\"/sec/sec-iscallable.html\">IsCallable</a>(<i>exec</i>) is <b>true</b>, then\n              <ol class=\"block\">\n                <li>Let <i>result</i> be <a href=\"/sec/sec-call.html\">Call</a>(<i>exec</i>, <i>R</i>, &#xAB;<i>S</i>&#xBB;).</li>\n                <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>result</i>).</li>\n                <li>If <a href=\"/sec/sec-ecmascript-data-types-and-values.html\">Type</a>(<i>result</i>) is neither Object or Null, throw a\n                    <b>TypeError</b> exception.</li>\n                <li>Return <i>result</i>.</li>\n              </ol>\n            </li>\n            <li>If <i>R</i> does not have a [[RegExpMatcher]] <a href=\"/sec/sec-object-internal-methods-and-internal-slots.html\">internal\n                slot</a>, throw a <b>TypeError</b> exception.</li>\n            <li>Return <a href=\"/sec/sec-regexpbuiltinexec.html\">RegExpBuiltinExec</a>(<i>R</i>, <i>S</i>).</li>\n          </ol>\n\n          <div class=\"note\">\n            <p><span class=\"nh\">NOTE</span> If a callable <code>exec</code> property is not found this algorithm falls back to\n            attempting to use the built-in RegExp matching algorithm. This provides compatible behaviour for code written for\n            prior editions where most built-in algorithms that use regular expressions did not perform a dynamic property lookup\n            of <code>exec</code>.</p>\n          </div>\n        "}