{"id":"sec-relational-operators-runtime-semantics-evaluation","html":"\n      <h1><span class=\"secnum\" id=\"sec-12.9.3\"><a href=\"/sec/sec-relational-operators-runtime-semantics-evaluation.html\" title=\"link to this section\">12.9.3</a></span> Runtime Semantics: Evaluation</h1>\n      <div class=\"gp prod\"><span class=\"nt\">RelationalExpression</span> <span class=\"geq\">:</span> <span class=\"nt\">RelationalExpression</span> <code class=\"t\">&lt;</code> <span class=\"nt\">ShiftExpression</span></div>\n      <ol class=\"proc\">\n        <li>Let <i>lref</i> be the result of evaluating <i>RelationalExpression</i>.</li>\n        <li>Let <i>lval</i> be <a href=\"/sec/sec-getvalue.html\">GetValue</a>(<i>lref</i>).</li>\n        <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>lval</i>).</li>\n        <li>Let <i>rref</i> be the result of evaluating <i>ShiftExpression</i>.</li>\n        <li>Let <i>rval</i> be <a href=\"/sec/sec-getvalue.html\">GetValue</a>(<i>rref</i>).</li>\n        <li>Let <i>r</i> be the result of performing Abstract Relational Comparison <i>lval</i> &lt; <i>rval</i>. (<a href=\"/sec/sec-abstract-relational-comparison.html\">see 7.2.11</a>)</li>\n        <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>r</i>).</li>\n        <li>If <i>r</i> is <b>undefined</b>, return <b>false</b>. Otherwise, return <i>r</i>.</li>\n      </ol>\n      <div class=\"gp prod\"><span class=\"nt\">RelationalExpression</span> <span class=\"geq\">:</span> <span class=\"nt\">RelationalExpression</span> <code class=\"t\">&gt;</code> <span class=\"nt\">ShiftExpression</span></div>\n      <ol class=\"proc\">\n        <li>Let <i>lref</i> be the result of evaluating <i>RelationalExpression</i>.</li>\n        <li>Let <i>lval</i> be <a href=\"/sec/sec-getvalue.html\">GetValue</a>(<i>lref</i>).</li>\n        <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>lval</i>).</li>\n        <li>Let <i>rref</i> be the result of evaluating <i>ShiftExpression</i>.</li>\n        <li>Let <i>rval</i> be <a href=\"/sec/sec-getvalue.html\">GetValue</a>(<i>rref</i>).</li>\n        <li>Let <i>r</i> be the result of performing Abstract Relational Comparison <i>rval</i> &lt; <i>lval</i> with\n            <i>LeftFirst</i> equal to <b>false</b>.</li>\n        <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>r</i>).</li>\n        <li>If <i>r</i> is <b>undefined</b>, return <b>false</b>. Otherwise, return <i>r</i>.</li>\n      </ol>\n      <div class=\"gp prod\"><span class=\"nt\">RelationalExpression</span> <span class=\"geq\">:</span> <span class=\"nt\">RelationalExpression</span> <code class=\"t\">&lt;=</code> <span class=\"nt\">ShiftExpression</span></div>\n      <ol class=\"proc\">\n        <li>Let <i>lref</i> be the result of evaluating <i>RelationalExpression</i>.</li>\n        <li>Let <i>lval</i> be <a href=\"/sec/sec-getvalue.html\">GetValue</a>(<i>lref</i>).</li>\n        <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>lval</i>).</li>\n        <li>Let <i>rref</i> be the result of evaluating <i>ShiftExpression</i>.</li>\n        <li>Let <i>rval</i> be <a href=\"/sec/sec-getvalue.html\">GetValue</a>(<i>rref</i>).</li>\n        <li>Let <i>r</i> be the result of performing Abstract Relational Comparison <i>rval</i> &lt; <i>lval</i>  with\n            <i>LeftFirst</i> equal to <b>false</b>.</li>\n        <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>r</i>).</li>\n        <li>If <i>r</i> is <b>true</b> or <b>undefined</b>, return <b>false</b>. Otherwise, return <b>true</b>.</li>\n      </ol>\n      <div class=\"gp prod\"><span class=\"nt\">RelationalExpression</span> <span class=\"geq\">:</span> <span class=\"nt\">RelationalExpression</span> <code class=\"t\">&gt;=</code> <span class=\"nt\">ShiftExpression</span></div>\n      <ol class=\"proc\">\n        <li>Let <i>lref</i> be the result of evaluating <i>RelationalExpression</i>.</li>\n        <li>Let <i>lval</i> be <a href=\"/sec/sec-getvalue.html\">GetValue</a>(<i>lref</i>).</li>\n        <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>lval</i>).</li>\n        <li>Let <i>rref</i> be the result of evaluating <i>ShiftExpression</i>.</li>\n        <li>Let <i>rval</i> be <a href=\"/sec/sec-getvalue.html\">GetValue</a>(<i>rref</i>).</li>\n        <li>Let <i>r</i> be the result of performing Abstract Relational Comparison <i>lval</i> &lt; <i>rval</i>.</li>\n        <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>r</i>).</li>\n        <li>If <i>r</i> is <b>true</b> or <b>undefined</b>, return <b>false</b>. Otherwise, return <b>true</b>.</li>\n      </ol>\n      <div class=\"gp prod\"><span class=\"nt\">RelationalExpression</span> <span class=\"geq\">:</span> <span class=\"nt\">RelationalExpression</span> <code class=\"t\">instanceof</code> <span class=\"nt\">ShiftExpression</span></div>\n      <ol class=\"proc\">\n        <li>Let <i>lref</i> be the result of evaluating <i>RelationalExpression</i>.</li>\n        <li>Let <i>lval</i> be <a href=\"/sec/sec-getvalue.html\">GetValue</a>(<i>lref</i>).</li>\n        <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>lval</i>).</li>\n        <li>Let <i>rref</i> be the result of evaluating <i>ShiftExpression</i>.</li>\n        <li>Let <i>rval</i> be <a href=\"/sec/sec-getvalue.html\">GetValue</a>(<i>rref</i>).</li>\n        <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>rval</i>).</li>\n        <li>Return <a href=\"/sec/sec-instanceofoperator.html\">InstanceofOperator</a>(<i>lval</i>, <i>rval</i>).</li>\n      </ol>\n      <div class=\"gp prod\"><span class=\"nt\">RelationalExpression</span> <span class=\"geq\">:</span> <span class=\"nt\">RelationalExpression</span> <code class=\"t\">in</code> <span class=\"nt\">ShiftExpression</span></div>\n      <ol class=\"proc\">\n        <li>Let <i>lref</i> be the result of evaluating <i>RelationalExpression</i>.</li>\n        <li>Let <i>lval</i> be <a href=\"/sec/sec-getvalue.html\">GetValue</a>(<i>lref</i>).</li>\n        <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>lval</i>).</li>\n        <li>Let <i>rref</i> be the result of evaluating <i>ShiftExpression</i>.</li>\n        <li>Let <i>rval</i> be <a href=\"/sec/sec-getvalue.html\">GetValue</a>(<i>rref</i>).</li>\n        <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>rval</i>).</li>\n        <li>If <a href=\"/sec/sec-ecmascript-data-types-and-values.html\">Type</a>(<i>rval</i>) is not Object, throw a <b>TypeError</b>\n            exception.</li>\n        <li>Return <a href=\"/sec/sec-hasproperty.html\">HasProperty</a>(<i>rval</i>, <a href=\"/sec/sec-topropertykey.html\">ToPropertyKey</a>(<i>lval</i>)).</li>\n      </ol>\n    "}