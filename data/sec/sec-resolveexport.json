{"id":"sec-resolveexport","html":"\n          <h1><span class=\"secnum\" id=\"sec-15.2.1.16.3\"><a href=\"/sec/sec-resolveexport.html\" title=\"link to this section\">15.2.1.16.3</a></span> ResolveExport( exportName, resolveSet, exportStarSet ) Concrete\n              Method</h1>\n\n          <p class=\"normalbefore\">The ResolveExport concrete method of a <a href=\"/sec/sec-source-text-module-records.html\">Source Text\n          Module Record</a> with arguments <var>exportName</var>, <var>resolveSet</var>, and <var>exportStarSet</var> performs the\n          following steps:</p>\n\n          <ol class=\"proc\">\n            <li>Let <i>module</i> be this <a href=\"/sec/sec-source-text-module-records.html\">Source Text Module Record</a>.</li>\n            <li>For each Record {[[module]], [[exportName]]} <i>r</i> in <i>resolveSet</i>, do:\n              <ol class=\"block\">\n                <li>If <i>module</i> and <i>r</i>.[[module]] are the same <a href=\"/sec/sec-abstract-module-records.html\">Module Record</a>\n                    and <a href=\"/sec/sec-samevalue.html\">SameValue</a>(<i>exportName</i>, <i>r</i>.[[exportName]]) is <b>true</b>, then\n                  <ol class=\"block\">\n                    <li><a href=\"/sec/sec-algorithm-conventions.html\">Assert</a>: this is a circular import request.</li>\n                    <li>Return <b>null</b>.</li>\n                  </ol>\n                </li>\n              </ol>\n            </li>\n            <li>Append the Record {[[module]]: <i>module</i>, [[exportName]]: <i>exportName</i>} to <i>resolveSet</i>.</li>\n            <li>For each ExportEntry Record <i>e</i> in <i>module</i>.[[LocalExportEntries]], do\n              <ol class=\"block\">\n                <li>If <a href=\"/sec/sec-samevalue.html\">SameValue</a>(<i>exportName</i>, <i>e</i>.[[ExportName]]) is <b>true</b>, then\n                  <ol class=\"block\">\n                    <li><a href=\"/sec/sec-algorithm-conventions.html\">Assert</a>: <i>module</i> provides the direct binding for this\n                        export.</li>\n                    <li>Return Record{[[module]]: <i>module,</i> [[bindingName]]: <i>e</i>.[[LocalName]]}.</li>\n                  </ol>\n                </li>\n              </ol>\n            </li>\n            <li>For each ExportEntry Record <i>e</i> in <i>module</i>.[[IndirectExportEntries]], do\n              <ol class=\"block\">\n                <li>If <a href=\"/sec/sec-samevalue.html\">SameValue</a>(<i>exportName</i>, <i>e</i>.[[ExportName]]) is <b>true</b>, then\n                  <ol class=\"block\">\n                    <li><a href=\"/sec/sec-algorithm-conventions.html\">Assert</a>: <i>module</i> imports a specific binding for this\n                        export.</li>\n                    <li>Let <i>importedModule</i> be <a href=\"/sec/sec-hostresolveimportedmodule.html\">HostResolveImportedModule</a>(<i>module</i>,\n                        <i>e</i>.[[ModuleRequest]]).</li>\n                    <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>importedModule</i>).</li>\n                    <li>Let <i>indirectResolution</i> be <i>importedModule.</i>ResolveExport(<i>e</i>.[[ImportName]],\n                        <i>resolveSet</i>, <i>exportStarSet</i>).</li>\n                    <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>indirectResolution</i>).</li>\n                    <li>If <i>indirectResolution</i> is not <b>null</b>, return <i>indirectResolution</i>.</li>\n                  </ol>\n                </li>\n              </ol>\n            </li>\n            <li>If <a href=\"/sec/sec-samevalue.html\">SameValue</a>(<i>exportName</i>, <code>&quot;default&quot;</code>) is <b>true</b>, then\n              <ol class=\"block\">\n                <li><a href=\"/sec/sec-algorithm-conventions.html\">Assert</a>: A <code>default</code> export was not explicitly defined by\n                    this module.</li>\n                <li>Throw a <b>SyntaxError</b> exception.</li>\n                <li>NOTE  A <code>default</code> export cannot be provided by an <code>export *</code>.</li>\n              </ol>\n            </li>\n            <li>If <i>exportStarSet</i> contains <i>module</i>, then return <b>null</b>.</li>\n            <li>Append <i>module</i> to <i>exportStarSet</i>.</li>\n            <li>Let <i>starResolution</i> be <b>null</b>.</li>\n            <li>For each ExportEntry Record <i>e</i> in <i>module</i>.[[StarExportEntries]], do\n              <ol class=\"block\">\n                <li>Let <i>importedModule</i> be <a href=\"/sec/sec-hostresolveimportedmodule.html\">HostResolveImportedModule</a>(<i>module</i>,\n                    <i>e</i>.[[ModuleRequest]]).</li>\n                <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>importedModule</i>).</li>\n                <li>Let <i>resolution</i> be <i>importedModule</i>.ResolveExport(<i>exportName</i>, <i>resolveSet</i>,\n                    <i>exportStarSet</i>).</li>\n                <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>resolution</i>).</li>\n                <li>If <i>resolution</i> is <code>&quot;ambiguous&quot;</code>, return <code>&quot;ambiguous&quot;</code>.</li>\n                <li>If <i>resolution</i> is not <b>null</b>, then\n                  <ol class=\"block\">\n                    <li>If <i>starResolution</i> is <b>null</b>, let <i>starResolution</i> be <i>resolution</i>.</li>\n                    <li>Else\n                      <ol class=\"block\">\n                        <li><a href=\"/sec/sec-algorithm-conventions.html\">Assert</a>: there is more than one * import that includes the\n                            requested name.</li>\n                        <li>If <i>resolution</i>.[[module]] and <i>starResolution</i>.[[module]] are not the same <a href=\"/sec/sec-abstract-module-records.html\">Module Record</a> or <a href=\"/sec/sec-samevalue.html\">SameValue</a>(<i>resolution.</i>[[exportName]],\n                            <i>starResolution</i>.[[exportName]]) is <b>false</b>, return <code>&quot;ambiguous&quot;</code>.</li>\n                      </ol>\n                    </li>\n                  </ol>\n                </li>\n              </ol>\n            </li>\n            <li>Return <i>starResolution</i>.</li>\n          </ol>\n\n          <div class=\"note\">\n            <p><span class=\"nh\">NOTE</span> ResolveExport attempts to resolve an imported binding to the actual defining module\n            and local binding name. The defining module may be the module represented by the <a href=\"/sec/sec-abstract-module-records.html\">Module Record</a> this method was invoked on or some other module that is imported\n            by that module. The parameter <var>resolveSet</var> is use to detect unresolved circular import/export paths. If a\n            pair consisting of specific <a href=\"/sec/sec-abstract-module-records.html\">Module Record</a> and <var>exportName</var> is\n            reached that is already in <span style=\"font-family: Times New Roman\"><i>resolveSet</i>, an</span> import circularity\n            has been encountered. Before recursively calling ResolveExport, a pair consisting of <var>module</var> and\n            <var>exportName</var> is added to <span style=\"font-family: Times New Roman\"><i>resolveSet</i>.</span></p>\n\n            <p>If a defining module is found a Record {[[module]]<i>,</i> [[bindingName]]} is returned. This record identifies the\n            resolved binding of the originally requested export. If no definition was found or the request is found to be\n            circular, <span class=\"value\">null</span> is returned. If the request is found to be ambiguous, the string\n            <code>&quot;ambiguous&quot;</code> is returned.</p>\n          </div>\n        "}