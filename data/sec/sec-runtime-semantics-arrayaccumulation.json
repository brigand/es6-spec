{"id":"sec-runtime-semantics-arrayaccumulation","html":"\n        <h1><span class=\"secnum\" id=\"sec-12.2.5.2\"><a href=\"/sec/sec-runtime-semantics-arrayaccumulation.html\" title=\"link to this section\">12.2.5.2</a></span> Runtime Semantics: ArrayAccumulation</h1>\n\n        <p>With parameters <var>array</var> and <var>nextIndex</var>.</p>\n\n        <div class=\"gp prod\"><span class=\"nt\">ElementList</span> <span class=\"geq\">:</span> <span class=\"nt\">Elision</span><sub class=\"g-opt\">opt</sub> <span class=\"nt\">AssignmentExpression</span></div>\n        <ol class=\"proc\">\n          <li>Let <i>padding</i> be the ElisionWidth of <i>Elision</i>; if <i>Elision</i> is not present, use the numeric value\n              zero.</li>\n          <li>Let <i>initResult</i> be the result of evaluating <i>AssignmentExpression</i>.</li>\n          <li>Let <i>initValue</i> be <a href=\"/sec/sec-getvalue.html\">GetValue</a>(<i>initResult</i>).</li>\n          <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>initValue</i>).</li>\n          <li>Let <i>created</i> be <a href=\"/sec/sec-createdataproperty.html\">CreateDataProperty</a>(<i>array</i>, <a href=\"/sec/sec-tostring.html\">ToString</a>(<a href=\"/sec/sec-touint32.html\">ToUint32</a>(<i>nextIndex+padding</i>)),\n              <i>initValue</i>).</li>\n          <li><a href=\"/sec/sec-algorithm-conventions.html\">Assert</a>: <i>created</i> is <b>true</b><i>.</i></li>\n          <li>Return <i>nextIndex+padding+</i>1.</li>\n        </ol>\n        <div class=\"gp prod\"><span class=\"nt\">ElementList</span> <span class=\"geq\">:</span> <span class=\"nt\">Elision</span><sub class=\"g-opt\">opt</sub> <span class=\"nt\">SpreadElement</span></div>\n        <ol class=\"proc\">\n          <li>Let <i>padding</i> be the ElisionWidth of <i>Elision</i>; if <i>Elision</i> is not present, use the numeric value\n              zero.</li>\n          <li>Return the result of performing ArrayAccumulation for <i>SpreadElement</i> with arguments <i>array</i> and\n              <i>nextIndex</i>+<i>padding</i>.</li>\n        </ol>\n        <div class=\"gp prod\"><span class=\"nt\">ElementList</span> <span class=\"geq\">:</span> <span class=\"nt\">ElementList</span> <code class=\"t\">,</code> <span class=\"nt\">Elision</span><sub class=\"g-opt\">opt</sub> <span class=\"nt\">AssignmentExpression</span></div>\n        <ol class=\"proc\">\n          <li>Let <i>postIndex</i>  be the result of performing ArrayAccumulation for <i>ElementList</i> with arguments\n              <i>array</i> and <i>nextIndex</i>.</li>\n          <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>postIndex</i>).</li>\n          <li>Let <i>padding</i> be the ElisionWidth of <i>Elision</i>; if <i>Elision</i> is not present, use the numeric value\n              zero.</li>\n          <li>Let <i>initResult</i> be the result of evaluating <i>AssignmentExpression</i>.</li>\n          <li>Let <i>initValue</i> be <a href=\"/sec/sec-getvalue.html\">GetValue</a>(<i>initResult</i>).</li>\n          <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>initValue</i>).</li>\n          <li>Let <i>created</i> be <a href=\"/sec/sec-createdataproperty.html\">CreateDataProperty</a>(<i>array</i>, <a href=\"/sec/sec-tostring.html\">ToString</a>(<a href=\"/sec/sec-touint32.html\">ToUint32</a>(<i>postIndex</i>+<i>padding</i>)),\n              <i>initValue</i>).</li>\n          <li><a href=\"/sec/sec-algorithm-conventions.html\">Assert</a>: <i>created</i> is <b>true</b>.</li>\n          <li>Return <i>postIndex</i>+<i>padding+</i>1.</li>\n        </ol>\n        <div class=\"gp prod\"><span class=\"nt\">ElementList</span> <span class=\"geq\">:</span> <span class=\"nt\">ElementList</span> <code class=\"t\">,</code> <span class=\"nt\">Elision</span><sub class=\"g-opt\">opt</sub> <span class=\"nt\">SpreadElement</span></div>\n        <ol class=\"proc\">\n          <li>Let <i>postIndex</i>  be the result of performing ArrayAccumulation for <i>ElementList</i> with arguments\n              <i>array</i> and <i>nextIndex</i>.</li>\n          <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>postIndex</i>).</li>\n          <li>Let <i>padding</i> be the ElisionWidth of <i>Elision</i>; if <i>Elision</i> is not present, use the numeric value\n              zero.</li>\n          <li>Return the result of performing ArrayAccumulation for <i>SpreadElement</i> with arguments <i>array</i> and\n              <i>postIndex</i>+<i>padding</i>.</li>\n        </ol>\n        <div class=\"gp prod\"><span class=\"nt\">SpreadElement</span> <span class=\"geq\">:</span> <code class=\"t\">...</code> <span class=\"nt\">AssignmentExpression</span></div>\n        <ol class=\"proc\">\n          <li>Let <i>spreadRef</i> be the result of evaluating <i>AssignmentExpression</i>.</li>\n          <li>Let <i>spreadObj</i> be <a href=\"/sec/sec-getvalue.html\">GetValue</a>(<i>spreadRef</i>).</li>\n          <li>Let <i>iterator</i> be <a href=\"/sec/sec-getiterator.html\">GetIterator</a>(<i>spreadObj</i>).</li>\n          <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>iterator</i>).</li>\n          <li>Repeat\n            <ol class=\"block\">\n              <li>Let <i>next</i> be <a href=\"/sec/sec-iteratorstep.html\">IteratorStep</a>(<i>iterator</i>).</li>\n              <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>next</i>).</li>\n              <li>If <i>next</i> is <b>false</b>, return <i>nextIndex</i>.</li>\n              <li>Let <i>nextValue</i> be <a href=\"/sec/sec-iteratorvalue.html\">IteratorValue</a>(<i>next</i>).</li>\n              <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>nextValue</i>).</li>\n              <li>Let <i>status</i> be <a href=\"/sec/sec-createdataproperty.html\">CreateDataProperty</a>(<i>array</i>, <a href=\"/sec/sec-tostring.html\">ToString</a>(<i>nextIndex</i>), <i>nextValue</i>).</li>\n              <li><a href=\"/sec/sec-algorithm-conventions.html\">Assert</a>:  <i>status</i> is <b>true</b> .</li>\n              <li>Let <i>nextIndex</i> be <i>nextIndex</i> + 1.</li>\n            </ol>\n          </li>\n        </ol>\n\n        <div class=\"note\">\n          <p><span class=\"nh\">NOTE</span> <a href=\"/sec/sec-createdataproperty.html\">CreateDataProperty</a> is used to ensure that own\n          properties are defined for the array even if the standard built-in Array prototype object has been modified in a manner\n          that would preclude the creation of new own properties using [[Set]].</p>\n        </div>\n      "}