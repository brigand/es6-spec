{"id":"sec-runtime-semantics-forin-div-ofbodyevaluation-lhs-stmt-iterator-lhskind-labelset","html":"\n        <h1><span class=\"secnum\" id=\"sec-13.7.5.13\"><a href=\"/sec/sec-runtime-semantics-forin-div-ofbodyevaluation-lhs-stmt-iterator-lhskind-labelset.html\" title=\"link to this section\">13.7.5.13</a></span> Runtime Semantics: ForIn/OfBodyEvaluation ( lhs, stmt, iterator,\n            lhsKind, labelSet )</h1>\n\n        <p class=\"normalbefore\">The abstract operation ForIn/OfBodyEvaluation is called with arguments <var>lhs</var>, <var>stmt,\n        iterator,</var> <var>lhsKind</var>, and <var>labelSet.</var> The value of <var>lhsKind</var> is either <b>assignment</b>,\n        <b>varBinding</b> or <b>lexicalBinding</b>.</p>\n\n        <ol class=\"proc\">\n          <li>Let <i>oldEnv</i> be <a href=\"/sec/sec-execution-contexts.html\">the running execution context</a>&#x2019;s <a href=\"/sec/sec-execution-contexts.html\">LexicalEnvironment</a>.</li>\n          <li>Let <i>V</i> = <b>undefined</b> .</li>\n          <li>Let <i>destructuring</i> be IsDestructuring of <i>lhs</i>.</li>\n          <li>If <i>destructuring</i> is <b>true</b> and if <i>lhsKind</i> is <span style=\"font-family:\n              sans-serif\">assignment</span>, then\n            <ol class=\"block\">\n              <li><a href=\"/sec/sec-algorithm-conventions.html\">Assert</a>: <i>lhs</i> is a <i>LeftHandSideExpression</i>.</li>\n              <li>Let <i>assignmentPattern</i> be the parse of the source text corresponding to <i>lhs</i> using\n                  <i>AssignmentPattern</i> as the goal symbol.</li>\n            </ol>\n          </li>\n          <li>Repeat\n            <ol class=\"block\">\n              <li>Let <i>nextResult</i> be <a href=\"/sec/sec-iteratorstep.html\">IteratorStep</a>(<i>iterator</i>).</li>\n              <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>nextResult</i>).</li>\n              <li>If <i>nextResult</i> is <b>false</b>, return <a href=\"/sec/sec-normalcompletion.html\">NormalCompletion</a>(<i>V</i>).</li>\n              <li>Let <i>nextValue</i> be <a href=\"/sec/sec-iteratorvalue.html\">IteratorValue</a>(<i>nextResult</i>).</li>\n              <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>nextValue</i>).</li>\n              <li>If <i>lhsKind</i> is either <span style=\"font-family: sans-serif\">assignment</span> or <span style=\"font-family:\n                  sans-serif\">varBinding</span>, then\n                <ol class=\"block\">\n                  <li>If <i>destructuring</i> is <b>false</b>, then\n                    <ol class=\"block\">\n                      <li>Let <i>lhsRef</i> be the result of evaluating <i>lhs</i> ( it may be evaluated repeatedly).</li>\n                    </ol>\n                  </li>\n                </ol>\n              </li>\n              <li>Else\n                <ol class=\"block\">\n                  <li><a href=\"/sec/sec-algorithm-conventions.html\">Assert</a>: <i>lhsKind</i> is <span style=\"font-family:\n                      sans-serif\">lexicalBinding</span>.</li>\n                  <li><a href=\"/sec/sec-algorithm-conventions.html\">Assert</a>: <i>lhs</i> is a <i>ForDeclaration</i>.</li>\n                  <li>Let <i>iterationEnv</i> be <a href=\"/sec/sec-newdeclarativeenvironment.html\">NewDeclarativeEnvironment</a>(<i>oldEnv</i>).</li>\n                  <li>Perform BindingInstantiation for <i>lhs</i> passing <i>iterationEnv</i> as the argument.</li>\n                  <li>Set <a href=\"/sec/sec-execution-contexts.html\">the running execution context</a>&#x2019;s <a href=\"/sec/sec-execution-contexts.html\">LexicalEnvironment</a> to <i>iterationEnv</i>.</li>\n                  <li>If <i>destructuring</i> is <b>false</b>, then\n                    <ol class=\"block\">\n                      <li><a href=\"/sec/sec-algorithm-conventions.html\">Assert</a>: <i>lhs</i> binds a single name.</li>\n                      <li>Let <i>lhsName</i> be the sole element of BoundNames of <i>lhs.</i></li>\n                      <li>Let <i>lhsRef</i> be <a href=\"/sec/sec-resolvebinding.html\">ResolveBinding</a>(<i>lhsName</i>).</li>\n                      <li><a href=\"/sec/sec-algorithm-conventions.html\">Assert</a>: <i>lhsRef</i> is not an <a href=\"/sec/sec-completion-record-specification-type.html\">abrupt completion</a>.</li>\n                    </ol>\n                  </li>\n                </ol>\n              </li>\n              <li>If <i>destructuring</i> is <b>false</b>, then\n                <ol class=\"block\">\n                  <li>If <i>lhsRef</i> is an <a href=\"/sec/sec-completion-record-specification-type.html\">abrupt completion</a>, then\n                    <ol class=\"block\">\n                      <li>Let <i>status</i> be <i>lhsRef</i>.</li>\n                    </ol>\n                  </li>\n                  <li>Else if <i>lhsKind</i> is <span style=\"font-family: sans-serif\">lexicalBinding</span>, then\n                    <ol class=\"block\">\n                      <li>Let <i>status</i> be <a href=\"/sec/sec-initializereferencedbinding.html\">InitializeReferencedBinding</a>(<i>lhsRef</i>,\n                          <i>nextValue</i>).</li>\n                    </ol>\n                  </li>\n                  <li>Else,\n                    <ol class=\"block\">\n                      <li>Let <i>status</i> be <a href=\"/sec/sec-putvalue.html\">PutValue</a>(<i>lhsRef</i>,  <i>nextValue</i>).</li>\n                    </ol>\n                  </li>\n                </ol>\n              </li>\n              <li>Else,\n                <ol class=\"block\">\n                  <li>If <i>lhsKind</i> is <span style=\"font-family: sans-serif\">assignment</span>, then\n                    <ol class=\"block\">\n                      <li>Let <i>status</i> be the result of performing DestructuringAssignmentEvaluation of\n                          <i>assignmentPattern</i> using <i>nextValue</i> as the argument.</li>\n                    </ol>\n                  </li>\n                  <li>Else if <i>lhsKind</i> is <span style=\"font-family: sans-serif\">varBinding</span>, then\n                    <ol class=\"block\">\n                      <li><a href=\"/sec/sec-algorithm-conventions.html\">Assert</a>: <i>lhs</i> is a <i>ForBinding</i>.</li>\n                      <li>Let <i>status</i> be the result of performing BindingInitialization for <i>lhs</i> passing\n                          <i>nextValue</i> and <b>undefined</b> as the arguments.</li>\n                    </ol>\n                  </li>\n                  <li>Else,\n                    <ol class=\"block\">\n                      <li><a href=\"/sec/sec-algorithm-conventions.html\">Assert</a>: <i>lhsKind</i> is <span style=\"font-family:\n                          sans-serif\">lexicalBinding</span>.</li>\n                      <li><a href=\"/sec/sec-algorithm-conventions.html\">Assert</a>: <i>lhs</i> is a <i>ForDeclaration</i>.</li>\n                      <li>Let <i>status</i> be the result of performing BindingInitialization for <i>lhs</i> passing\n                          <i>nextValue</i> and <i>iterationEnv</i> as arguments.</li>\n                    </ol>\n                  </li>\n                </ol>\n              </li>\n              <li>If <i>status</i> is an <a href=\"/sec/sec-completion-record-specification-type.html\">abrupt completion</a>, then\n                <ol class=\"block\">\n                  <li>Set <a href=\"/sec/sec-execution-contexts.html\">the running execution context</a>&#x2019;s <a href=\"/sec/sec-execution-contexts.html\">LexicalEnvironment</a> to <i>oldEnv</i>.</li>\n                  <li>Return <a href=\"/sec/sec-iteratorclose.html\">IteratorClose</a>(<i>iterator</i>, <i>status</i>).</li>\n                </ol>\n              </li>\n              <li>Let <i>result</i> be the result  of evaluating <i>stmt</i>.</li>\n              <li>Set <a href=\"/sec/sec-execution-contexts.html\">the running execution context</a>&#x2019;s <a href=\"/sec/sec-execution-contexts.html\">LexicalEnvironment</a> to <i>oldEnv</i>.</li>\n              <li>If <a href=\"/sec/sec-loopcontinues.html\">LoopContinues</a>(<i>result</i>, <i>labelSet</i>) is <b>false</b>, return <a href=\"/sec/sec-iteratorclose.html\">IteratorClose</a>(<i>iterator</i>, <a href=\"/sec/sec-updateempty.html\">UpdateEmpty</a>(<i>result</i>, <i>V</i>)).</li>\n              <li>If <i>result</i>.[[value]] is not <span style=\"font-family: sans-serif\">empty</span>, let <i>V</i> be\n                  <i>result</i>.[[value]].</li>\n            </ol>\n          </li>\n        </ol>\n      "}