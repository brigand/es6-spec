{"id":"sec-runtime-semantics-keyeddestructuringassignmentevaluation","html":"\n        <h1><span class=\"secnum\" id=\"sec-12.14.5.4\"><a href=\"/sec/sec-runtime-semantics-keyeddestructuringassignmentevaluation.html\" title=\"link to this section\">12.14.5.4</a></span> Runtime Semantics: KeyedDestructuringAssignmentEvaluation</h1>\n\n        <p>with parameters <var>value</var> and <var>propertyName</var></p>\n\n        <p><span style=\"font-family: Times New Roman\"><i>AssignmentElement<sub>[Yield]</sub></i></span> <b>:</b> <span class=\"nt\">DestructuringAssignmentTarget</span>   <span class=\"nt\">Initializer</span><sub>opt</sub></p>\n\n        <ol class=\"proc\">\n          <li>If <i>DestructuringAssignmentTarget</i> is neither an <i>ObjectLiteral</i> nor an <i>ArrayLiteral</i>, then\n            <ol class=\"block\">\n              <li>Let <i>lref</i> be the result of evaluating <i>DestructuringAssignmentTarget</i>.</li>\n              <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>lref</i>).</li>\n            </ol>\n          </li>\n          <li>Let <i>v</i> be <a href=\"/sec/sec-getv.html\">GetV</a>(<i>value</i>, <i>propertyName</i>).</li>\n          <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>v</i>).</li>\n          <li>If <i>Initializer</i> is present and <i>v</i> is <b>undefined</b>, then\n            <ol class=\"block\">\n              <li>Let <i>defaultValue</i> be the result of evaluating <i>Initializer</i>.</li>\n              <li>Let <i>rhsValue</i> be <a href=\"/sec/sec-getvalue.html\">GetValue</a>(<i>defaultValue</i>)</li>\n              <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>rhsValue</i>).</li>\n            </ol>\n          </li>\n          <li>Else, let <i>rhsValue</i> be <i>v</i>.</li>\n          <li>If <i>DestructuringAssignmentTarget</i> is an <i>ObjectLiteral or an ArrayLiteral</i>, then\n            <ol class=\"block\">\n              <li>Let <i>assignmentPattern</i> be the parse of the source text corresponding to\n                  <i>DestructuringAssignmentTarget</i> using either <i>AssignmentPattern</i> or\n                  <i>AssignmentPattern</i><sub>[Yield]</sub> as the goal symbol depending upon whether this\n                  <i>AssignmentElement</i> has the <span style=\"font-family: sans-serif\"><sub>Yield</sub></span> parameter.</li>\n              <li>Return the result of performing DestructuringAssignmentEvaluation of <i>assignmentPattern</i> with\n                  <i>rhsValue</i> as the argument.</li>\n            </ol>\n          </li>\n          <li>If <i>Initializer</i> is present and <i>v</i> is <b>undefined</b> and <a href=\"/sec/sec-isanonymousfunctiondefinition.html\">IsAnonymousFunctionDefinition</a>(<i>Initializer)</i> and IsIdentifierRef\n              of <i>DestructuringAssignmentTarget</i> are both <b>true</b>, then\n            <ol class=\"block\">\n              <li>Let <i>hasNameProperty</i> be <a href=\"/sec/sec-hasownproperty.html\">HasOwnProperty</a>(<i>rhsValue</i>,\n                  <code>&quot;name&quot;</code>).</li>\n              <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>hasNameProperty</i>).</li>\n              <li>If <i>hasNameProperty</i> is <b>false</b>, perform <a href=\"/sec/sec-setfunctionname.html\">SetFunctionName</a>(<i>rhsValue</i>, <a href=\"/sec/sec-reference-specification-type.html\">GetReferencedName</a>(<i>lref</i>)).</li>\n            </ol>\n          </li>\n          <li>Return <a href=\"/sec/sec-putvalue.html\">PutValue</a>(<i>lref</i>, <i>rhsValue</i>).</li>\n        </ol>\n      "}