{"id":"sec-serializejsonobject","html":"\n        <h1><span class=\"secnum\" id=\"sec-24.3.2.3\"><a href=\"/sec/sec-serializejsonobject.html\" title=\"link to this section\">24.3.2.3</a></span> Runtime Semantics: SerializeJSONObject ( value )</h1>\n\n        <p class=\"normalbefore\">The abstract operation SerializeJSONObject with argument <var>value</var> serializes an object. It\n        has access to the <var>stack</var>, <var>indent</var>, <var>gap</var>, and <span class=\"nt\">PropertyList</span> values of\n        the current invocation of the <code>stringify</code> method.</p>\n\n        <ol class=\"proc\">\n          <li>If <i>stack</i> contains <i>value</i>, throw a <b>TypeError</b> exception because the structure is cyclical.</li>\n          <li>Append <i>value</i> to <i>stack</i>.</li>\n          <li>Let <i>stepback</i> be <i>indent</i>.</li>\n          <li>Let <i>indent</i> be the concatenation of <i>indent</i> and <i>gap</i>.</li>\n          <li>If <i>PropertyList</i> is not <b>undefined</b>, then\n            <ol class=\"block\">\n              <li>Let <i>K</i> be <i>PropertyList</i>.</li>\n            </ol>\n          </li>\n          <li>Else,\n            <ol class=\"block\">\n              <li>Let <i>K</i> be <a href=\"/sec/sec-enumerableownnames.html\">EnumerableOwnNames</a>(<i>value</i>).</li>\n            </ol>\n          </li>\n          <li>Let <i>partial</i> be an empty <a href=\"/sec/sec-list-and-record-specification-type.html\">List</a>.</li>\n          <li>For each element <i>P</i> of <i>K</i>,\n            <ol class=\"block\">\n              <li>Let <i>strP</i> be <a href=\"/sec/sec-serializejsonproperty.html\">SerializeJSONProperty</a>(<i>P</i>, <i>value</i>).</li>\n              <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>strP</i>).</li>\n              <li>If <i>strP</i> is not <b>undefined</b>, then\n                <ol class=\"block\">\n                  <li>Let <i>member</i> be <a href=\"/sec/sec-quotejsonstring.html\">QuoteJSONString</a>(<i>P</i>).</li>\n                  <li>Let <i>member</i> be the concatenation of <i>member</i> and the string <code>&quot;:&quot;</code>.</li>\n                  <li>If <i>gap</i> is not the empty String, then\n                    <ol class=\"block\">\n                      <li>Let <i>member</i> be the concatenation of <i>member</i> and code unit 0x0020 (SPACE).</li>\n                    </ol>\n                  </li>\n                  <li>Let <i>member</i> be the concatenation of <i>member</i> and <i>strP</i>.</li>\n                  <li>Append <i>member</i> to <i>partial</i>.</li>\n                </ol>\n              </li>\n            </ol>\n          </li>\n          <li>If <i>partial</i> is empty, then\n            <ol class=\"block\">\n              <li>Let <i>final</i> be <code>&quot;{}&quot;</code>.</li>\n            </ol>\n          </li>\n          <li>Else,\n            <ol class=\"block\">\n              <li>If <i>gap</i> is the empty String, then\n                <ol class=\"block\">\n                  <li>Let <i>properties</i> be a String formed by concatenating all the element Strings of <i>partial</i> with\n                      each adjacent pair of Strings separated with code unit 0x002C (COMMA). A comma is not inserted either before\n                      the first String or after the last String.</li>\n                  <li>Let <i>final</i> be the result of concatenating <b><code>&quot;{&quot;</code>,</b> <i>properties</i>, and\n                      <code>&quot;}&quot;</code>.</li>\n                </ol>\n              </li>\n              <li>Else <i>gap</i> is not the empty String\n                <ol class=\"block\">\n                  <li>Let <i>separator</i> be the result of concatenating code unit 0x002C (COMMA), code unit 0x000A (LINE FEED),\n                      and <i>indent</i>.</li>\n                  <li>Let <i>properties</i> be a String formed by concatenating all the element Strings of <i>partial</i> with\n                      each adjacent pair of Strings separated with <i>separator</i>. The <i>separator</i> String is not inserted\n                      either before the first String or after the last String.</li>\n                  <li>Let <i>final</i> be the result of concatenating <code>&quot;{&quot;</code>, code unit 0x000A (LINE FEED),\n                      <i>indent</i>, <i>properties</i>, code unit 0x000A, <i>stepback</i>, and <code>&quot;}&quot;</code>.</li>\n                </ol>\n              </li>\n            </ol>\n          </li>\n          <li>Remove the last element of <i>stack</i>.</li>\n          <li>Let <i>indent</i> be <i>stepback</i>.</li>\n          <li>Return <i>final</i>.</li>\n        </ol>\n      "}