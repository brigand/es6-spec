{"id":"sec-setfunctionname","html":"\n      <h1><span class=\"secnum\" id=\"sec-9.2.11\"><a href=\"/sec/sec-setfunctionname.html\" title=\"link to this section\">9.2.11</a></span>\n          SetFunctionName (F, name, prefix)</h1>\n\n      <p class=\"normalbefore\">The abstract operation SetFunctionName requires a Function argument <var>F</var>, a String or Symbol\n      argument <var>name</var> and optionally a String argument <var>prefix</var>. This operation adds a <code>name</code>\n      property to <var>F</var> by performing the following steps:</p>\n\n      <ol class=\"proc\">\n        <li><a href=\"/sec/sec-algorithm-conventions.html\">Assert</a>: <i>F</i> is an extensible object that does not have a\n            <code>name</code> own property.</li>\n        <li><a href=\"/sec/sec-algorithm-conventions.html\">Assert</a>: <a href=\"/sec/sec-ecmascript-data-types-and-values.html\">Type</a>(<i>name</i>)\n            is either Symbol or String.</li>\n        <li><a href=\"/sec/sec-algorithm-conventions.html\">Assert</a>: If <i>prefix</i> was passed then <a href=\"/sec/sec-ecmascript-data-types-and-values.html\">Type</a>(<i>prefix</i>) is String.</li>\n        <li>If <a href=\"/sec/sec-ecmascript-data-types-and-values.html\">Type</a>(<i>name</i>) is Symbol, then\n          <ol class=\"block\">\n            <li>Let <i>description</i> be <i>name</i>&#x2019;s [[Description]] value.</li>\n            <li>If <i>description</i> is <b>undefined</b>, let <i>name</i> be the empty String.</li>\n            <li>Else, let <i>name</i> be the concatenation of <code>&quot;[&quot;</code>, <i>description</i>, and <code>&quot;]&quot;</code>.</li>\n          </ol>\n        </li>\n        <li>If <i>prefix</i> was passed, then\n          <ol class=\"block\">\n            <li>Let <i>name</i> be the concatenation of <i>prefix</i>, code unit 0x0020 (SPACE), and <i>name</i>.</li>\n          </ol>\n        </li>\n        <li>Return <a href=\"/sec/sec-definepropertyorthrow.html\">DefinePropertyOrThrow</a>(<i>F</i>, <code>&quot;name&quot;</code>,\n            PropertyDescriptor{[[Value]]: <i>name</i>, [[Writable]]: <b>false</b>, [[Enumerable]]: <b>false</b>, [[Configurable]]:\n            <b>true</b>}).</li>\n        <li><a href=\"/sec/sec-algorithm-conventions.html\">Assert</a>: the result is never an <a href=\"/sec/sec-completion-record-specification-type.html\">abrupt completion</a>.</li>\n      </ol>\n    "}