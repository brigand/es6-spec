{"id":"sec-speciesconstructor","html":"\n      <h1><span class=\"secnum\" id=\"sec-7.3.20\"><a href=\"/sec/sec-speciesconstructor.html\" title=\"link to this section\">7.3.20</a></span>\n          SpeciesConstructor ( O, defaultConstructor )</h1>\n\n      <p class=\"normalbefore\">The abstract operation SpeciesConstructor is used to retrieve the constructor that should be used to\n      create new objects that are derived from the argument object <var>O</var>. The <var>defaultConstructor</var> argument is the\n      constructor to use if a constructor @@species property cannot be found starting from <var>O</var>. This abstract operation\n      performs the following steps:</p>\n\n      <ol class=\"proc\">\n        <li><a href=\"/sec/sec-algorithm-conventions.html\">Assert</a>: <a href=\"/sec/sec-ecmascript-data-types-and-values.html\">Type</a>(<i>O</i>) is\n            Object.</li>\n        <li>Let <i>C</i> be <a href=\"/sec/sec-get-o-p.html\">Get</a>(<i>O</i>, <code>&quot;constructor&quot;</code>).</li>\n        <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>C</i>).</li>\n        <li>If <i>C</i> is <b>undefined</b>, return <i>defaultConstructor</i>.</li>\n        <li>If <a href=\"/sec/sec-ecmascript-data-types-and-values.html\">Type</a>(<i>C</i>) is not Object, throw a <b>TypeError</b>\n            exception.</li>\n        <li>Let <i>S</i> be <a href=\"/sec/sec-get-o-p.html\">Get</a>(<i>C</i>, @@species).</li>\n        <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>S</i>).</li>\n        <li>If <i>S</i> is either <b>undefined</b> or <b>null</b>, return <i>defaultConstructor</i>.</li>\n        <li>If <a href=\"/sec/sec-isconstructor.html\">IsConstructor</a>(<i>S</i>) is <b>true</b>, return <i>S.</i></li>\n        <li>Throw a <b>TypeError</b> exception.</li>\n      </ol>\n    "}