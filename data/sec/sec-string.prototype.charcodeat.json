{"id":"sec-string.prototype.charcodeat","html":"\n        <h1><span class=\"secnum\" id=\"sec-21.1.3.2\"><a href=\"/sec/sec-string.prototype.charcodeat.html\" title=\"link to this section\">21.1.3.2</a></span> String.prototype.charCodeAt ( pos )</h1>\n\n        <div class=\"note\">\n          <p><span class=\"nh\">NOTE 1</span> Returns a Number (a nonnegative integer less than <span style=\"font-family: Times New\n          Roman\">2<sup>16</sup></span>) that is the code unit value of the string element at index <var>pos</var> in the String\n          resulting from converting this object to a String. If there is no element at that index, the result is <b>NaN</b>.</p>\n        </div>\n\n        <p class=\"normalbefore\">When the <code>charCodeAt</code> method is called with one argument <var>pos</var>, the following\n        steps are taken:</p>\n\n        <ol class=\"proc\">\n          <li>Let <i>O</i> be <a href=\"/sec/sec-requireobjectcoercible.html\">RequireObjectCoercible</a>(<b>this</b> value).</li>\n          <li>Let <i>S</i> be <a href=\"/sec/sec-tostring.html\">ToString</a>(<i>O</i>).</li>\n          <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>S</i>).</li>\n          <li>Let <i>position</i> be <a href=\"/sec/sec-tointeger.html\">ToInteger</a>(<i>pos</i>).</li>\n          <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>position</i>).</li>\n          <li>Let <i>size</i> be the number of elements in <i>S</i>.</li>\n          <li>If <i>position</i> &lt; 0 or <i>position</i> &#x2265; <i>size</i>, return <b>NaN</b>.</li>\n          <li>Return a value of Number type, whose value is the code unit value of the element at index <i>position</i> in the\n              String <i>S</i>.</li>\n        </ol>\n\n        <div class=\"note\">\n          <p><span class=\"nh\">NOTE 2</span> The <code>charCodeAt</code> function is intentionally generic; it does not require\n          that its <b>this</b> value be a String object. Therefore it can be transferred to other kinds of objects for use as a\n          method.</p>\n        </div>\n      "}