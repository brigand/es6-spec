{"id":"sec-string.prototype.match","html":"\n        <h1><span class=\"secnum\" id=\"sec-21.1.3.11\"><a href=\"/sec/sec-string.prototype.match.html\" title=\"link to this section\">21.1.3.11</a></span> String.prototype.match ( regexp )</h1>\n\n        <p class=\"normalbefore\">When the <code>match</code> method is called with argument <var>regexp</var>, the following steps\n        are taken:</p>\n\n        <ol class=\"proc\">\n          <li>Let <i>O</i> be <a href=\"/sec/sec-requireobjectcoercible.html\">RequireObjectCoercible</a>(<b>this</b> value).</li>\n          <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>O</i>).</li>\n          <li>If <i>regexp</i> is neither <b>undefined</b> nor <b>null<i>,</i></b> then\n            <ol class=\"block\">\n              <li>Let <i>matcher</i> be <a href=\"/sec/sec-getmethod.html\">GetMethod</a>(<i>regexp</i>, @@match).</li>\n              <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>matcher</i>).</li>\n              <li>If <i>matcher</i> is not <b>undefined</b>, then\n                <ol class=\"block\">\n                  <li>Return  <a href=\"/sec/sec-call.html\">Call</a>(<i>matcher</i>, <i>regexp</i>, &#xAB;&#x200D;<i>O</i>&#xBB;).</li>\n                </ol>\n              </li>\n            </ol>\n          </li>\n          <li>Let <i>S</i> be <a href=\"/sec/sec-tostring.html\">ToString</a>(<i>O</i>).</li>\n          <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>S</i>).</li>\n          <li>Let <i>rx</i> be <a href=\"/sec/sec-regexpcreate.html\">RegExpCreate</a>(<i>regexp</i>, <b>undefined</b>) (<a href=\"/sec/sec-regexpcreate.html\">see 21.2.3.2.3</a>).</li>\n          <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>rx</i>).</li>\n          <li>Return <a href=\"/sec/sec-invoke.html\">Invoke</a>(<i>rx</i>, @@match, &#xAB;&#x200D;<i>S</i>&#xBB;).</li>\n        </ol>\n\n        <div class=\"note\">\n          <p><span class=\"nh\">NOTE</span> The <code>match</code> function is intentionally generic; it does not require that its\n          <b>this</b> value be a String object. Therefore, it can be transferred to other kinds of objects for use as a\n          method.</p>\n        </div>\n      "}