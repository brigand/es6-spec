{"id":"sec-string.prototype.replace","html":"\n        <div class=\"front\">\n          <h1><span class=\"secnum\" id=\"sec-21.1.3.14\"><a href=\"/sec/sec-string.prototype.replace.html\" title=\"link to this section\">21.1.3.14</a></span> String.prototype.replace (searchValue, replaceValue )</h1>\n\n          <p class=\"normalbefore\">When the <code>replace</code> method is called with arguments <var>searchValue</var> and\n          <var>replaceValue</var> the following steps are taken:</p>\n\n          <ol class=\"proc\">\n            <li>Let <i>O</i> be <a href=\"/sec/sec-requireobjectcoercible.html\">RequireObjectCoercible</a>(<b>this</b> value).</li>\n            <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>O</i>).</li>\n            <li>If <i>searchValue</i> is neither <b>undefined</b> nor <b>null<i>,</i></b> then\n              <ol class=\"block\">\n                <li>Let <i>replacer</i> be <a href=\"/sec/sec-getmethod.html\">GetMethod</a>(<i>searchValue</i>, @@replace).</li>\n                <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>replacer</i>).</li>\n                <li>If <i>replacer</i> is not <b>undefined</b>, then\n                  <ol class=\"block\">\n                    <li>Return <a href=\"/sec/sec-call.html\">Call</a>(<i>replacer</i>, <i>searchValue</i>, &#xAB;<i>O</i>,\n                        <i>replaceValue</i>&#xBB;).</li>\n                  </ol>\n                </li>\n              </ol>\n            </li>\n            <li>Let <i>string</i> be <a href=\"/sec/sec-tostring.html\">ToString</a>(<i>O</i>).</li>\n            <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>string</i>).</li>\n            <li>Let <i>searchString</i> be <a href=\"/sec/sec-tostring.html\">ToString</a>(<i>searchValue</i>).</li>\n            <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>searchString</i>).</li>\n            <li>Let <i>functionalReplace</i> be <a href=\"/sec/sec-iscallable.html\">IsCallable</a>(<i>replaceValue</i>).</li>\n            <li>If <i>functionalReplace</i> is <b>false</b>, then\n              <ol class=\"block\">\n                <li>Let <i>replaceValue</i> be <a href=\"/sec/sec-tostring.html\">ToString</a>(<i>replaceValue</i>).</li>\n                <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>replaceValue</i>).</li>\n              </ol>\n            </li>\n            <li>Search <i>string</i> for the first occurrence of <i>searchString</i> and let <i>pos</i> be the index within\n                <i>string</i> of the first code unit of the matched substring and let <i>matched</i> be <i>searchString</i>. If no\n                occurrences of <i>searchString</i> were found, return <i>string</i>.</li>\n            <li>If <i>functionalReplace</i> is <b>true</b>, then\n              <ol class=\"block\">\n                <li>Let <i>replValue</i> be <a href=\"/sec/sec-call.html\">Call</a>(<i>replaceValue</i>,\n                    <b>undefined</b>,&#xAB;<i>matched</i>, <i>pos</i>, and <i>string</i>&#xBB;).</li>\n                <li>Let <i>replStr</i> be <a href=\"/sec/sec-tostring.html\">ToString</a>(<i>replValue</i>).</li>\n                <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>replStr</i>).</li>\n              </ol>\n            </li>\n            <li>Else,\n              <ol class=\"block\">\n                <li>Let <i>captures</i> be an empty <a href=\"/sec/sec-list-and-record-specification-type.html\">List</a>.</li>\n                <li>Let <i>replStr</i> be <a href=\"/sec/sec-getsubstitution.html\">GetSubstitution</a>(<i>matched</i>, <i>string</i>,\n                    <i>pos</i>, <i>captures</i>, <i>replaceValue</i>).</li>\n              </ol>\n            </li>\n            <li>Let <i>tailPos</i> be <i>pos</i> + the number of code units in <i>matched</i>.</li>\n            <li>Let <i>newString</i> be the String formed by concatenating the first <i>pos</i> code units of <i>string</i>,\n                <i>replStr</i>, and the trailing substring of <i>string</i> starting at index <i>tailPos</i>. If <i>pos</i> is 0,\n                the first element of the concatenation will be the empty String.</li>\n            <li>Return  <i>newString</i>.</li>\n          </ol>\n\n          <div class=\"note\">\n            <p><span class=\"nh\">NOTE</span> The <code>replace</code> function is intentionally generic; it does not require that\n            its <b>this</b> value be a String object. Therefore, it can be transferred to other kinds of objects for use as a\n            method.</p>\n          </div>\n        </div>\n\n        <section id=\"sec-getsubstitution\">\n          <h1><span class=\"secnum\" id=\"sec-21.1.3.14.1\"><a href=\"/sec/sec-getsubstitution.html\" title=\"link to this section\">21.1.3.14.1</a></span> Runtime Semantics: GetSubstitution(matched, str, position,\n              captures, replacement)</h1>\n\n          <p class=\"normalbefore\">The abstract operation GetSubstitution performs the following steps:</p>\n\n          <ol class=\"proc\">\n            <li><a href=\"/sec/sec-algorithm-conventions.html\">Assert</a>: <a href=\"/sec/sec-ecmascript-data-types-and-values.html\">Type</a>(<i>matched</i>) is String.</li>\n            <li>Let <i>matchLength</i> be the number of code units in <i>matched</i>.</li>\n            <li><a href=\"/sec/sec-algorithm-conventions.html\">Assert</a>: <a href=\"/sec/sec-ecmascript-data-types-and-values.html\">Type</a>(<i>str</i>) is String.</li>\n            <li>Let <i>stringLength</i> be the number of code units in <i>str</i>.</li>\n            <li><a href=\"/sec/sec-algorithm-conventions.html\">Assert</a>: <i>position</i> is a nonnegative integer.</li>\n            <li><a href=\"/sec/sec-algorithm-conventions.html\">Assert</a>: <i>position</i> &#x2264; <i>stringLength</i>.</li>\n            <li><a href=\"/sec/sec-algorithm-conventions.html\">Assert</a>: <i>captures</i> is a possibly empty <a href=\"/sec/sec-list-and-record-specification-type.html\">List</a> of Strings.</li>\n            <li><a href=\"/sec/sec-algorithm-conventions.html\">Assert</a>: <a href=\"/sec/sec-ecmascript-data-types-and-values.html\">Type</a>(\n                <i>replacement</i>) is String</li>\n            <li>Let <i>tailPos</i> be <i>position</i> + <i>matchLength</i>.</li>\n            <li>Let <i>m</i> be the number of elements in <i>captures</i>.</li>\n            <li>Let <i>result</i> be a String value derived from <i>replacement</i> by copying code unit elements from\n                <i>replacement</i> to <i>result</i> while performing replacements as specified in <a href=\"/sec/table-45.html\">Table\n                45</a>. These <code>$</code> replacements are done left-to-right, and, once such a replacement is performed, the\n                new replacement text is not subject to further replacements.</li>\n            <li>Return <i>result</i>.</li>\n          </ol>\n\n          <figure>\n            <figcaption><span id=\"table-45\">Table 45</span> &#x2014; Replacement Text Symbol Substitutions</figcaption>\n            <table class=\"real-table\">\n              <tr>\n                <th>Code units</th>\n                <th>Unicode Characters</th>\n                <th>Replacement text</th>\n              </tr>\n              <tr>\n                <td>0x0024, 0x0024</td>\n                <td><code>$$</code></td>\n                <td><code>$</code></td>\n              </tr>\n              <tr>\n                <td>0x0024, 0x0026</td>\n                <td><code>$&amp;</code></td>\n                <td><i>matched</i></td>\n              </tr>\n              <tr>\n                <td>0x0024, 0x0060</td>\n                <td><code>$`</code></td>\n                <td>If <i>position</i> is 0, the replacement is the empty String. Otherwise  the replacement is the substring of <i>str</i> that starts at index 0 and whose last code unit is at index <i>position</i> -1.</td>\n              </tr>\n              <tr>\n                <td>0x0024, 0x0027</td>\n                <td><code>$&apos;</code></td>\n                <td>If <i>tailPos</i> &#x2265; <i>stringLength</i>, the replacement is the empty String. Otherwise  the replacement is the substring of <i>str</i> that starts at index <i>tailPos</i> and continues to the end of <i>str</i>.</td>\n              </tr>\n              <tr>\n                <td>0x0024, N<br>Where<br>0x0031 &#x2264; N &#x2264; 0x0039</td>\n                <td><code>$n</code> <span style=\"font-family: Times New Roman\">where</span> <code><br>n</code> <span style=\"font-family: Times New Roman\">is one of</span> <code>1 2 3 4 5 6 7 8 9</code> <span style=\"font-family: Times New Roman\">and</span> <code>$n</code> <span style=\"font-family: Times New Roman\">is not followed by a decimal digit</span></td>\n                <td>The <i>n</i><sup>th</sup> element of <i>captures</i>, where <i>n</i> is a single digit in the range 1 to 9. If <i>n</i>&#x2264;<i>m</i> and the <i>n</i><sup>th</sup> element of <i>captures</i> is <b>undefined</b>, use the empty String instead. If <i>n</i>&gt;<i>m</i>, the result is implementation-defined.</td>\n              </tr>\n              <tr>\n                <td>0x0024, N, N<br>Where<br>0x0030 &#x2264; N &#x2264; 0x0039</td>\n                <td><code>$nn</code> <span style=\"font-family: Times New Roman\">where</span> <code><br>n</code> <span style=\"font-family: Times New Roman\">is one of</span> <code>0 1 2 3 4 5 6 7 8 9</code></td>\n                <td>The <i>nn</i><sup>th</sup> element of <i>captures</i>, where <i>nn</i> is a two-digit decimal number in the range 01 to 99. If <i>nn</i>&#x2264;<i>m</i> and the <i>nn</i><sup>th</sup> element of <i>captures</i> is <b>undefined</b>, use the empty String instead. If <i>nn</i> is 00 or <i>nn</i>&gt;<i>m</i>, the result is implementation-defined.</td>\n              </tr>\n              <tr>\n                <td>0x0024</td>\n                <td><code>$</code> <span style=\"font-family: Times New Roman\">in any context that does not match any of the above.</span></td>\n                <td><code>$</code></td>\n              </tr>\n            </table>\n          </figure>\n        </section>\n      "}