{"id":"sec-string.prototype.substr","html":"\n        <h1><span class=\"secnum\" id=\"sec-B.2.3.1\"><a href=\"/sec/sec-string.prototype.substr.html\" title=\"link to this section\">B.2.3.1</a></span> String.prototype.substr (start, length)</h1>\n\n        <p class=\"normalbefore\">The <code>substr</code> method takes two arguments, <var>start</var> and <var>length</var>, and\n        returns a substring of the result of converting the <b>this</b> object to a String, starting from index <var>start</var>\n        and running for <var>length</var> code units (or through the end of the String if <var>length</var> is <b>undefined</b>).\n        If <var>start</var> is negative, it is treated as <span style=\"font-family: Times New\n        Roman\">(<i>sourceLength</i>+<i>start</i>)</span> where <var>sourceLength</var> is the length of the String. The result is\n        a String value, not a String object. The following steps are taken:</p>\n\n        <ol class=\"proc\">\n          <li>Let <i>O</i> be <a href=\"/sec/sec-requireobjectcoercible.html\">RequireObjectCoercible</a>(<b>this</b> value).</li>\n          <li>Let <i>S</i> be <a href=\"/sec/sec-tostring.html\">ToString</a>(<i>O</i>).</li>\n          <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>S</i>).</li>\n          <li>Let <i>intStart</i> be <a href=\"/sec/sec-tointeger.html\">ToInteger</a>(<i>start</i>).</li>\n          <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>intStart</i>).</li>\n          <li>If <i>length</i> is <b>undefined</b>, let <i>end</i> be <b>+&#x221E;</b>; otherwise let <i>end</i> be <a href=\"/sec/sec-tointeger.html\">ToInteger</a>(<i>length</i>).</li>\n          <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>end</i>).</li>\n          <li>Let <i>size</i> be the number of code units in <i>S</i>.</li>\n          <li>If <i>intStart</i> &lt; 0, let <i>intStart</i> be max(<i>size</i> + <i>intStart</i>,0).</li>\n          <li>Let <i>resultLength</i> be min(max(<i>end</i>,0), <i>size</i> &#x2013; <i>intStart</i>).</li>\n          <li>If <i>resultLength</i> &#x2264; 0, return the empty String <code>&quot;&quot;</code>.</li>\n          <li>Return a String containing <i>resultLength</i> consecutive code units from <i>S</i> beginning with the code unit at\n              index <i>intStart</i>.</li>\n        </ol>\n\n        <p>The <code>length</code> property of the <code>substr</code> method is <b>2</b>.</p>\n\n        <div class=\"note\">\n          <p><span class=\"nh\">NOTE</span> The <code>substr</code> function is intentionally generic; it does not require that its\n          <b>this</b> value be a String object. Therefore it can be transferred to other kinds of objects for use as a method.</p>\n        </div>\n      "}