{"id":"sec-string.prototype.substring","html":"\n        <h1><span class=\"secnum\" id=\"sec-21.1.3.19\"><a href=\"/sec/sec-string.prototype.substring.html\" title=\"link to this section\">21.1.3.19</a></span> String.prototype.substring ( start, end )</h1>\n\n        <p>The <b>substring</b> method takes two arguments, <var>start</var> and <var>end</var>, and returns a substring of the\n        result of converting this object to a String, starting from index <var>start</var> and running to, but not including,\n        index <var>end</var> of the String (or through the end of the String is <var>end</var> is <b>undefined</b>). The result is\n        a String value, not a String object.</p>\n\n        <p>If either argument is <b>NaN</b> or negative, it is replaced with zero; if either argument is larger than the length of\n        the String, it is replaced with the length of the String.</p>\n\n        <p>If <var>start</var> is larger than <var>end</var>, they are swapped.</p>\n\n        <p class=\"normalbefore\">The following steps are taken:</p>\n\n        <ol class=\"proc\">\n          <li>Let <i>O</i> be <a href=\"/sec/sec-requireobjectcoercible.html\">RequireObjectCoercible</a>(<b>this</b> value).</li>\n          <li>Let <i>S</i> be <a href=\"/sec/sec-tostring.html\">ToString</a>(<i>O</i>).</li>\n          <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>S</i>).</li>\n          <li>Let <i>len</i> be the number of elements in <i>S</i>.</li>\n          <li>Let <i>intStart</i> be <a href=\"/sec/sec-tointeger.html\">ToInteger</a>(<i>start</i>).</li>\n          <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>intStart</i>).</li>\n          <li>If <i>end</i> is <b>undefined</b>, let <i>intEnd</i> be <i>len</i>; else let <i>intEnd</i> be <a href=\"/sec/sec-tointeger.html\">ToInteger</a>(<i>end</i>).</li>\n          <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>intEnd</i>).</li>\n          <li>Let <i>finalStart</i> be min(max(<i>intStart</i>, 0), <i>len</i>).</li>\n          <li>Let <i>finalEnd</i> be min(max(<i>intEnd</i>, 0), <i>len</i>).</li>\n          <li>Let <i>from</i> be min(<i>finalStart</i>, <i>finalEnd</i>).</li>\n          <li>Let <i>to</i> be max(<i>finalStart</i>, <i>finalEnd</i>).</li>\n          <li>Return a String whose length is <i>to</i> - <i>from</i>, containing code units from <i>S</i>, namely the code units\n              with indices <i>from</i> through <i>to</i> &#x2212;1, in ascending order.</li>\n        </ol>\n\n        <p>The <code>length</code> property of the <code>substring</code> method is <b>2</b>.</p>\n\n        <div class=\"note\">\n          <p><span class=\"nh\">NOTE</span> The <code>substring</code> function is intentionally generic; it does not require that\n          its <b>this</b> value be a String object. Therefore, it can be transferred to other kinds of objects for use as a\n          method.</p>\n        </div>\n      "}