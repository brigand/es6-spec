{"id":"sec-symbol-objects","html":"\n    <div class=\"front\">\n      <h1><span class=\"secnum\" id=\"sec-19.4\"><a href=\"/sec/sec-symbol-objects.html\" title=\"link to this section\">19.4</a></span> Symbol\n          Objects</h1>\n    </div>\n\n    <section id=\"sec-symbol-constructor\">\n      <div class=\"front\">\n        <h1><span class=\"secnum\" id=\"sec-19.4.1\"><a href=\"/sec/sec-symbol-constructor.html\" title=\"link to this section\">19.4.1</a></span>\n            The Symbol Constructor</h1>\n\n        <p>The Symbol constructor is the %Symbol% intrinsic object and the initial value of the <code>Symbol</code> property of\n        the global object. When <code>Symbol</code> is called as a function, it returns a new Symbol value.</p>\n\n        <p>The <code>Symbol</code> constructor is not intended to be used with the <code>new</code> operator or to be subclassed.\n        It may be used as the value of an <code>extends</code> clause of a class definition but a <code>super</code> call to the\n        <code>Symbol</code> constructor will cause an exception.</p>\n      </div>\n\n      <section id=\"sec-symbol-description\">\n        <h1><span class=\"secnum\" id=\"sec-19.4.1.1\"><a href=\"/sec/sec-symbol-description.html\" title=\"link to this section\">19.4.1.1</a></span> Symbol ( [ description ] )</h1>\n\n        <p class=\"normalbefore\">When <code>Symbol</code> is called with optional argument <var>description</var>, the following\n        steps are taken:</p>\n\n        <ol class=\"proc\">\n          <li>If NewTarget is not <b>undefined</b><i>,</i> throw a <b>TypeError</b> exception.</li>\n          <li>If <i>description</i> is <b>undefined</b>, let <i>descString</i> be <b>undefined</b>.</li>\n          <li>Else, let <i>descString</i> be <a href=\"/sec/sec-tostring.html\">ToString</a>(<i>description</i>).</li>\n          <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>descString</i>).</li>\n          <li>Return a new unique Symbol value whose [[Description]] value is <i>descString</i>.</li>\n        </ol>\n      </section>\n    </section>\n\n    <section id=\"sec-properties-of-the-symbol-constructor\">\n      <div class=\"front\">\n        <h1><span class=\"secnum\" id=\"sec-19.4.2\"><a href=\"/sec/sec-properties-of-the-symbol-constructor.html\" title=\"link to this section\">19.4.2</a></span> Properties of the Symbol Constructor</h1>\n\n        <p>The value of the [[Prototype]] <a href=\"/sec/sec-object-internal-methods-and-internal-slots.html\">internal slot</a> of the\n        Symbol constructor is the intrinsic object %FunctionPrototype% (<a href=\"/sec/sec-properties-of-the-function-prototype-object.html\">19.2.3</a>).</p>\n\n        <p class=\"normalbefore\">Besides the <code>length</code> property (whose value is <b>0</b>), the Symbol constructor has the\n        following properties:</p>\n      </div>\n\n      <section id=\"sec-symbol.for\">\n        <h1><span class=\"secnum\" id=\"sec-19.4.2.1\"><a href=\"/sec/sec-symbol.for.html\" title=\"link to this section\">19.4.2.1</a></span>\n            Symbol.for ( key )</h1>\n\n        <p class=\"normalbefore\">When <code>Symbol.for</code> is called with argument <var>key</var> it performs the following\n        steps:</p>\n\n        <ol class=\"proc\">\n          <li>Let <i>stringKey</i> be <a href=\"/sec/sec-tostring.html\">ToString</a>(<i>key</i>).</li>\n          <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>stringKey</i>).</li>\n          <li>For each element <i>e</i> of the GlobalSymbolRegistry <a href=\"/sec/sec-list-and-record-specification-type.html\">List</a>,\n            <ol class=\"block\">\n              <li>If <a href=\"/sec/sec-samevalue.html\">SameValue</a>(<i>e</i>.[[key]], <i>stringKey</i>) is <b>true</b>, return\n                  <i>e</i>.[[symbol]].</li>\n            </ol>\n          </li>\n          <li><a href=\"/sec/sec-algorithm-conventions.html\">Assert</a>: GlobalSymbolRegistry does not currently contain an entry for\n              <i>stringKey</i>.</li>\n          <li>Let <i>newSymbol</i> be a new unique Symbol value whose [[Description]] value is <i>stringKey</i>.</li>\n          <li>Append the record { [[key]]: <i>stringKey</i>, [[symbol]]: <i>newSymbol</i> } to the GlobalSymbolRegistry <a href=\"/sec/sec-list-and-record-specification-type.html\">List</a>.</li>\n          <li>Return <i>newSymbol</i>.</li>\n        </ol>\n\n        <p>The GlobalSymbolRegistry is a <a href=\"/sec/sec-list-and-record-specification-type.html\">List</a> that is globally available. It\n        is shared by all Code Realms. Prior to the evaluation of any ECMAScript code it is initialized as an empty <a href=\"/sec/sec-list-and-record-specification-type.html\">List</a>. Elements of the GlobalSymbolRegistry are Records with the\n        structure defined in <a href=\"/sec/table-44.html\">Table 44</a>.</p>\n\n        <figure>\n          <figcaption><span id=\"table-44\">Table 44</span> &#x2014; GlobalSymbolRegistry Record Fields</figcaption>\n          <table class=\"real-table\">\n            <tr>\n              <th>Field Name</th>\n              <th>Value</th>\n              <th>Usage</th>\n            </tr>\n            <tr>\n              <td>[[key]]</td>\n              <td>A String</td>\n              <td>A string key used to globally identify a Symbol.</td>\n            </tr>\n            <tr>\n              <td>[[symbol]]</td>\n              <td>A Symbol</td>\n              <td>A symbol that can be retrieved from any <a href=\"/sec/sec-code-realms.html\">Realm</a>.</td>\n            </tr>\n          </table>\n        </figure>\n      </section>\n\n      <section id=\"sec-symbol.hasinstance\">\n        <h1><span class=\"secnum\" id=\"sec-19.4.2.2\"><a href=\"/sec/sec-symbol.hasinstance.html\" title=\"link to this section\">19.4.2.2</a></span> Symbol.hasInstance</h1>\n\n        <p>The initial value of <code>Symbol.hasInstance</code> is the well known symbol @@hasInstance (<a href=\"/sec/table-1.html\">Table\n        1</a>).</p>\n\n        <p>This property has the attributes { [[Writable]]: <b>false</b>, [[Enumerable]]: <b>false</b>, [[Configurable]]:\n        <b>false</b> }.</p>\n      </section>\n\n      <section id=\"sec-symbol.isconcatspreadable\">\n        <h1><span class=\"secnum\" id=\"sec-19.4.2.3\"><a href=\"/sec/sec-symbol.isconcatspreadable.html\" title=\"link to this section\">19.4.2.3</a></span> Symbol.isConcatSpreadable</h1>\n\n        <p>The initial value of <code>Symbol.isConcatSpreadable</code> is the well known symbol @@isConcatSpreadable (<a href=\"/sec/table-1.html\">Table 1</a>).</p>\n\n        <p>This property has the attributes { [[Writable]]: <b>false</b>, [[Enumerable]]: <b>false</b>, [[Configurable]]:\n        <b>false</b> }.</p>\n      </section>\n\n      <section id=\"sec-symbol.iterator\">\n        <h1><span class=\"secnum\" id=\"sec-19.4.2.4\"><a href=\"/sec/sec-symbol.iterator.html\" title=\"link to this section\">19.4.2.4</a></span>\n            Symbol.iterator</h1>\n\n        <p>The initial value of <code>Symbol.iterator</code> is the well known symbol @@iterator (<a href=\"/sec/table-1.html\">Table\n        1</a>).</p>\n\n        <p>This property has the attributes { [[Writable]]: <b>false</b>, [[Enumerable]]: <b>false</b>, [[Configurable]]:\n        <b>false</b> }.</p>\n      </section>\n\n      <section id=\"sec-symbol.keyfor\">\n        <h1><span class=\"secnum\" id=\"sec-19.4.2.5\"><a href=\"/sec/sec-symbol.keyfor.html\" title=\"link to this section\">19.4.2.5</a></span>\n            Symbol.keyFor ( sym )</h1>\n\n        <p class=\"normalbefore\">When <code>Symbol.keyFor</code> is called with argument <var>sym</var> it performs the following\n        steps:</p>\n\n        <ol class=\"proc\">\n          <li>If <a href=\"/sec/sec-ecmascript-data-types-and-values.html\">Type</a>(<i>sym</i>) is not Symbol, throw a <b>TypeError</b>\n              exception.</li>\n          <li>For each element <i>e</i> of the GlobalSymbolRegistry <a href=\"/sec/sec-list-and-record-specification-type.html\">List</a> (<a href=\"/sec/sec-symbol.for.html\">see 19.4.2.1</a>),\n            <ol class=\"block\">\n              <li>If <a href=\"/sec/sec-samevalue.html\">SameValue</a>(<i>e</i>.[[symbol]], <i>sym</i>) is <b>true</b>, return\n                  <i>e</i>.[[key]].</li>\n            </ol>\n          </li>\n          <li><a href=\"/sec/sec-algorithm-conventions.html\">Assert</a>: GlobalSymbolRegistry does not currently contain an entry for\n              <i>sym</i>.</li>\n          <li>Return <b>undefined</b>.</li>\n        </ol>\n      </section>\n\n      <section id=\"sec-symbol.match\">\n        <h1><span class=\"secnum\" id=\"sec-19.4.2.6\"><a href=\"/sec/sec-symbol.match.html\" title=\"link to this section\">19.4.2.6</a></span>\n            Symbol.match</h1>\n\n        <p>The initial value of <code>Symbol.match</code> is the well known symbol @@match (<a href=\"/sec/table-1.html\">Table 1</a>).</p>\n\n        <p>This property has the attributes { [[Writable]]: <b>false</b>, [[Enumerable]]: <b>false</b>, [[Configurable]]:\n        <b>false</b> }.</p>\n      </section>\n\n      <section id=\"sec-symbol.prototype\">\n        <h1><span class=\"secnum\" id=\"sec-19.4.2.7\"><a href=\"/sec/sec-symbol.prototype.html\" title=\"link to this section\">19.4.2.7</a></span> Symbol.prototype</h1>\n\n        <p>The initial value of <code>Symbol.prototype</code> is the intrinsic object %SymbolPrototype% (<a href=\"/sec/sec-properties-of-the-symbol-prototype-object.html\">19.4.3</a>).</p>\n\n        <p>This property has the attributes { [[Writable]]: <b>false</b>, [[Enumerable]]: <b>false</b>, [[Configurable]]:\n        <b>false</b> }.</p>\n      </section>\n\n      <section id=\"sec-symbol.replace\">\n        <h1><span class=\"secnum\" id=\"sec-19.4.2.8\"><a href=\"/sec/sec-symbol.replace.html\" title=\"link to this section\">19.4.2.8</a></span>\n            Symbol.replace</h1>\n\n        <p>The initial value of <code>Symbol.replace</code> is the well known symbol @@replace (<a href=\"/sec/table-1.html\">Table\n        1</a>).</p>\n\n        <p>This property has the attributes { [[Writable]]: <b>false</b>, [[Enumerable]]: <b>false</b>, [[Configurable]]:\n        <b>false</b> }.</p>\n      </section>\n\n      <section id=\"sec-symbol.search\">\n        <h1><span class=\"secnum\" id=\"sec-19.4.2.9\"><a href=\"/sec/sec-symbol.search.html\" title=\"link to this section\">19.4.2.9</a></span>\n            Symbol.search</h1>\n\n        <p>The initial value of <code>Symbol.search</code> is the well known symbol @@search (<a href=\"/sec/table-1.html\">Table 1</a>).</p>\n\n        <p>This property has the attributes { [[Writable]]: <b>false</b>, [[Enumerable]]: <b>false</b>, [[Configurable]]:\n        <b>false</b> }.</p>\n      </section>\n\n      <section id=\"sec-symbol.species\">\n        <h1><span class=\"secnum\" id=\"sec-19.4.2.10\"><a href=\"/sec/sec-symbol.species.html\" title=\"link to this section\">19.4.2.10</a></span> Symbol.species</h1>\n\n        <p>The initial value of <code>Symbol.species</code> is the well known symbol @@species (<a href=\"/sec/table-1.html\">Table\n        1</a>).</p>\n\n        <p>This property has the attributes { [[Writable]]: <b>false</b>, [[Enumerable]]: <b>false</b>, [[Configurable]]:\n        <b>false</b> }.</p>\n      </section>\n\n      <section id=\"sec-symbol.split\">\n        <h1><span class=\"secnum\" id=\"sec-19.4.2.11\"><a href=\"/sec/sec-symbol.split.html\" title=\"link to this section\">19.4.2.11</a></span>\n            Symbol.split</h1>\n\n        <p>The initial value of <code>Symbol.split</code> is the well known symbol @@split (<a href=\"/sec/table-1.html\">Table 1</a>).</p>\n\n        <p>This property has the attributes { [[Writable]]: <b>false</b>, [[Enumerable]]: <b>false</b>, [[Configurable]]:\n        <b>false</b> }.</p>\n      </section>\n\n      <section id=\"sec-symbol.toprimitive\">\n        <h1><span class=\"secnum\" id=\"sec-19.4.2.12\"><a href=\"/sec/sec-symbol.toprimitive.html\" title=\"link to this section\">19.4.2.12</a></span> Symbol.toPrimitive</h1>\n\n        <p>The initial value of <code>Symbol.toPrimitive</code> is the well known symbol @@toPrimitive (<a href=\"/sec/table-1.html\">Table\n        1</a>).</p>\n\n        <p>This property has the attributes { [[Writable]]: <b>false</b>, [[Enumerable]]: <b>false</b>, [[Configurable]]:\n        <b>false</b> }.</p>\n      </section>\n\n      <section id=\"sec-symbol.tostringtag\">\n        <h1><span class=\"secnum\" id=\"sec-19.4.2.13\"><a href=\"/sec/sec-symbol.tostringtag.html\" title=\"link to this section\">19.4.2.13</a></span> Symbol.toStringTag</h1>\n\n        <p>The initial value of <code>Symbol.toStringTag</code> is the well known symbol @@toStringTag (<a href=\"/sec/table-1.html\">Table\n        1</a>).</p>\n\n        <p>This property has the attributes { [[Writable]]: <b>false</b>, [[Enumerable]]: <b>false</b>, [[Configurable]]:\n        <b>false</b> }.</p>\n      </section>\n\n      <section id=\"sec-symbol.unscopables\">\n        <h1><span class=\"secnum\" id=\"sec-19.4.2.14\"><a href=\"/sec/sec-symbol.unscopables.html\" title=\"link to this section\">19.4.2.14</a></span> Symbol.unscopables</h1>\n\n        <p>The initial value of <code>Symbol.unscopables</code> is the well known symbol @@unscopables (<a href=\"/sec/table-1.html\">Table\n        1</a>).</p>\n\n        <p>This property has the attributes { [[Writable]]: <b>false</b>, [[Enumerable]]: <b>false</b>, [[Configurable]]:\n        <b>false</b> }.</p>\n      </section>\n    </section>\n\n    <section id=\"sec-properties-of-the-symbol-prototype-object\">\n      <div class=\"front\">\n        <h1><span class=\"secnum\" id=\"sec-19.4.3\"><a href=\"/sec/sec-properties-of-the-symbol-prototype-object.html\" title=\"link to this section\">19.4.3</a></span> Properties of the Symbol Prototype Object</h1>\n\n        <p>The Symbol prototype object is the intrinsic object %SymbolPrototype%. The Symbol prototype object is an ordinary\n        object. It is not a Symbol instance and does not have a [[SymbolData]] <a href=\"/sec/sec-object-internal-methods-and-internal-slots.html\">internal slot</a>.</p>\n\n        <p>The value of the [[Prototype]] <a href=\"/sec/sec-object-internal-methods-and-internal-slots.html\">internal slot</a> of the\n        Symbol prototype object is the intrinsic object %ObjectPrototype% (<a href=\"/sec/sec-properties-of-the-object-prototype-object.html\">19.1.3</a>).</p>\n      </div>\n\n      <section id=\"sec-symbol.prototype.constructor\">\n        <h1><span class=\"secnum\" id=\"sec-19.4.3.1\"><a href=\"/sec/sec-symbol.prototype.constructor.html\" title=\"link to this section\">19.4.3.1</a></span> Symbol.prototype.constructor</h1>\n\n        <p>The initial value of <code>Symbol.prototype.constructor</code> is the intrinsic object %Symbol%.</p>\n      </section>\n\n      <section id=\"sec-symbol.prototype.tostring\">\n        <div class=\"front\">\n          <h1><span class=\"secnum\" id=\"sec-19.4.3.2\"><a href=\"/sec/sec-symbol.prototype.tostring.html\" title=\"link to this section\">19.4.3.2</a></span> Symbol.prototype.toString ( )</h1>\n\n          <p class=\"normalbefore\">The following steps are taken:</p>\n\n          <ol class=\"proc\">\n            <li>Let <i>s</i> be the <b>this</b> value.</li>\n            <li>If <a href=\"/sec/sec-ecmascript-data-types-and-values.html\">Type</a>(<i>s</i>) is Symbol, let <i>sym</i> be <i>s</i>.</li>\n            <li>Else,\n              <ol class=\"block\">\n                <li>If <a href=\"/sec/sec-ecmascript-data-types-and-values.html\">Type</a>(<i>s</i>) is not Object, throw a <b>TypeError</b>\n                    exception.</li>\n                <li>If <i>s</i> does not have a [[SymbolData]] <a href=\"/sec/sec-object-internal-methods-and-internal-slots.html\">internal\n                    slot</a>, throw a <b>TypeError</b> exception.</li>\n                <li>Let <i>sym</i> be the value of <i>s&#x2019;s</i> [[SymbolData]] <a href=\"/sec/sec-object-internal-methods-and-internal-slots.html\">internal slot</a>.</li>\n              </ol>\n            </li>\n            <li>Return <a href=\"/sec/sec-symboldescriptivestring.html\">SymbolDescriptiveString</a>(<i>sym</i>).</li>\n          </ol>\n        </div>\n\n        <section id=\"sec-symboldescriptivestring\">\n          <h1><span class=\"secnum\" id=\"sec-19.4.3.2.1\"><a href=\"/sec/sec-symboldescriptivestring.html\" title=\"link to this section\">19.4.3.2.1</a></span> Runtime Semantics:  SymbolDescriptiveString ( sym )</h1>\n\n          <p class=\"normalbefore\">When the abstract operation SymbolDescriptiveString is called with argument <var>sym</var>, the\n          following steps are taken:</p>\n\n          <ol class=\"proc\">\n            <li><a href=\"/sec/sec-algorithm-conventions.html\">Assert</a>: <a href=\"/sec/sec-ecmascript-data-types-and-values.html\">Type</a>(<i>sym</i>) is Symbol.</li>\n            <li>Let <i>desc</i> be <i>sym&#x2019;s</i> [[Description]] value.</li>\n            <li>If <i>desc</i> is <b>undefined</b>, let <i>desc</i> be the empty string.</li>\n            <li><a href=\"/sec/sec-algorithm-conventions.html\">Assert</a>:  <a href=\"/sec/sec-ecmascript-data-types-and-values.html\">Type</a>(<i>desc</i>) is String.</li>\n            <li>Return the result of concatenating the strings <code>&quot;Symbol(&quot;</code>, <i>desc</i>, and <code>&quot;)&quot;</code>.</li>\n          </ol>\n        </section>\n      </section>\n\n      <section id=\"sec-symbol.prototype.valueof\">\n        <h1><span class=\"secnum\" id=\"sec-19.4.3.3\"><a href=\"/sec/sec-symbol.prototype.valueof.html\" title=\"link to this section\">19.4.3.3</a></span> Symbol.prototype.valueOf ( )</h1>\n\n        <p class=\"normalbefore\">The following steps are taken:</p>\n\n        <ol class=\"proc\">\n          <li>Let <i>s</i> be the <b>this</b> value.</li>\n          <li>If <a href=\"/sec/sec-ecmascript-data-types-and-values.html\">Type</a>(<i>s</i>) is Symbol, return <i>s</i>.</li>\n          <li>If <a href=\"/sec/sec-ecmascript-data-types-and-values.html\">Type</a>(<i>s</i>) is not Object, throw a <b>TypeError</b>\n              exception.</li>\n          <li>If <i>s</i> does not have a [[SymbolData]] <a href=\"/sec/sec-object-internal-methods-and-internal-slots.html\">internal\n              slot</a>, throw a <b>TypeError</b> exception.</li>\n          <li>Return the value of <i>s&#x2019;s</i> [[SymbolData]] <a href=\"/sec/sec-object-internal-methods-and-internal-slots.html\">internal slot</a>.</li>\n        </ol>\n      </section>\n\n      <section id=\"sec-symbol.prototype-@@toprimitive\">\n        <h1><span class=\"secnum\" id=\"sec-19.4.3.4\"><a href=\"/sec/sec-symbol.prototype-@@toprimitive.html\" title=\"link to this section\">19.4.3.4</a></span> Symbol.prototype [ @@toPrimitive ] ( hint )</h1>\n\n        <p>This function is called by ECMAScript language operators to convert a Symbol object to a primitive value. The allowed\n        values for <var>hint</var> are <code>&quot;default&quot;</code>,  <code>&quot;number&quot;</code>, and <code>&quot;string&quot;</code>.</p>\n\n        <p class=\"normalbefore\">When the <code>@@toPrimitive</code> method is called with argument <var>hint</var>, the following\n        steps are taken:</p>\n\n        <ol class=\"proc\">\n          <li>Let <i>s</i> be the <b>this</b> value.</li>\n          <li>If <a href=\"/sec/sec-ecmascript-data-types-and-values.html\">Type</a>(<i>s</i>) is Symbol, return <i>s</i>.</li>\n          <li>If <a href=\"/sec/sec-ecmascript-data-types-and-values.html\">Type</a>(<i>s</i>) is not Object, throw a <b>TypeError</b>\n              exception.</li>\n          <li>If <i>s</i> does not have a [[SymbolData]] <a href=\"/sec/sec-object-internal-methods-and-internal-slots.html\">internal\n              slot</a>, throw a <b>TypeError</b> exception.</li>\n          <li>Return the value of <i>s&#x2019;s</i> [[SymbolData]] <a href=\"/sec/sec-object-internal-methods-and-internal-slots.html\">internal slot</a>.</li>\n        </ol>\n\n        <p>The value of the <code>name</code> property of this function is <code>&quot;[Symbol.toPrimitive]&quot;</code>.</p>\n\n        <p>This property has the attributes { [[Writable]]: <span class=\"value\">false</span>, [[Enumerable]]: <span class=\"value\">false</span>, [[Configurable]]: <span class=\"value\">true</span> }.</p>\n      </section>\n\n      <section id=\"sec-symbol.prototype-@@tostringtag\">\n        <h1><span class=\"secnum\" id=\"sec-19.4.3.5\"><a href=\"/sec/sec-symbol.prototype-@@tostringtag.html\" title=\"link to this section\">19.4.3.5</a></span> Symbol.prototype [ @@toStringTag ]</h1>\n\n        <p>The initial value of the @@toStringTag property is the String value <code>&quot;Symbol&quot;</code>.</p>\n\n        <p>This property has the attributes { [[Writable]]: <span class=\"value\">false</span>, [[Enumerable]]: <span class=\"value\">false</span>, [[Configurable]]: <span class=\"value\">true</span> }.</p>\n      </section>\n    </section>\n\n    <section id=\"sec-properties-of-symbol-instances\">\n      <h1><span class=\"secnum\" id=\"sec-19.4.4\"><a href=\"/sec/sec-properties-of-symbol-instances.html\" title=\"link to this section\">19.4.4</a></span> Properties of Symbol Instances</h1>\n\n      <p>Symbol instances are ordinary objects that inherit properties from the Symbol prototype object. Symbol instances have a\n      [[SymbolData]] <a href=\"/sec/sec-object-internal-methods-and-internal-slots.html\">internal slot</a>. The [[SymbolData]] <a href=\"/sec/sec-object-internal-methods-and-internal-slots.html\">internal slot</a> is the Symbol value represented by this Symbol\n      object.</p>\n    </section>\n  "}