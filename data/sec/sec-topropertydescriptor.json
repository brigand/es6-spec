{"id":"sec-topropertydescriptor","html":"\n        <h1><span class=\"secnum\" id=\"sec-6.2.4.5\"><a href=\"/sec/sec-topropertydescriptor.html\" title=\"link to this section\">6.2.4.5</a></span> ToPropertyDescriptor ( Obj )</h1>\n\n        <p class=\"normalbefore\">When the abstract operation ToPropertyDescriptor is called with object <span class=\"nt\">Obj</span>, the following steps are taken:</p>\n\n        <ol class=\"proc\">\n          <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>Obj</i>).</li>\n          <li>If <a href=\"/sec/sec-ecmascript-data-types-and-values.html\">Type</a>(<i>Obj</i>) is not Object, throw a <b>TypeError</b>\n              exception.</li>\n          <li>Let <i>desc</i> be a new <a href=\"/sec/sec-property-descriptor-specification-type.html\">Property Descriptor</a> that\n              initially has no fields.</li>\n          <li>Let <i>hasEnumerable</i> be <a href=\"/sec/sec-hasproperty.html\">HasProperty</a>(<i>Obj</i>, <code>&quot;enumerable&quot;</code>).</li>\n          <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>hasEnumerable</i>).</li>\n          <li>If <i>hasEnumerable</i> is <b>true</b>, then\n            <ol class=\"block\">\n              <li>Let <i>enum</i> be <a href=\"/sec/sec-toboolean.html\">ToBoolean</a>(<a href=\"/sec/sec-get-o-p.html\">Get</a>(<i>Obj</i>,\n                  <code>&quot;enumerable&quot;</code>)).</li>\n              <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>enum</i>).</li>\n              <li>Set the [[Enumerable]] field of <i>desc</i> to <i>enum</i>.</li>\n            </ol>\n          </li>\n          <li>Let <i>hasConfigurable</i> be <a href=\"/sec/sec-hasproperty.html\">HasProperty</a>(<i>Obj</i>,\n              <code>&quot;configurable&quot;</code>).</li>\n          <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>hasConfigurable</i>).</li>\n          <li>If <i>hasConfigurable</i> is <b>true</b>, then\n            <ol class=\"block\">\n              <li>Let <i>conf</i>  be <a href=\"/sec/sec-toboolean.html\">ToBoolean</a>(<a href=\"/sec/sec-get-o-p.html\">Get</a>(<i>Obj</i>,\n                  <code>&quot;configurable&quot;</code>)).</li>\n              <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>conf</i>).</li>\n              <li>Set the [[Configurable]] field of <i>desc</i> to <i>conf</i>.</li>\n            </ol>\n          </li>\n          <li>Let <i>hasValue</i> be <a href=\"/sec/sec-hasproperty.html\">HasProperty</a>(<i>Obj</i>, <code>&quot;value&quot;</code>).</li>\n          <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>hasValue</i>).</li>\n          <li>If <i>hasValue</i> is <b>true</b>, then\n            <ol class=\"block\">\n              <li>Let <i>value</i> be <a href=\"/sec/sec-get-o-p.html\">Get</a>(<i>Obj</i>, <code>&quot;value&quot;</code>).</li>\n              <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>value</i>).</li>\n              <li>Set the [[Value]] field of <i>desc</i> to <i>value</i>.</li>\n            </ol>\n          </li>\n          <li>Let <i>hasWritable</i> be <a href=\"/sec/sec-hasproperty.html\">HasProperty</a>(<i>Obj</i>, <code>&quot;writable&quot;</code>).</li>\n          <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>hasWritable</i>).</li>\n          <li>If <i>hasWritable</i> is <b>true</b>, then\n            <ol class=\"block\">\n              <li>Let <i>writable</i> be <a href=\"/sec/sec-toboolean.html\">ToBoolean</a>(<a href=\"/sec/sec-get-o-p.html\">Get</a>(<i>Obj</i>,\n                  <code>&quot;writable&quot;</code>)).</li>\n              <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>writable</i>).</li>\n              <li>Set the [[Writable]] field of <i>desc</i> to <i>writable</i>.</li>\n            </ol>\n          </li>\n          <li>Let <i>hasGet</i> be <a href=\"/sec/sec-hasproperty.html\">HasProperty</a>(<i>Obj</i>, <code>&quot;get&quot;</code>).</li>\n          <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>hasGet</i>).</li>\n          <li>If <i>hasGet</i> is <b>true</b>, then\n            <ol class=\"block\">\n              <li>Let <i>getter</i> be <a href=\"/sec/sec-get-o-p.html\">Get</a>(<i>Obj</i>, <code>&quot;get&quot;</code>).</li>\n              <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>getter</i>).</li>\n              <li>If <a href=\"/sec/sec-iscallable.html\">IsCallable</a>(<i>getter</i>) is <b>false</b> and <i>getter</i> is not\n                  <b>undefined</b>, throw a <b>TypeError</b> exception.</li>\n              <li>Set the [[Get]] field of <i>desc</i> to <i>getter</i>.</li>\n            </ol>\n          </li>\n          <li>Let <i>hasSet</i> be <a href=\"/sec/sec-hasproperty.html\">HasProperty</a>(<i>Obj</i>, <code>&quot;set&quot;</code>).</li>\n          <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>hasSet</i>).</li>\n          <li>If <i>hasSet</i> is <b>true</b>, then\n            <ol class=\"block\">\n              <li>Let <i>setter</i> be <a href=\"/sec/sec-get-o-p.html\">Get</a>(<i>Obj</i>, <code>&quot;set&quot;</code>).</li>\n              <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>setter</i>).</li>\n              <li>If <a href=\"/sec/sec-iscallable.html\">IsCallable</a>(<i>setter</i>) is <b>false</b> and <i>setter</i> is not\n                  <b>undefined</b>, throw a <b>TypeError</b> exception.</li>\n              <li>Set the [[Set]] field of <i>desc</i> to <i>setter</i>.</li>\n            </ol>\n          </li>\n          <li>If either <i>desc</i>.[[Get]] or <i>desc</i>.[[Set]] is present, then\n            <ol class=\"block\">\n              <li>If either <i>desc</i>.[[Value]] or <i>desc</i>.[[Writable]] is present, throw a <b>TypeError</b> exception.</li>\n            </ol>\n          </li>\n          <li>Return <i>desc</i>.</li>\n        </ol>\n      "}