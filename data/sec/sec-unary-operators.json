{"id":"sec-unary-operators","html":"\n    <div class=\"front\">\n      <h1><span class=\"secnum\" id=\"sec-12.5\"><a href=\"/sec/sec-unary-operators.html\" title=\"link to this section\">12.5</a></span> Unary\n          Operators</h1>\n      <h2>Syntax</h2>\n\n      <div class=\"gp\">\n        <div class=\"lhs\"><span class=\"nt\">UnaryExpression</span><sub class=\"g-params\">[Yield]</sub> <span class=\"geq\">:</span></div>\n        <div class=\"rhs\"><span class=\"nt\">PostfixExpression</span><sub class=\"g-params\">[?Yield]</sub></div>\n        <div class=\"rhs\"><code class=\"t\">delete</code> <span class=\"nt\">UnaryExpression</span><sub class=\"g-params\">[?Yield]</sub></div>\n        <div class=\"rhs\"><code class=\"t\">void</code> <span class=\"nt\">UnaryExpression</span><sub class=\"g-params\">[?Yield]</sub></div>\n        <div class=\"rhs\"><code class=\"t\">typeof</code> <span class=\"nt\">UnaryExpression</span><sub class=\"g-params\">[?Yield]</sub></div>\n        <div class=\"rhs\"><code class=\"t\">++</code> <span class=\"nt\">UnaryExpression</span><sub class=\"g-params\">[?Yield]</sub></div>\n        <div class=\"rhs\"><code class=\"t\">--</code> <span class=\"nt\">UnaryExpression</span><sub class=\"g-params\">[?Yield]</sub></div>\n        <div class=\"rhs\"><code class=\"t\">+</code> <span class=\"nt\">UnaryExpression</span><sub class=\"g-params\">[?Yield]</sub></div>\n        <div class=\"rhs\"><code class=\"t\">-</code> <span class=\"nt\">UnaryExpression</span><sub class=\"g-params\">[?Yield]</sub></div>\n        <div class=\"rhs\"><code class=\"t\">~</code> <span class=\"nt\">UnaryExpression</span><sub class=\"g-params\">[?Yield]</sub></div>\n        <div class=\"rhs\"><code class=\"t\">!</code> <span class=\"nt\">UnaryExpression</span><sub class=\"g-params\">[?Yield]</sub></div>\n      </div>\n    </div>\n\n    <section id=\"sec-unary-operators-static-semantics-early-errors\">\n      <h1><span class=\"secnum\" id=\"sec-12.5.1\"><a href=\"/sec/sec-unary-operators-static-semantics-early-errors.html\" title=\"link to this section\">12.5.1</a></span> Static Semantics:  Early Errors</h1>\n\n      <div class=\"gp\">\n        <div class=\"lhs\"><span class=\"nt\">UnaryExpression</span> <span class=\"geq\">:</span></div>\n        <div class=\"rhs\"><code class=\"t\">++</code> <span class=\"nt\">UnaryExpression</span></div>\n        <div class=\"rhs\"><code class=\"t\">--</code> <span class=\"nt\">UnaryExpression</span></div>\n      </div>\n\n      <ul>\n        <li>\n          <p>It is an early <a href=\"/sec/sec-reference-specification-type.html\">Reference</a> Error if <span style=\"font-family: Times New\n          Roman\">IsValidSimpleAssignmentTarget</span> of <span class=\"nt\">UnaryExpression</span> is <span class=\"value\">false</span>.</p>\n        </li>\n      </ul>\n    </section>\n\n    <section id=\"sec-unary-operators-static-semantics-isfunctiondefinition\">\n      <h1><span class=\"secnum\" id=\"sec-12.5.2\"><a href=\"/sec/sec-unary-operators-static-semantics-isfunctiondefinition.html\" title=\"link to this section\">12.5.2</a></span> Static Semantics:  IsFunctionDefinition</h1>\n\n      <p>See also: <a href=\"/sec/sec-semantics-static-semantics-isfunctiondefinition.html\">12.2.1.3</a>, <a href=\"/sec/sec-grouping-operator-static-semantics-isfunctiondefinition.html\">12.2.10.2</a>, <a href=\"/sec/sec-static-semantics-static-semantics-isfunctiondefinition.html\">12.3.1.2</a>, <a href=\"/sec/sec-postfix-expressions-static-semantics-isfunctiondefinition.html\">12.4.2</a>, <a href=\"/sec/sec-multiplicative-operators-static-semantics-isfunctiondefinition.html\">12.6.1</a>, <a href=\"/sec/sec-additive-operators-static-semantics-isfunctiondefinition.html\">12.7.1</a>, <a href=\"/sec/sec-bitwise-shift-operators-static-semantics-isfunctiondefinition.html\">12.8.1</a>, <a href=\"/sec/sec-relational-operators-static-semantics-isfunctiondefinition.html\">12.9.1</a>, <a href=\"/sec/sec-equality-operators-static-semantics-isfunctiondefinition.html\">12.10.1</a>, <a href=\"/sec/sec-binary-bitwise-operators-static-semantics-isfunctiondefinition.html\">12.11.1</a>, <a href=\"/sec/sec-binary-logical-operators-static-semantics-isfunctiondefinition.html\">12.12.1</a>, <a href=\"/sec/sec-conditional-operator-static-semantics-isfunctiondefinition.html\">12.13.1</a>, <a href=\"/sec/sec-assignment-operators-static-semantics-isfunctiondefinition.html\">12.14.2</a>, <a href=\"/sec/sec-comma-operator-static-semantics-isfunctiondefinition.html\">12.15.1</a>, <a href=\"/sec/sec-function-definitions-static-semantics-isfunctiondefinition.html\">14.1.11</a>, <a href=\"/sec/sec-generator-function-definitions-static-semantics-isfunctiondefinition.html\">14.4.9</a>, <a href=\"/sec/sec-class-definitions-static-semantics-isfunctiondefinition.html\">14.5.8</a>.</p>\n\n      <div class=\"gp\">\n        <div class=\"lhs\"><span class=\"nt\">UnaryExpression</span> <span class=\"geq\">:</span></div>\n        <div class=\"rhs\"><code class=\"t\">delete</code> <span class=\"nt\">UnaryExpression</span></div>\n        <div class=\"rhs\"><code class=\"t\">void</code> <span class=\"nt\">UnaryExpression</span></div>\n        <div class=\"rhs\"><code class=\"t\">typeof</code> <span class=\"nt\">UnaryExpression</span></div>\n        <div class=\"rhs\"><code class=\"t\">++</code> <span class=\"nt\">UnaryExpression</span></div>\n        <div class=\"rhs\"><code class=\"t\">--</code> <span class=\"nt\">UnaryExpression</span></div>\n        <div class=\"rhs\"><code class=\"t\">+</code> <span class=\"nt\">UnaryExpression</span></div>\n        <div class=\"rhs\"><code class=\"t\">-</code> <span class=\"nt\">UnaryExpression</span></div>\n        <div class=\"rhs\"><code class=\"t\">~</code> <span class=\"nt\">UnaryExpression</span></div>\n        <div class=\"rhs\"><code class=\"t\">!</code> <span class=\"nt\">UnaryExpression</span></div>\n      </div>\n\n      <ol class=\"proc\">\n        <li>Return <b>false</b>.</li>\n      </ol>\n    </section>\n\n    <section id=\"sec-unary-operators-static-semantics-isvalidsimpleassignmenttarget\">\n      <h1><span class=\"secnum\" id=\"sec-12.5.3\"><a href=\"/sec/sec-unary-operators-static-semantics-isvalidsimpleassignmenttarget.html\" title=\"link to this section\">12.5.3</a></span> Static Semantics:  IsValidSimpleAssignmentTarget</h1>\n\n      <p>See also: <a href=\"/sec/sec-identifiers-static-semantics-isvalidsimpleassignmenttarget.html\">12.1.3</a>, <a href=\"/sec/sec-semantics-static-semantics-isvalidsimpleassignmenttarget.html\">12.2.1.5</a>, <a href=\"/sec/sec-grouping-operator-static-semantics-isvalidsimpleassignmenttarget.html\">12.2.10.3</a>, <a href=\"/sec/sec-static-semantics-static-semantics-isvalidsimpleassignmenttarget.html\">12.3.1.5</a>, <a href=\"/sec/sec-postfix-expressions-static-semantics-isvalidsimpleassignmenttarget.html\">12.4.3</a>, <a href=\"/sec/sec-multiplicative-operators-static-semantics-isvalidsimpleassignmenttarget.html\">12.6.2</a>, <a href=\"/sec/sec-additive-operators-static-semantics-isvalidsimpleassignmenttarget.html\">12.7.2</a>, <a href=\"/sec/sec-bitwise-shift-operators-static-semantics-isvalidsimpleassignmenttarget.html\">12.8.2</a>, <a href=\"/sec/sec-relational-operators-static-semantics-isvalidsimpleassignmenttarget.html\">12.9.2</a>, <a href=\"/sec/sec-equality-operators-static-semantics-isvalidsimpleassignmenttarget.html\">12.10.2</a>, <a href=\"/sec/sec-binary-bitwise-operators-static-semantics-isvalidsimpleassignmenttarget.html\">12.11.2</a>, <a href=\"/sec/sec-binary-logical-operators-static-semantics-isvalidsimpleassignmenttarget.html\">12.12.2</a>, <a href=\"/sec/sec-conditional-operator-static-semantics-isvalidsimpleassignmenttarget.html\">12.13.2</a>, <a href=\"/sec/sec-assignment-operators-static-semantics-isvalidsimpleassignmenttarget.html\">12.14.3</a>, <a href=\"/sec/sec-comma-operator-static-semantics-isvalidsimpleassignmenttarget.html\">12.15.2</a>.</p>\n\n      <div class=\"gp\">\n        <div class=\"lhs\"><span class=\"nt\">UnaryExpression</span> <span class=\"geq\">:</span></div>\n        <div class=\"rhs\"><code class=\"t\">delete</code> <span class=\"nt\">UnaryExpression</span></div>\n        <div class=\"rhs\"><code class=\"t\">void</code> <span class=\"nt\">UnaryExpression</span></div>\n        <div class=\"rhs\"><code class=\"t\">typeof</code> <span class=\"nt\">UnaryExpression</span></div>\n        <div class=\"rhs\"><code class=\"t\">++</code> <span class=\"nt\">UnaryExpression</span></div>\n        <div class=\"rhs\"><code class=\"t\">--</code> <span class=\"nt\">UnaryExpression</span></div>\n        <div class=\"rhs\"><code class=\"t\">+</code> <span class=\"nt\">UnaryExpression</span></div>\n        <div class=\"rhs\"><code class=\"t\">-</code> <span class=\"nt\">UnaryExpression</span></div>\n        <div class=\"rhs\"><code class=\"t\">~</code> <span class=\"nt\">UnaryExpression</span></div>\n        <div class=\"rhs\"><code class=\"t\">!</code> <span class=\"nt\">UnaryExpression</span></div>\n      </div>\n\n      <ol class=\"proc\">\n        <li>Return <b>false</b>.</li>\n      </ol>\n    </section>\n\n    <section id=\"sec-delete-operator\">\n      <div class=\"front\">\n        <h1><span class=\"secnum\" id=\"sec-12.5.4\"><a href=\"/sec/sec-delete-operator.html\" title=\"link to this section\">12.5.4</a></span> The\n            <code>delete</code> Operator</h1>\n      </div>\n\n      <section id=\"sec-delete-operator-static-semantics-early-errors\">\n        <h1><span class=\"secnum\" id=\"sec-12.5.4.1\"><a href=\"/sec/sec-delete-operator-static-semantics-early-errors.html\" title=\"link to this section\">12.5.4.1</a></span> Static Semantics:  Early Errors</h1>\n        <div class=\"gp prod\"><span class=\"nt\">UnaryExpression</span> <span class=\"geq\">:</span> <code class=\"t\">delete</code> <span class=\"nt\">UnaryExpression</span></div>\n        <ul>\n          <li>\n            <p>It is a Syntax Error if the <span class=\"nt\">UnaryExpression</span> is contained in <a href=\"/sec/sec-strict-mode-code.html\">strict mode code</a> and the derived <span class=\"nt\">UnaryExpression</span> is <span class=\"prod\"><span class=\"nt\">PrimaryExpression</span> <span class=\"geq\">:</span></span>\n            <var>IdentifierReference.</var></p>\n          </li>\n\n          <li>\n            <p>It is a Syntax Error if the derived <span class=\"nt\">UnaryExpression</span> is<br>      <span style=\"font-family:\n            Times New Roman\"><i>PrimaryExpression : CoverParenthesizedExpressionAndArrowParameterList<br></i></span>and <span class=\"nt\">CoverParenthesizedExpressionAndArrowParameterList</span> ultimately derives a phrase that, if used in place\n            of <var>UnaryExpression,</var> would produce a Syntax Error according to these rules. This rule is recursively\n            applied.</p>\n          </li>\n        </ul>\n\n        <div class=\"note\">\n          <p><span class=\"nh\">NOTE</span> The last rule means that expressions such as<br>\t\t<code>delete\n          (((foo)))</code><br>produce early errors because of recursive application of the first rule.</p>\n        </div>\n      </section>\n\n      <section id=\"sec-delete-operator-runtime-semantics-evaluation\">\n        <h1><span class=\"secnum\" id=\"sec-12.5.4.2\"><a href=\"/sec/sec-delete-operator-runtime-semantics-evaluation.html\" title=\"link to this section\">12.5.4.2</a></span> Runtime Semantics: Evaluation</h1>\n        <div class=\"gp prod\"><span class=\"nt\">UnaryExpression</span> <span class=\"geq\">:</span> <code class=\"t\">delete</code> <span class=\"nt\">UnaryExpression</span></div>\n        <ol class=\"proc\">\n          <li>Let <i>ref</i> be the result of evaluating <i>UnaryExpression</i>.</li>\n          <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>ref</i>).</li>\n          <li>If <a href=\"/sec/sec-ecmascript-data-types-and-values.html\">Type</a>(<i>ref</i>) is not <a href=\"/sec/sec-reference-specification-type.html\">Reference</a>, return <b>true</b>.</li>\n          <li>If <a href=\"/sec/sec-reference-specification-type.html\">IsUnresolvableReference</a>(<i>ref</i>) is <b>true</b>, then\n            <ol class=\"block\">\n              <li><a href=\"/sec/sec-algorithm-conventions.html\">Assert</a>: <a href=\"/sec/sec-reference-specification-type.html\">IsStrictReference</a>(<i>ref</i>) is <b>false</b>.</li>\n              <li>Return <b>true</b>.</li>\n            </ol>\n          </li>\n          <li>If <a href=\"/sec/sec-reference-specification-type.html\">IsPropertyReference</a>(<i>ref</i>) is <b>true</b>, then\n            <ol class=\"block\">\n              <li>If <a href=\"/sec/sec-reference-specification-type.html\">IsSuperReference</a>(<i>ref</i>), throw a <b>ReferenceError</b>\n                  exception.</li>\n              <li>Let <i>baseObj</i> be <a href=\"/sec/sec-toobject.html\">ToObject</a>(<a href=\"/sec/sec-reference-specification-type.html\">GetBase</a>(<i>ref</i>)).</li>\n              <li><a href=\"/sec/sec-algorithm-conventions.html\">Assert</a>: <i>baseObj</i> is not an <a href=\"/sec/sec-completion-record-specification-type.html\">abrupt completion</a>.</li>\n              <li>Let <i>deleteStatus</i> be <i>baseObj</i>.[[Delete]](<a href=\"/sec/sec-reference-specification-type.html\">GetReferencedName</a>(<i>ref</i>)).</li>\n              <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>deleteStatus</i>).</li>\n              <li>If <i>deleteStatus</i> is <b>false</b> and <a href=\"/sec/sec-reference-specification-type.html\">IsStrictReference</a>(<i>ref</i>) is <b>true</b>, throw a\n                  <b>TypeError</b> exception.</li>\n              <li>Return  <i>deleteStatus</i>.</li>\n            </ol>\n          </li>\n          <li>Else <i>ref</i> is a <a href=\"/sec/sec-reference-specification-type.html\">Reference</a> to an <a href=\"/sec/sec-environment-records.html\">Environment Record</a> binding,\n            <ol class=\"block\">\n              <li>Let <i>bindings</i> be <a href=\"/sec/sec-reference-specification-type.html\">GetBase</a>(<i>ref</i>).</li>\n              <li>Return <i>bindings</i>.DeleteBinding(<a href=\"/sec/sec-reference-specification-type.html\">GetReferencedName</a>(<i>ref</i>)).</li>\n            </ol>\n          </li>\n        </ol>\n\n        <div class=\"note\">\n          <p><span class=\"nh\">NOTE</span> When a <code>delete</code> operator occurs within <a href=\"/sec/sec-strict-mode-code.html\">strict\n          mode code</a>, a <b>SyntaxError</b> exception is thrown if its <span class=\"nt\">UnaryExpression</span> is a direct\n          reference to a variable, function argument, or function name. In addition, if a <code>delete</code> operator occurs\n          within <a href=\"/sec/sec-strict-mode-code.html\">strict mode code</a> and the property to be deleted has the attribute {\n          [[Configurable]]: <b>false</b> }, a <b>TypeError</b> exception is thrown.</p>\n        </div>\n      </section>\n    </section>\n\n    <section id=\"sec-void-operator\">\n      <div class=\"front\">\n        <h1><span class=\"secnum\" id=\"sec-12.5.5\"><a href=\"/sec/sec-void-operator.html\" title=\"link to this section\">12.5.5</a></span> The\n            <code>void</code> Operator</h1>\n      </div>\n\n      <section id=\"sec-void-operator-runtime-semantics-evaluation\">\n        <h1><span class=\"secnum\" id=\"sec-12.5.5.1\"><a href=\"/sec/sec-void-operator-runtime-semantics-evaluation.html\" title=\"link to this section\">12.5.5.1</a></span> Runtime Semantics: Evaluation</h1>\n        <div class=\"gp prod\"><span class=\"nt\">UnaryExpression</span> <span class=\"geq\">:</span> <code class=\"t\">void</code> <span class=\"nt\">UnaryExpression</span></div>\n        <ol class=\"proc\">\n          <li>Let <i>expr</i> be the result of evaluating <i>UnaryExpression</i>.</li>\n          <li>Let <i>status</i> be <a href=\"/sec/sec-getvalue.html\">GetValue</a>(<i>expr</i>).</li>\n          <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>status</i>).</li>\n          <li>Return <b>undefined</b>.</li>\n        </ol>\n\n        <div class=\"note\">\n          <p><span class=\"nh\">NOTE</span> <a href=\"/sec/sec-getvalue.html\">GetValue</a> must be called even though its value is not used\n          because it may have observable side-effects.</p>\n        </div>\n      </section>\n    </section>\n\n    <section id=\"sec-typeof-operator\">\n      <div class=\"front\">\n        <h1><span class=\"secnum\" id=\"sec-12.5.6\"><a href=\"/sec/sec-typeof-operator.html\" title=\"link to this section\">12.5.6</a></span> The\n            <code>typeof</code> Operator</h1>\n      </div>\n\n      <section id=\"sec-typeof-operator-runtime-semantics-evaluation\">\n        <h1><span class=\"secnum\" id=\"sec-12.5.6.1\"><a href=\"/sec/sec-typeof-operator-runtime-semantics-evaluation.html\" title=\"link to this section\">12.5.6.1</a></span> Runtime Semantics: Evaluation</h1>\n        <div class=\"gp prod\"><span class=\"nt\">UnaryExpression</span> <span class=\"geq\">:</span> <code class=\"t\">typeof</code> <span class=\"nt\">UnaryExpression</span></div>\n        <ol class=\"proc\">\n          <li>Let <i>val</i> be the result of evaluating <i>UnaryExpression</i>.</li>\n          <li>If <a href=\"/sec/sec-ecmascript-data-types-and-values.html\">Type</a>(<i>val</i>) is <a href=\"/sec/sec-reference-specification-type.html\">Reference</a>, then\n            <ol class=\"block\">\n              <li>If <a href=\"/sec/sec-reference-specification-type.html\">IsUnresolvableReference</a>(<i>val</i>) is <b>true</b>, return\n                  <code>&quot;undefined&quot;</code>.</li>\n            </ol>\n          </li>\n          <li>Let <i>val</i> be <a href=\"/sec/sec-getvalue.html\">GetValue</a>(<i>val</i>).</li>\n          <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>val</i>).</li>\n          <li>Return a String according to <a href=\"/sec/table-35.html\">Table 35</a>.</li>\n        </ol>\n\n        <figure>\n          <figcaption><span id=\"table-35\">Table 35</span> &#x2014; typeof Operator Results</figcaption>\n          <table class=\"real-table\">\n            <tr>\n              <th><b>Type of</b> <span style=\"font-family: Times New Roman\">val</span></th>\n              <th>Result</th>\n            </tr>\n            <tr>\n              <td>Undefined</td>\n              <td><code>&quot;undefined&quot;</code></td>\n            </tr>\n            <tr>\n              <td>Null</td>\n              <td><code>&quot;object&quot;</code></td>\n            </tr>\n            <tr>\n              <td>Boolean</td>\n              <td><code>&quot;boolean&quot;</code></td>\n            </tr>\n            <tr>\n              <td>Number</td>\n              <td><code>&quot;number&quot;</code></td>\n            </tr>\n            <tr>\n              <td>String</td>\n              <td><code>&quot;string&quot;</code></td>\n            </tr>\n            <tr>\n              <td>Symbol</td>\n              <td><code>&quot;symbol&quot;</code></td>\n            </tr>\n            <tr>\n              <td>Object (ordinary and does not implement [[Call]])</td>\n              <td><code>&quot;object&quot;</code></td>\n            </tr>\n            <tr>\n              <td>Object (standard exotic and does not implement [[Call]])</td>\n              <td><code>&quot;object&quot;</code></td>\n            </tr>\n            <tr>\n              <td>Object (implements [[Call]])</td>\n              <td><code>&quot;function&quot;</code></td>\n            </tr>\n            <tr>\n              <td>Object (non-standard exotic and does not implement [[Call]])</td>\n              <td>Implementation-defined. Must not be <code>&quot;undefined&quot;</code>, <code>&quot;boolean&quot;</code>, <code>&quot;function&quot;</code>, <code>&quot;number&quot;</code>, <code>&quot;symbol&quot;</code>, or <code>&quot;string&quot;.</code></td>\n            </tr>\n          </table>\n        </figure>\n\n        <div class=\"note\">\n          <p><span class=\"nh\">NOTE</span> Implementations are discouraged from defining new <code>typeof</code> result values for\n          non-standard exotic objects. If possible <code>&quot;object&quot;</code>should be used for such objects.</p>\n        </div>\n      </section>\n    </section>\n\n    <section id=\"sec-prefix-increment-operator\">\n      <div class=\"front\">\n        <h1><span class=\"secnum\" id=\"sec-12.5.7\"><a href=\"/sec/sec-prefix-increment-operator.html\" title=\"link to this section\">12.5.7</a></span> Prefix Increment Operator</h1>\n      </div>\n\n      <section id=\"sec-prefix-increment-operator-runtime-semantics-evaluation\">\n        <h1><span class=\"secnum\" id=\"sec-12.5.7.1\"><a href=\"/sec/sec-prefix-increment-operator-runtime-semantics-evaluation.html\" title=\"link to this section\">12.5.7.1</a></span> Runtime Semantics: Evaluation</h1>\n        <div class=\"gp prod\"><span class=\"nt\">UnaryExpression</span> <span class=\"geq\">:</span> <code class=\"t\">++</code> <span class=\"nt\">UnaryExpression</span></div>\n        <ol class=\"proc\">\n          <li>Let <i>expr</i> be the result of evaluating <i>UnaryExpression</i>.</li>\n          <li>Let <i>oldValue</i> be <a href=\"/sec/sec-tonumber.html\">ToNumber</a>(<a href=\"/sec/sec-getvalue.html\">GetValue</a>(<i>expr</i>)).</li>\n          <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>oldValue</i>).</li>\n          <li>Let <i>newValue</i> be the result of adding the value <code>1</code> to <i>oldValue</i>, using the same rules as for\n              the <code>+</code> operator (<a href=\"/sec/sec-applying-the-additive-operators-to-numbers.html\">see 12.7.5</a>).</li>\n          <li>Let <i>status</i> be <a href=\"/sec/sec-putvalue.html\">PutValue</a>(<i>expr</i>, <i>newValue</i>).</li>\n          <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>status</i>).</li>\n          <li>Return <i>newValue</i>.</li>\n        </ol>\n      </section>\n    </section>\n\n    <section id=\"sec-prefix-decrement-operator\">\n      <div class=\"front\">\n        <h1><span class=\"secnum\" id=\"sec-12.5.8\"><a href=\"/sec/sec-prefix-decrement-operator.html\" title=\"link to this section\">12.5.8</a></span> Prefix Decrement Operator</h1>\n      </div>\n\n      <section id=\"sec-prefix-decrement-operator-runtime-semantics-evaluation\">\n        <h1><span class=\"secnum\" id=\"sec-12.5.8.1\"><a href=\"/sec/sec-prefix-decrement-operator-runtime-semantics-evaluation.html\" title=\"link to this section\">12.5.8.1</a></span> Runtime Semantics: Evaluation</h1>\n        <div class=\"gp prod\"><span class=\"nt\">UnaryExpression</span> <span class=\"geq\">:</span> <code class=\"t\">--</code> <span class=\"nt\">UnaryExpression</span></div>\n        <ol class=\"proc\">\n          <li>Let <i>expr</i> be the result of evaluating <i>UnaryExpression</i>.</li>\n          <li>Let <i>oldValue</i> be <a href=\"/sec/sec-tonumber.html\">ToNumber</a>(<a href=\"/sec/sec-getvalue.html\">GetValue</a>(<i>expr</i>)).</li>\n          <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>oldValue</i>).</li>\n          <li>Let <i>newValue</i> be the result of  subtracting the value <code>1</code> from <i>oldValue</i>, using the same\n              rules as for the <code>-</code> operator (<a href=\"/sec/sec-applying-the-additive-operators-to-numbers.html\">see\n              12.7.5</a>).</li>\n          <li>Let <i>status</i> be <a href=\"/sec/sec-putvalue.html\">PutValue</a>(<i>expr</i>, <i>newValue</i>).</li>\n          <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>status</i>).</li>\n          <li>Return <i>newValue</i>.</li>\n        </ol>\n      </section>\n    </section>\n\n    <section id=\"sec-unary-plus-operator\">\n      <div class=\"front\">\n        <h1><span class=\"secnum\" id=\"sec-12.5.9\"><a href=\"/sec/sec-unary-plus-operator.html\" title=\"link to this section\">12.5.9</a></span>\n            Unary <code>+</code> Operator</h1>\n\n        <div class=\"note\">\n          <p><span class=\"nh\">NOTE</span> The unary + operator converts its operand to Number type.</p>\n        </div>\n      </div>\n\n      <section id=\"sec-unary-plus-operator-runtime-semantics-evaluation\">\n        <h1><span class=\"secnum\" id=\"sec-12.5.9.1\"><a href=\"/sec/sec-unary-plus-operator-runtime-semantics-evaluation.html\" title=\"link to this section\">12.5.9.1</a></span> Runtime Semantics: Evaluation</h1>\n        <div class=\"gp prod\"><span class=\"nt\">UnaryExpression</span> <span class=\"geq\">:</span> <code class=\"t\">+</code> <span class=\"nt\">UnaryExpression</span></div>\n        <ol class=\"proc\">\n          <li>Let <i>expr</i> be the result of evaluating <i>UnaryExpression</i>.</li>\n          <li>Return <a href=\"/sec/sec-tonumber.html\">ToNumber</a>(<a href=\"/sec/sec-getvalue.html\">GetValue</a>(<i>expr</i>)).</li>\n        </ol>\n      </section>\n    </section>\n\n    <section id=\"sec-unary-minus-operator\">\n      <div class=\"front\">\n        <h1><span class=\"secnum\" id=\"sec-12.5.10\"><a href=\"/sec/sec-unary-minus-operator.html\" title=\"link to this section\">12.5.10</a></span> Unary <code>-</code> Operator</h1>\n\n        <div class=\"note\">\n          <p><span class=\"nh\">NOTE</span> The unary <code>-</code> operator converts its operand to Number type and then negates\n          it. Negating <b>+0</b> produces <b>&#x2212;0</b>, and negating <b>&#x2212;0</b> produces <b>+0</b>.</p>\n        </div>\n      </div>\n\n      <section id=\"sec-unary-minus-operator-runtime-semantics-evaluation\">\n        <h1><span class=\"secnum\" id=\"sec-12.5.10.1\"><a href=\"/sec/sec-unary-minus-operator-runtime-semantics-evaluation.html\" title=\"link to this section\">12.5.10.1</a></span> Runtime Semantics: Evaluation</h1>\n        <div class=\"gp prod\"><span class=\"nt\">UnaryExpression</span> <span class=\"geq\">:</span> <code class=\"t\">-</code> <span class=\"nt\">UnaryExpression</span></div>\n        <ol class=\"proc\">\n          <li>Let <i>expr</i> be the result of evaluating <i>UnaryExpression</i>.</li>\n          <li>Let <i>oldValue</i> be <a href=\"/sec/sec-tonumber.html\">ToNumber</a>(<a href=\"/sec/sec-getvalue.html\">GetValue</a>(<i>expr</i>)).</li>\n          <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>oldValue</i>).</li>\n          <li>If <i>oldValue</i> is <b>NaN</b>, return <b>NaN</b>.</li>\n          <li>Return the result of negating <i>oldValue</i>; that is, compute a Number with the same magnitude but opposite\n              sign.</li>\n        </ol>\n      </section>\n    </section>\n\n    <section id=\"sec-bitwise-not-operator\">\n      <div class=\"front\">\n        <h1><span class=\"secnum\" id=\"sec-12.5.11\"><a href=\"/sec/sec-bitwise-not-operator.html\" title=\"link to this section\">12.5.11</a></span> Bitwise NOT Operator ( <code>~</code> )</h1>\n      </div>\n\n      <section id=\"sec-bitwise-not-operator-runtime-semantics-evaluation\">\n        <h1><span class=\"secnum\" id=\"sec-12.5.11.1\"><a href=\"/sec/sec-bitwise-not-operator-runtime-semantics-evaluation.html\" title=\"link to this section\">12.5.11.1</a></span> Runtime Semantics: Evaluation</h1>\n        <div class=\"gp prod\"><span class=\"nt\">UnaryExpression</span> <span class=\"geq\">:</span> <code class=\"t\">~</code> <span class=\"nt\">UnaryExpression</span></div>\n        <ol class=\"proc\">\n          <li>Let <i>expr</i> be the result of evaluating <i>UnaryExpression</i>.</li>\n          <li>Let <i>oldValue</i> be <a href=\"/sec/sec-toint32.html\">ToInt32</a>(<a href=\"/sec/sec-getvalue.html\">GetValue</a>(<i>expr</i>)).</li>\n          <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>oldValue</i>).</li>\n          <li>Return the result of applying bitwise complement to <i>oldValue</i>. The result is a signed 32-bit integer.</li>\n        </ol>\n      </section>\n    </section>\n\n    <section id=\"sec-logical-not-operator\">\n      <div class=\"front\">\n        <h1><span class=\"secnum\" id=\"sec-12.5.12\"><a href=\"/sec/sec-logical-not-operator.html\" title=\"link to this section\">12.5.12</a></span> Logical NOT Operator ( <code>!</code> )</h1>\n      </div>\n\n      <section id=\"sec-logical-not-operator-runtime-semantics-evaluation\">\n        <h1><span class=\"secnum\" id=\"sec-12.5.12.1\"><a href=\"/sec/sec-logical-not-operator-runtime-semantics-evaluation.html\" title=\"link to this section\">12.5.12.1</a></span> Runtime Semantics: Evaluation</h1>\n        <div class=\"gp prod\"><span class=\"nt\">UnaryExpression</span> <span class=\"geq\">:</span> <code class=\"t\">!</code> <span class=\"nt\">UnaryExpression</span></div>\n        <ol class=\"proc\">\n          <li>Let <i>expr</i> be the result of evaluating <i>UnaryExpression</i>.</li>\n          <li>Let <i>oldValue</i> be <a href=\"/sec/sec-toboolean.html\">ToBoolean</a>(<a href=\"/sec/sec-getvalue.html\">GetValue</a>(<i>expr</i>)).</li>\n          <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>oldValue</i>).</li>\n          <li>If <i>oldValue</i> is <b>true</b>, return <b>false</b>.</li>\n          <li>Return <b>true</b>.</li>\n        </ol>\n      </section>\n    </section>\n  "}