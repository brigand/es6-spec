{"id":"sec-validateandapplypropertydescriptor","html":"\n        <h1><span class=\"secnum\" id=\"sec-9.1.6.3\"><a href=\"/sec/sec-validateandapplypropertydescriptor.html\" title=\"link to this section\">9.1.6.3</a></span> ValidateAndApplyPropertyDescriptor (O, P, extensible, Desc,\n            current)</h1>\n\n        <p>When the abstract operation <span style=\"font-family: Times New Roman\">ValidateAndApplyPropertyDescriptor</span> is\n        called with Object <var>O</var>, <a href=\"/sec/sec-object-type.html\">property key</a> <span style=\"font-family: Times New\n        Roman\"><i>P</i>,</span> Boolean value <var>extensible</var>, and Property Descriptors <span class=\"nt\">Desc</span>, and\n        <var>current</var> the following steps are taken:</p>\n\n        <p>This algorithm contains steps that test various fields of the <a href=\"/sec/sec-property-descriptor-specification-type.html\">Property Descriptor</a> <span class=\"nt\">Desc</span> for specific\n        values. The fields that are tested in this manner need not actually exist in <span class=\"nt\">Desc</span>. If a field is\n        absent then its value is considered to be <b>false</b>.</p>\n\n        <div class=\"note\">\n          <p><span class=\"nh\">NOTE 1</span> If <span class=\"value\">undefined</span> is passed as the <var>O</var> argument only\n          validation is performed and no object updates are performed.</p>\n        </div>\n\n        <ol class=\"proc\">\n          <li><a href=\"/sec/sec-algorithm-conventions.html\">Assert</a>: If <i>O</i> is not <b>undefined</b> then <a href=\"/sec/sec-ispropertykey.html\">IsPropertyKey</a>(<i>P</i>) is <b>true</b>.</li>\n          <li>If <i>current</i> is <b>undefined</b>, then\n            <ol class=\"block\">\n              <li>If <i>extensible</i> is <b>false</b>, return <b>false</b>.</li>\n              <li><a href=\"/sec/sec-algorithm-conventions.html\">Assert</a>: <i>extensible</i> is <b>true</b>.</li>\n              <li>If <a href=\"/sec/sec-isgenericdescriptor.html\">IsGenericDescriptor</a>(<i>Desc</i>) or <a href=\"/sec/sec-isdatadescriptor.html\">IsDataDescriptor</a>(<i>Desc</i>) is <b>true</b>, then\n                <ol class=\"block\">\n                  <li>If <i>O</i> is not <b>undefined</b>, create an own data property named <i>P</i> of object <i>O</i> whose\n                      [[Value]], [[Writable]], [[Enumerable]] and [[Configurable]] attribute values are described by <i>Desc</i>.\n                      If the value of an attribute field of <i>Desc</i> is absent, the attribute of the newly created property is\n                      set to its default value.</li>\n                </ol>\n              </li>\n              <li>Else <i>Desc</i> must be an accessor <a href=\"/sec/sec-property-descriptor-specification-type.html\">Property\n                  Descriptor</a>,\n                <ol class=\"block\">\n                  <li>If <i>O</i> is not <b>undefined</b>, create an own accessor property named <i>P</i> of object <i>O</i> whose\n                      [[Get]], [[Set]], [[Enumerable]] and [[Configurable]] attribute values are described by <i>Desc</i>. If the\n                      value of an attribute field of <i>Desc</i> is absent, the attribute of the newly created property is set to\n                      its default value.</li>\n                </ol>\n              </li>\n              <li>Return <b>true</b>.</li>\n            </ol>\n          </li>\n          <li>Return <b>true</b>, if every field in <i>Desc</i> is absent.</li>\n          <li>Return <b>true</b>, if every field in <i>Desc</i> also occurs in <i>current</i> and the value of every field in\n              <i>Desc</i> is the same value as the corresponding field in <i>current</i> when compared using <a href=\"/sec/sec-samevalue.html\">the SameValue algorithm</a>.</li>\n          <li>If the [[Configurable]] field of <i>current</i> is <b>false</b>, then\n            <ol class=\"block\">\n              <li>Return <b>false</b>, if the [[Configurable]] field of <i>Desc</i> is <b>true</b>.</li>\n              <li>Return <b>false</b>, if the [[Enumerable]] field of <i>Desc</i> is present and the [[Enumerable]] fields of\n                  <i>current</i> and <i>Desc</i> are the Boolean negation of each other.</li>\n            </ol>\n          </li>\n          <li>If <a href=\"/sec/sec-isgenericdescriptor.html\">IsGenericDescriptor</a>(<i>Desc</i>) is <b>true</b>, no further validation is\n              required.</li>\n          <li>Else if <a href=\"/sec/sec-isdatadescriptor.html\">IsDataDescriptor</a>(<i>current</i>) and <a href=\"/sec/sec-isdatadescriptor.html\">IsDataDescriptor</a>(<i>Desc</i>) have different results, then\n            <ol class=\"block\">\n              <li>Return <b>false</b>, if the [[Configurable]] field of <i>current</i> is <b>false</b>.</li>\n              <li>If <a href=\"/sec/sec-isdatadescriptor.html\">IsDataDescriptor</a>(<i>current</i>) is <b>true</b>, then\n                <ol class=\"block\">\n                  <li>If <i>O</i> is not <b>undefined</b>, convert the property named <i>P</i> of object <i>O</i> from a data\n                      property to an accessor property. Preserve the existing values of the converted property&#x2019;s\n                      [[Configurable]] and [[Enumerable]] attributes and set the rest of the property&#x2019;s attributes to their\n                      default values.</li>\n                </ol>\n              </li>\n              <li>Else,\n                <ol class=\"block\">\n                  <li>If <i>O</i> is not <b>undefined</b>, convert the property named <i>P</i> of object <i>O</i> from an accessor\n                      property to a data property. Preserve the existing values of the converted property&#x2019;s [[Configurable]]\n                      and [[Enumerable]] attributes and set the rest of the property&#x2019;s attributes to their default\n                      values.</li>\n                </ol>\n              </li>\n            </ol>\n          </li>\n          <li>Else if <a href=\"/sec/sec-isdatadescriptor.html\">IsDataDescriptor</a>(<i>current</i>) and <a href=\"/sec/sec-isdatadescriptor.html\">IsDataDescriptor</a>(<i>Desc</i>) are both <b>true</b>, then\n            <ol class=\"block\">\n              <li>If the [[Configurable]] field of <i>current</i> is <b>false</b>, then\n                <ol class=\"block\">\n                  <li>Return <b>false</b>, if the [[Writable]] field of <i>current</i> is <b>false</b> and the [[Writable]] field\n                      of <i>Desc</i> is <b>true</b>.</li>\n                  <li>If the [[Writable]] field of <i>current</i> is <b>false</b>, then\n                    <ol class=\"block\">\n                      <li>Return <b>false</b>, if the [[Value]] field of <i>Desc</i> is present and <a href=\"/sec/sec-samevalue.html\">SameValue</a>(<i>Desc</i>.[[Value]], <i>current</i>.[[Value]]) is\n                          <b>false</b>.</li>\n                    </ol>\n                  </li>\n                </ol>\n              </li>\n              <li>Else the [[Configurable]] field of <i>current</i> is <b>true</b>, so any change is acceptable.</li>\n            </ol>\n          </li>\n          <li>Else <a href=\"/sec/sec-isaccessordescriptor.html\">IsAccessorDescriptor</a>(<i>current</i>) and <a href=\"/sec/sec-isaccessordescriptor.html\">IsAccessorDescriptor</a>(<i>Desc</i>) are both <b>true</b>,\n            <ol class=\"block\">\n              <li>If the [[Configurable]] field of <i>current</i> is <b>false</b>, then\n                <ol class=\"block\">\n                  <li>Return <b>false</b>, if the [[Set]] field of <i>Desc</i> is present and <a href=\"/sec/sec-samevalue.html\">SameValue</a>(<i>Desc</i>.[[Set]], <i>current</i>.[[Set]]) is <b>false</b>.</li>\n                  <li>Return <b>false</b>, if the [[Get]] field of <i>Desc</i> is present and <a href=\"/sec/sec-samevalue.html\">SameValue</a>(<i>Desc</i>.[[Get]], <i>current</i>.[[Get]]) is <b>false</b>.</li>\n                </ol>\n              </li>\n            </ol>\n          </li>\n          <li>If <i>O</i> is not <b>undefined</b>, then\n            <ol class=\"block\">\n              <li>For each field of <i>Desc</i> that is present, set the corresponding attribute of the property named <i>P</i> of\n                  object <i>O</i> to the value of the field.</li>\n            </ol>\n          </li>\n          <li>Return <b>true</b>.</li>\n        </ol>\n\n        <div class=\"note\">\n          <p><span class=\"nh\">NOTE 2</span> Step 8.b allows any field of <span style=\"font-family: Times New Roman\">Desc</span> to\n          be different from the corresponding field of <span style=\"font-family: Times New Roman\">current</span> if <span style=\"font-family: Times New Roman\">current&#x2019;s</span> [[Configurable]] field is <span class=\"value\">true</span>.\n          This even permits changing the [[Value]] of a property whose [[Writable]] attribute is <span class=\"value\">false</span>.\n          This is allowed because a <span class=\"value\">true</span> [[Configurable]] attribute would permit an equivalent sequence\n          of calls where [[Writable]] is first set to <span class=\"value\">true</span>, a new [[Value]] is set, and then\n          [[Writable]] is set to <span class=\"value\">false</span>.</p>\n        </div>\n      "}