{"id":"sec-variable-statement-runtime-semantics-evaluation","html":"\n        <h1><span class=\"secnum\" id=\"sec-13.3.2.4\"><a href=\"/sec/sec-variable-statement-runtime-semantics-evaluation.html\" title=\"link to this section\">13.3.2.4</a></span> Runtime Semantics: Evaluation</h1>\n        <div class=\"gp prod\"><span class=\"nt\">VariableStatement</span> <span class=\"geq\">:</span> <code class=\"t\">var</code> <span class=\"nt\">VariableDeclarationList</span> <code class=\"t\">;</code></div>\n        <ol class=\"proc\">\n          <li>Let <i>next</i> be the result of evaluating <i>VariableDeclarationList</i>.</li>\n          <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>next</i>).</li>\n          <li>Return <a href=\"/sec/sec-normalcompletion.html\">NormalCompletion</a>( <span style=\"font-family:\n              sans-serif\">empty</span>).</li>\n        </ol>\n        <div class=\"gp prod\"><span class=\"nt\">VariableDeclarationList</span> <span class=\"geq\">:</span> <span class=\"nt\">VariableDeclarationList</span> <code class=\"t\">,</code> <span class=\"nt\">VariableDeclaration</span></div>\n        <ol class=\"proc\">\n          <li>Let <i>next</i> be the result of evaluating <i>VariableDeclarationList</i>.</li>\n          <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>next</i>).</li>\n          <li>Return the result of evaluating <i>VariableDeclaration</i>.</li>\n        </ol>\n        <div class=\"gp prod\"><span class=\"nt\">VariableDeclaration</span> <span class=\"geq\">:</span> <span class=\"nt\">BindingIdentifier</span></div>\n        <ol class=\"proc\">\n          <li>Return <a href=\"/sec/sec-normalcompletion.html\">NormalCompletion</a>(<span style=\"font-family:\n              sans-serif\">empty</span>).</li>\n        </ol>\n        <div class=\"gp prod\"><span class=\"nt\">VariableDeclaration</span> <span class=\"geq\">:</span> <span class=\"nt\">BindingIdentifier</span> <span class=\"nt\">Initializer</span></div>\n        <ol class=\"proc\">\n          <li>Let <i>bindingId</i> be StringValue of <i>BindingIdentifier.</i></li>\n          <li>Let <i>lhs</i> be <a href=\"/sec/sec-resolvebinding.html\">ResolveBinding</a>(<i>bindingId</i>)</li>\n          <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>lhs</i>).</li>\n          <li>Let <i>rhs</i> be the result of evaluating <i>Initializer</i>.</li>\n          <li>Let <i>value</i> be <a href=\"/sec/sec-getvalue.html\">GetValue</a>(<i>rhs</i>).</li>\n          <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>value</i>).</li>\n          <li>If <a href=\"/sec/sec-isanonymousfunctiondefinition.html\">IsAnonymousFunctionDefinition</a>(<i>Initializer)</i> is\n              <b>true</b>, then\n            <ol class=\"block\">\n              <li>Let <i>hasNameProperty</i> be <a href=\"/sec/sec-hasownproperty.html\">HasOwnProperty</a>(<i>value</i>,\n                  <code>&quot;name&quot;</code>).</li>\n              <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>hasNameProperty</i>).</li>\n              <li>If <i>hasNameProperty</i> is <b>false</b>, perform <a href=\"/sec/sec-setfunctionname.html\">SetFunctionName</a>(<i>value</i>, <i>bindingId</i>).</li>\n            </ol>\n          </li>\n          <li>Return <a href=\"/sec/sec-putvalue.html\">PutValue</a>(<i>lhs</i>, <i>value</i>).</li>\n        </ol>\n\n        <div class=\"note\">\n          <p><span class=\"nh\">NOTE</span> If a <span class=\"nt\">VariableDeclaration</span> is nested within a with statement and\n          the <span class=\"nt\">BindingIdentifier</span> in the <span class=\"nt\">VariableDeclaration</span> is the same as a\n          property name of the binding object of the with statement&#x2019;s object <a href=\"/sec/sec-environment-records.html\">Environment\n          Record</a>, then step 7 will assign <var>value</var> to the property instead of assigning to the <a href=\"/sec/sec-execution-contexts.html\">VariableEnvironment</a> binding of the <span class=\"nt\">Identifier</span>.</p>\n        </div>\n\n        <div class=\"gp prod\"><span class=\"nt\">VariableDeclaration</span> <span class=\"geq\">:</span> <span class=\"nt\">BindingPattern</span> <span class=\"nt\">Initializer</span></div>\n        <ol class=\"proc\">\n          <li>Let <i>rhs</i> be the result of evaluating <i>Initializer</i>.</li>\n          <li>Let <i>rval</i> be <a href=\"/sec/sec-getvalue.html\">GetValue</a>(<i>rhs</i>).</li>\n          <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>rval</i>).</li>\n          <li>Return the result of performing BindingInitialization for <i>BindingPattern</i> passing <i>rval</i> and\n              <b>undefined</b> as arguments.</li>\n        </ol>\n      "}