{"id":"sec-variablestatements-in-catch-blocks","html":"\n      <h1><span class=\"secnum\" id=\"sec-B.3.5\"><a href=\"/sec/sec-variablestatements-in-catch-blocks.html\" title=\"link to this section\">B.3.5</a></span> VariableStatements in Catch blocks</h1>\n\n      <p>The content of <a href=\"/sec/sec-try-statement-static-semantics-early-errors.html\">subclause 13.15.1</a> is replaced with the\n      following:</p>\n\n      <div class=\"gp prod\"><span class=\"nt\">Catch</span> <span class=\"geq\">:</span> <code class=\"t\">catch</code> <code class=\"t\">(</code> <span class=\"nt\">CatchParameter</span> <code class=\"t\">)</code> <span class=\"nt\">Block</span></div>\n      <ul>\n        <li>\n          <p>It is a Syntax Error if BoundNames <span style=\"font-family: Times New Roman\">of <i>CatchParameter</i></span>\n          contains any duplicate elements.</p>\n        </li>\n\n        <li>\n          <p>It is a Syntax Error if any element of the BoundNames of <span class=\"nt\">CatchParameter</span> also occurs in the\n          LexicallyDeclaredNames of <span class=\"nt\">Block</span>.</p>\n        </li>\n\n        <li>\n          <p>It is a Syntax Error if any element of the BoundNames of <span class=\"nt\">CatchParameter</span> also occurs in the\n          VarDeclaredNames of <var>Block, unless that element is only bound by a VariableStatement or the VariableDeclarationList\n          of a for statement, or the ForBinding of a for-in statement</var>.</p>\n        </li>\n      </ul>\n\n      <div class=\"note\">\n        <p><span class=\"nh\">NOTE</span> The <span class=\"nt\">Block</span> of a <span class=\"nt\">Catch</span> clause may contain\n        <code>var</code> declarations that bind a name that is also bound by the <span class=\"nt\">CatchParameter</span>. At\n        runtime, such bindings are instantiated in the VariableDeclarationEnvironment. They do not shadow the same-named bindings\n        introduced by the <span class=\"nt\">CatchParameter</span> and hence the <span class=\"nt\">Initializer</span> for such\n        <code>var</code> declarations will assign to the corresponding catch parameter rather than the <code>var</code> binding.\n        The relaxation of the normal static semantic rule does not apply to names only bound by for-of statements.</p>\n      </div>\n\n      <p>This modified behaviour also applies to <code>var</code> and <code>function</code> declarations introduced by direct\n      evals contained within the <span class=\"nt\">Block</span> of a <span class=\"nt\">Catch</span> clause. This change is\n      accomplished by modify the algorithm of <a href=\"/sec/sec-evaldeclarationinstantiation.html\">18.2.1.2</a> as follows:</p>\n\n      <p class=\"normalbefore\">Step 5.d.ii.2.a.i is replaced by:</p>\n\n      <p class=\"special2\">i.\tIf <i>thisEnvRec</i> is not the <a href=\"/sec/sec-environment-records.html\">Environment Record</a> for a\n      <i>Catch</i> clause, throw a <b>SyntaxError</b> exception.</p>\n\n      <p class=\"special2\">ii.\tIf <i>name</i> is <i>bound by any syntactic form other than a FunctionDeclaration, a\n      VariableStatement, the VariableDeclarationList of a for statement, or the ForBinding of a for-in statement</i>, throw a\n      <b>SyntaxError</b> exception.</p>\n    "}