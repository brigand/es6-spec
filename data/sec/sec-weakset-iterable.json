{"id":"sec-weakset-iterable","html":"\n        <h1><span class=\"secnum\" id=\"sec-23.4.1.1\"><a href=\"/sec/sec-weakset-iterable.html\" title=\"link to this section\">23.4.1.1</a></span> WeakSet ( [ iterable ] )</h1>\n\n        <p class=\"normalbefore\">When the <code>WeakSet</code> function is called with optional argument <var>iterable</var> the\n        following steps are taken:</p>\n\n        <ol class=\"proc\">\n          <li>If NewTarget is <b>undefined</b>, throw a <b>TypeError</b> exception.</li>\n          <li>Let <i>set</i> be <a href=\"/sec/sec-ordinarycreatefromconstructor.html\">OrdinaryCreateFromConstructor</a>(NewTarget,\n              <code>&quot;%WeakSetPrototype%&quot;</code>, &#xAB;&#x200D;[[WeakSetData]]&#xBB; ).</li>\n          <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>set</i>).</li>\n          <li>Set <i>set&#x2019;s</i> [[WeakSetData]] <a href=\"/sec/sec-object-internal-methods-and-internal-slots.html\">internal slot</a>\n              to a new empty <a href=\"/sec/sec-list-and-record-specification-type.html\">List</a>.</li>\n          <li>If <i>iterable</i> is not present, let <i>iterable</i> be <b>undefined</b>.</li>\n          <li>If <i>iterable</i> is either <b>undefined</b> or <b>null</b>, let <i>iter</i> be <b>undefined</b>.</li>\n          <li>Else,\n            <ol class=\"block\">\n              <li>Let <i>adder</i> be <a href=\"/sec/sec-get-o-p.html\">Get</a>(<i>set</i>, <code>&quot;add&quot;</code>)<b>.</b></li>\n              <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>adder</i>).</li>\n              <li>If <a href=\"/sec/sec-iscallable.html\">IsCallable</a>(<i>adder</i>) is <b>false</b>, throw a <b>TypeError</b>\n                  exception.</li>\n              <li>Let <i>iter</i> be <a href=\"/sec/sec-getiterator.html\">GetIterator</a>(<i>iterable</i>).</li>\n              <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>iter</i>).</li>\n            </ol>\n          </li>\n          <li>If <i>iter</i> is <b>undefined</b>, return <i>set</i>.</li>\n          <li>Repeat\n            <ol class=\"block\">\n              <li>Let <i>next</i> be <a href=\"/sec/sec-iteratorstep.html\">IteratorStep</a>(<i>iter</i>).</li>\n              <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>next</i>).</li>\n              <li>If <i>next</i> is <b>false</b>, return <i>set</i>.</li>\n              <li>Let <i>nextValue</i> be <a href=\"/sec/sec-iteratorvalue.html\">IteratorValue</a>(<i>next</i>).</li>\n              <li><a href=\"/sec/sec-returnifabrupt.html\">ReturnIfAbrupt</a>(<i>nextValue</i>).</li>\n              <li>Let <i>status</i> be <a href=\"/sec/sec-call.html\">Call</a>(<i>adder</i>, <i>set</i>, &#xAB;<i>nextValue</i>\n                  &#xBB;).</li>\n              <li>If <i>status</i> is an <a href=\"/sec/sec-completion-record-specification-type.html\">abrupt completion</a>, return <a href=\"/sec/sec-iteratorclose.html\">IteratorClose</a>(<i>iter</i>, <i>status</i>).</li>\n            </ol>\n          </li>\n        </ol>\n      "}